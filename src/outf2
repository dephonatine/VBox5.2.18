recompiler/VBoxREMWrapper.cpp:1369:    { "memcpy",                                (void *)(uintptr_t)&memcpy,                          &g_aArgsmemcpy[0],                          RT_ELEMENTS(g_aArgsmemcpy),                            REMFNDESC_FLAGS_RET_INT,    sizeof(void *), NULL },
recompiler/VBoxREMWrapper.cpp:1373:memcpy              memcpy
recompiler/VBoxREMWrapper.cpp:1809:            memcpy(pb, s_aTemplates[i].pvStart, cb);
recompiler/VBoxREMWrapper.cpp:1832:            memcpy(pb, s_aTemplates[i].pvStart, cb);
recompiler/VBoxREMWrapper.cpp:1889:            memcpy(pDesc->pvWrapper, s_aTemplates[i].pvStart, cb);
recompiler/VBoxREMWrapper.cpp:1901:            memcpy(pDesc->pvWrapper, (void *)&WrapGCC2MSCVariadictInt, cb);
recompiler/VBoxREMWrapper.cpp:1923:            memcpy(pDesc->pvWrapper, s_aTemplates[i].pvStart, cb);
recompiler/cutils.c:713:        memcpy(p, qiov->iov[i].iov_base, qiov->iov[i].iov_len);
recompiler/cutils.c:728:        memcpy(qiov->iov[i].iov_base, p, copy);
recompiler/VBoxRecompiler.c:92: * This is probably faster than *calling* memcpy.
recompiler/VBoxRecompiler.c:5491:void *memcpy(void *dst, const void *src, size_t size)
recompiler/exec.c:2050:    memcpy(new_env, env, sizeof(CPUState));
recompiler/exec.c:3784:            memcpy(p, buf, l);
recompiler/exec.c:3792:            memcpy(buf, p, l);
recompiler/exec.c:3869:                memcpy(ptr, buf, l);
recompiler/exec.c:3922:                memcpy(buf, ptr, l);
recompiler/exec.c:3965:            memcpy(ptr, buf, l);
recompiler/tcg/tcg-dyngen.c:333:		memcpy(gen_code_ptr, plt_bundle, sizeof(plt_bundle));
recompiler/tcg/tcg.c:1660:    memcpy(new_args + nb_oargs + nb_iargs,
recompiler/tcg/i386/tcg-target.c:978:    memcpy(new_args, args+1, 5*sizeof(TCGArg));
recompiler/target-i386/op_helper.c:5938:        memcpy(&old_buf, &env1->jmp_env, sizeof(old_buf));
recompiler/target-i386/op_helper.c:5975:        memcpy(&env1->jmp_env, &old_buf, sizeof(old_buf));
recompiler/tests/test-mmap.c:106:		memcpy (dummybuf, p1, pagesize);
recompiler/tests/test-mmap.c:107:		memcpy (dummybuf, p2, pagesize);
recompiler/tests/test-mmap.c:108:		memcpy (dummybuf, p3, pagesize);
recompiler/tests/test-mmap.c:109:		memcpy (dummybuf, p4, pagesize);
recompiler/tests/test-mmap.c:110:		memcpy (dummybuf, p5, pagesize);
recompiler/tests/test-mmap.c:140:	memcpy (dummybuf, p1, pagesize);
recompiler/tests/test-mmap.c:162:		memcpy (dummybuf, p1, pagesize);
recompiler/tests/test-mmap.c:169:		memcpy (dummybuf, p2, pagesize);
recompiler/tests/test-mmap.c:182:		memcpy (dummybuf, p3, pagesize);
recompiler/tests/test-mmap.c:220:		memcpy (dummybuf, p1, pagesize);
recompiler/tests/test-mmap.c:251:		memcpy (p1, dummybuf, pagesize);
recompiler/tests/test-mmap.c:299:		memcpy (dummybuf, p1, pagesize);
recompiler/tests/test-mmap.c:300:		memcpy (dummybuf, p2, pagesize);
recompiler/tests/test-mmap.c:301:		memcpy (dummybuf, p3, pagesize);
recompiler/tests/test-mmap.c:427:		memcpy (dummybuf, p1, pagesize);
recompiler/tests/test-mmap.c:428:		memcpy (dummybuf, p2, pagesize);
recompiler/tests/test-mmap.c:429:		memcpy (dummybuf, p3, pagesize);
recompiler/tests/test-mmap.c:430:		memcpy (dummybuf, p4, pagesize);
recompiler/tests/sha1.c:82:    memcpy(block, buffer, 64);
recompiler/tests/sha1.c:159:        memcpy(&context->buffer[j], data, (i = 64-j));
recompiler/tests/sha1.c:167:    memcpy(&context->buffer[j], &data[i], len - i);
recompiler/tests/test-i386.c:1637:    memcpy(vm86_mem + (VM86_CODE_CS << 4) + VM86_CODE_IP,
recompiler/Sun/testmath.c:752:    memcpy(&my_fptags, &env->fptags, sizeof(my_fptags));
outf:802:libs/libpng-1.2.54/CHANGES:949:  Changed all instances of memcpy, strcpy, and strlen to png_memcpy, png_strcpy,
bldprogs/VBoxDef2LazyLoad.cpp:256:            memcpy(pExp->szName, pchName, cchName);
bldprogs/VBoxDef2LazyLoad.cpp:266:                memcpy(pExp->pszUnstdcallName, pchName + 1, cchName - 1 - cchStdcall);
bldprogs/scmparser.cpp:238:    memcpy(pszBody, &pchLine[off], cchBody);
bldprogs/scmparser.cpp:302:            memcpy(&pszBody[cchBody], &pchLine[off], cchAppend);
bldprogs/scmparser.cpp:541:                            memcpy(&pszBody[cchBody], &pchLine[offLineStart], cchAppend);
bldprogs/scmparser.cpp:770:                        memcpy(&pszBody[cchBody], &pchLine[offLineStart], cchAppend);
bldprogs/VBoxTpG.cpp:227:    memcpy(pStr->szString, pch, cch);
bldprogs/VBoxTpG.cpp:881:        memcpy(psz, pszOutput, cch);
bldprogs/VBoxTpG.cpp:882:        memcpy(psz + cch, ".asm", sizeof(".asm"));
bldprogs/VBoxTpG.cpp:950:    memcpy(&szTmp[3], pszName, cchName);
bldprogs/VBoxTpG.cpp:1158:    memcpy(&szTmp[3], pszName, cchName);
bldprogs/VBoxTpG.cpp:2050:                    memcpy(szArg, pszWord, cchWord);
bldprogs/VBoxTpG.cpp:2061:                    memcpy(&szArg[cchArg], pszWord, cchWord);
bldprogs/VBoxCPP.cpp:709:    memcpy(&pStrBuf->pszBuf[cchBuf], pchSrc, cchSrc);
bldprogs/VBoxCPP.cpp:1746:    memcpy(pszCur, pchReplacement, cchReplacement);
bldprogs/VBoxCPP.cpp:2557:        memcpy(pszDst, pszDefine, cchDefine);
bldprogs/VBoxCPP.cpp:2704:    memcpy(pszDst, pszDefine, cchDefine);
bldprogs/VBoxCPP.cpp:2715:    memcpy(pMacro->szValue, pszValue, cchValue);
bldprogs/VBoxCPP.cpp:2818:    memcpy((char *)pMacro->Core.pszString, pszDefine, cchDefine);
bldprogs/VBoxCPP.cpp:2828:    memcpy(pMacro->szValue, pszValue, cchValue);
bldprogs/VBoxCPP.cpp:5236:    memcpy(pInput->szName, pThis->pszInput, cchName + 1);
bldprogs/filesplitter.cpp:318:        memcpy(pszFilename, pcszOutDir, cchOutDir);
bldprogs/filesplitter.cpp:320:        memcpy(pszFilename + cchOutDir + 1, pcszStartFilename, cchFilename);
bldprogs/scm.cpp:1445:                        memcpy(pszDst, pchDir, cchDir);
bldprogs/scm.cpp:1459:                    memcpy(pszDst, pszSrc, pszSrcNext - pszSrc);
bldprogs/scm.cpp:1565:                        memcpy(&pszFreeLine[cchTotal], pchLine, cchLine);
bldprogs/scm.cpp:2333:        memcpy(&pszBuf[cchDir - 1], pEntry->szName, pEntry->cbName + 1);
bldprogs/scm.cpp:2351:            memcpy(&pszBuf[cchDir - 1 + pEntry->cbName], "/.", sizeof("/."));
bldprogs/scm.cpp:2714:    memcpy(&s_aOpts[RT_ELEMENTS(s_aOpts) - RT_ELEMENTS(g_aScmOpts)], &g_aScmOpts[0], sizeof(g_aScmOpts));
bldprogs/scmsubversion.cpp:191:        memcpy(pszDst, pchPath, cchPath);
bldprogs/scmsubversion.cpp:252:            memcpy(*ppszBuffer + *poffCur, szTmp, cbRead);
bldprogs/scmsubversion.cpp:904:                memcpy(&pszDst[cchDst], pszSuff, cchSuff + 1);
bldprogs/scmstream.cpp:887:    memcpy(pvBuf, &pStream->pch[pStream->off], cbToRead);
bldprogs/scmstream.cpp:1038:    memcpy(&pStream->pch[off], pchLine, cchLine);
bldprogs/scmstream.cpp:1156:    memcpy(&pStream->pch[off], pchBuf, cchBuf);
VBox/ImageMounter/VBoxFUSE/VBoxFUSE.cpp:381:    pNode->pszName = (char *)memcpy((uint8_t *)pNode + RT_ALIGN_Z(cbNode, 8), pszName, cchName + 1);
VBox/ImageMounter/VBoxFUSE/VBoxFUSE.cpp:1215:                            memcpy(pbBuf, &abBlock[offFile & VBOXFUSE_MIN_SIZE_MASK_OFF], cbBuf);
VBox/ImageMounter/VBoxFUSE/VBoxFUSE.cpp:1227:                                memcpy(pbBuf, &abBlock[offFile & VBOXFUSE_MIN_SIZE_MASK_OFF], cbCopy);
VBox/ImageMounter/VBoxFUSE/VBoxFUSE.cpp:1255:                                memcpy(pbBuf, &abBlock[0], cbBuf);
VBox/ImageMounter/VBoxFUSE/VBoxFUSE.cpp:1336:                            memcpy(&abBlock[offFile & VBOXFUSE_MIN_SIZE_MASK_OFF], pbBuf, cbBuf);
VBox/ImageMounter/VBoxFUSE/VBoxFUSE.cpp:1351:                                memcpy(&abBlock[offFile & VBOXFUSE_MIN_SIZE_MASK_OFF], pbBuf, cbCopy);
VBox/ImageMounter/VBoxFUSE/VBoxFUSE.cpp:1381:                                memcpy(&abBlock[0], pbBuf, cbBuf);
VBox/ValidationKit/utils/TestExecServ/TestExecService.cpp:236:    memcpy(Reply.achOpcode, pszOpcode, sizeof(Reply.achOpcode));
VBox/ValidationKit/utils/TestExecServ/TestExecService.cpp:339:        memcpy(pReply->achOpcode, pszOpcode, sizeof(pReply->achOpcode));
VBox/ValidationKit/utils/TestExecServ/TestExecService.cpp:346:        memcpy(pReply->achOpcode, pszOpcode, cchOpcode);
VBox/ValidationKit/utils/TestExecServ/TestExecService.cpp:524:    memcpy(&pszNew[offVar], pszValue, cchValue);
VBox/ValidationKit/utils/TestExecServ/TestExecService.cpp:1795:                    memcpy(&pStdInBuf->pch[pStdInBuf->cb], pch, cb);
VBox/ValidationKit/utils/TestExecServ/TestExecService.cpp:1832:                        memcpy(&pStdInBuf->pch[pStdInBuf->cb], pch, cb);
VBox/ValidationKit/utils/TestExecServ/TestExecService.cpp:3314:    memcpy(paOptions, s_aBaseOptions, sizeof(s_aBaseOptions));
VBox/ValidationKit/utils/TestExecServ/TestExecService.cpp:3318:        memcpy(&paOptions[cOptions], g_apTransports[i]->paOpts, g_apTransports[i]->cOpts * sizeof(RTGETOPTDEF));
VBox/ValidationKit/utils/cpu/cidet-app.cpp:779:    memcpy(pbUsingBuf + pBuf->offActive, pvSrc, pBuf->cbActive);
VBox/ValidationKit/utils/cpu/cidet-app.cpp:906:    memcpy(pbDst, pvInstr, pBuf->cbActive);
VBox/ValidationKit/utils/cpu/cpu-numa.cpp:150:                memcpy(pvTest, (uint8_t *)pvTest + cbTestSet / 2, cbTestSet / 2);
VBox/ValidationKit/utils/cpu/cidet-core.cpp:2146:    memcpy(&pDis->abInstr[offInstr], &pThis->abInstr[offInstr], cbMaxRead);
VBox/ValidationKit/utils/cpu/exceptionsR3.cpp:112:            memcpy((void *)&g_SigInfo, pSigInfo, sizeof(g_SigInfo));
VBox/ValidationKit/utils/usb/UsbTestService.cpp:236:    memcpy(Reply.achOpcode, pszOpcode, sizeof(Reply.achOpcode));
VBox/ValidationKit/utils/usb/UsbTestService.cpp:341:        memcpy(pReply->Hdr.achOpcode, pszOpcode, sizeof(pReply->Hdr.achOpcode));
VBox/ValidationKit/utils/usb/UsbTestService.cpp:348:        memcpy(pReply->Hdr.achOpcode, pszOpcode, cchOpcode);
VBox/ValidationKit/utils/usb/UsbTestService.cpp:1482:    memcpy(paOptions, s_aBaseOptions, sizeof(s_aBaseOptions));
VBox/ValidationKit/utils/usb/UsbTestService.cpp:1486:        memcpy(&paOptions[cOptions], g_apTransports[i]->paOpts, g_apTransports[i]->cOpts * sizeof(RTGETOPTDEF));
VBox/ValidationKit/utils/nt/ntFlushVirtualMemory.cpp:416:     * mapping, allowing for simple file initialization and memcpy checking.
VBox/ValidationKit/bootsectors/bs3kit/bs3kit.h:1682: * CRT style memcpy.
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:454:        memcpy(&pThis->abData[pThis->cbRec], pvData, cbData);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:571:    memcpy(pCur->szName, pchName, cchName);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:824:                memcpy(pbDst, pbRawData, RT_MIN(cbData, cbRawData));
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:864:    memcpy(&pThis->aFixupps[iFixupp].abData[pThis->aFixupps[iFixupp].cbRec], pvSubRec, cbSubRec);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:2032:        memcpy(pszShortName, pSym->N.ShortName, 8);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:2096:        memcpy(szName, paShdrs[i].Name, sizeof(paShdrs[i].Name));
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:3988:    memcpy(&pOmfStuff->pchStrTab[offSrcTab], pchSrcFile, cchSrcFile);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:4537:    memcpy(pszCopy + 1, pszName, cchName + 1);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:4765:                    memcpy(szSegNm, pOmfStuff->aGroups[j].pszSeg, cchSegNm);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:4772:                        memcpy(&szSegNm[cchSegNm], s_aSuffixes[iSuffix].psz, s_aSuffixes[iSuffix].cch + 1);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:5088:                            memcpy(szName, pchName, cchName);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:5360:    memcpy(szOrgFile, pszFile, cchFile);
VBox/ValidationKit/bootsectors/bs3kit/VBoxBs3ObjConverter.cpp:5361:    memcpy(&szOrgFile[cchFile], ".original", sizeof(".original"));
VBox/Disassembler/DisasmCore.cpp:251:    memcpy(&pDis->abInstr[offInstr], pbSrc, cbToRead);
VBox/Disassembler/DisasmCore.cpp:2992:            memcpy(pDis->abInstr, pvPrefetched, sizeof(pDis->abInstr));
VBox/Disassembler/DisasmCore.cpp:2997:            memcpy(pDis->abInstr, pvPrefetched, cbPretched);
VBox/Disassembler/testcase/tstDisasm-1.cpp:94:    memcpy(&pDis->abInstr[offInstr], (void *)((uintptr_t)pDis->uInstrAddr + offInstr), cbMaxRead);
VBox/Disassembler/testcase/tstDisasm-2.cpp:184:        memcpy(&pState->Dis.abInstr[offInstr], pState->pbNext, cbToRead);
VBox/Disassembler/testcase/tstDisasm-2.cpp:199:            memcpy(&pState->Dis.abInstr[offInstr], pState->pbNext, pState->cbLeft);
VBox/Disassembler/testcase/tstDisasm-2.cpp:369:            memcpy(abInstr, State.Dis.abInstr, sizeof(State.Dis.abInstr));
VBox/Disassembler/DisasmFormatYasm.cpp:330:                    memcpy(pszDst, (pszSrc), (cchSrc)); \
VBox/Disassembler/DisasmFormatYasm.cpp:336:                    memcpy(pszDst, (pszSrc), cchDst - 1); \
VBox/RDP/client-1.8.3/secure.c:168:	memcpy(pre_master_secret, client_random, 24);
VBox/RDP/client-1.8.3/secure.c:169:	memcpy(pre_master_secret + 24, server_random, 24);
VBox/RDP/client-1.8.3/secure.c:176:	memcpy(g_sec_sign_key, key_block, 16);
VBox/RDP/client-1.8.3/secure.c:197:	memcpy(g_sec_decrypt_update_key, g_sec_decrypt_key, 16);
VBox/RDP/client-1.8.3/secure.c:198:	memcpy(g_sec_encrypt_update_key, g_sec_encrypt_key, 16);
VBox/RDP/client-1.8.3/secure.c:254:	memcpy(signature, md5sig, siglen);
VBox/RDP/client-1.8.3/cache.c:353:	memcpy(text->data, data, length);
VBox/RDP/client-1.8.3/cache.c:392:			memcpy(&g_deskcache[offset], data, cx);
VBox/RDP/client-1.8.3/cache.c:476:		memcpy(bd, brush_data, sizeof(BRUSHDATA));
VBox/RDP/client-1.8.3/disk.c:965:		memcpy(&pfinfo->notify, &notify, sizeof(NOTIFY));
VBox/RDP/client-1.8.3/utils.c:75:			memcpy(pe, esc, 3);
VBox/RDP/client-1.8.3/utils.c:96:	memcpy(ns, str, strlen(str) + 1);
VBox/RDP/client-1.8.3/utils.c:231:	memcpy(dest, src, strlen(src) + 1);
VBox/RDP/client-1.8.3/parse.h:99:#define in_uint8a(s,v,n)	{ memcpy(v,(s)->p,n); (s)->p += n; }
VBox/RDP/client-1.8.3/parse.h:102:#define out_uint8p(s,v,n)	{ memcpy((s)->p,v,n); (s)->p += n; }
VBox/RDP/client-1.8.3/xclip.c:944:				memcpy(g_clip_buffer + g_clip_buflen, data, nitems);
VBox/RDP/client-1.8.3/xclip.c:982:	memcpy(formats_data, data, length);
VBox/RDP/client-1.8.3/rdp5.c:77:			memcpy((ns->data), (unsigned char *) (g_mppc_dict.hist + roff), rlen);
VBox/RDP/client-1.8.3/rdesktop.c:1333:	memcpy(addr.sun_path, EGD_SOCKET, sizeof(EGD_SOCKET));
VBox/RDP/client-1.8.3/scard.c:1090:		memcpy(dstIter->rgbAtr, srcIter->rgbAtr, MAX_ATR_SIZE * sizeof(unsigned char));
VBox/RDP/client-1.8.3/scard.c:1109:		memcpy(dstIter->rgbAtr, srcIter->rgbAtr, MAX_ATR_SIZE * sizeof(unsigned char));
VBox/RDP/client-1.8.3/scard.c:1338:	memcpy(ResArray, rsArray, readerCount * sizeof(SERVER_SCARD_READERSTATE_A));
VBox/RDP/client-1.8.3/scard.c:1373:					memcpy(ResArray + j, rsCur, sizeof(SCARD_READERSTATE));
VBox/RDP/client-1.8.3/scard.c:1471:	memcpy(dstBytes, srcBytes, bytesToCopy);
VBox/RDP/client-1.8.3/scard.c:1484:	memcpy(dstBytes, srcBytes, bytesToCopy);
VBox/RDP/client-1.8.3/scard.c:1533:		memcpy(tmp, pioSendPci, sizeof(SERVER_SCARD_IO_REQUEST));
VBox/RDP/client-1.8.3/scard.c:1577:			memcpy(tmp, pioRecvPci, sizeof(SERVER_SCARD_IO_REQUEST));
VBox/RDP/client-1.8.3/scard.c:2201:			memcpy(&cc, pOutBuffer + 2 + i * 6, 4);
VBox/RDP/client-1.8.3/scard.c:2206:			memcpy(pOutBuffer + 2 + i * 6, &cc, 4);
VBox/RDP/client-1.8.3/scard.c:2435:			memcpy(d->data, s->data, (size_t) (s->end) - (size_t) (s->data));
VBox/RDP/client-1.8.3/scard.c:2437:			memcpy(d->data, s->data, (size_t) (s->p) - (size_t) (s->data));
VBox/RDP/client-1.8.3/rdp.c:1501:		memcpy((ns->data), (unsigned char *) (g_mppc_dict.hist + roff), rlen);
VBox/RDP/client-1.8.3/ssl.c:107:	memcpy(inr, in, len);
VBox/RDP/client-1.8.3/ssl.c:138:	memcpy(inr, in, len);
VBox/RDP/client-1.8.3/ewmhints.c:467:			memcpy(new_set, cur_set, nitems * sizeof(unsigned long));
VBox/RDP/client-1.8.3/ewmhints.c:531:		memcpy(new_set, cur_set, i * sizeof(unsigned long));
VBox/RDP/client-1.8.3/ewmhints.c:533:		memcpy(new_set + i, cur_set + i + icon_size,
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:220:				memcpy(tmpdata + (i * samplewidth),
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:225:				memcpy(tmpdata + (i * samplewidth),
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:328:				memcpy(&cval1,
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:331:				memcpy(&cval2,
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:337:				memcpy(*out + (i * resample_to_channels * samplewidth) +
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:346:				memcpy(&sval1,
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:349:				memcpy(&sval2,
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:355:				memcpy(*out + (i * resample_to_channels * samplewidth) +
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:362:			memcpy(*out + (i * resample_to_channels * samplewidth) + (samplewidth * j),
VBox/RDP/client-1.8.3/rdpsnd_dsp.c:425:		memcpy(out.data, data, size);
VBox/RDP/client-1.8.3/rdpsnd.c:200:		memcpy(record_buffer + record_buffer_size, data, chunk);
VBox/RDP/client-1.8.3/pstcache.c:100:	memcpy(cellhdr.key, key, sizeof(HASH_KEY));
VBox/RDP/client-1.8.3/pstcache.c:141:			memcpy(keylist[idx], cellhdr.key, sizeof(HASH_KEY));
VBox/RDP/client-1.8.3/xwin.c:152:   ('host' is the machine running rdesktop; the host simply memcpy's
VBox/RDP/client-1.8.3/xwin.c:4159:	memcpy(sw->icon_buffer + sw->icon_offset, data, chunk_len);
VBox/RDP/client-1.8.3/orders.c:166:	memcpy(out_brush, in_brush, sizeof(BRUSH));
VBox/RDP/client-1.8.3/orders.c:949:		memcpy(&inverted[(height - y - 1) * (width * Bpp)], &data[y * (width * Bpp)],
VBox/RDP/client-1.8.3/orders.c:1073:			memcpy(&bmpdata[(height - y - 1) * (width * Bpp)],
VBox/RDP/client-1.8.3/channels.c:187:		memcpy(in->p, s->p, thislength);
VBox/RDP/client-1.8.3/tcp.c:493:		memcpy(&servaddr.sin_addr, nslookup->h_addr, sizeof(servaddr.sin_addr));
VBox/RDP/client-1.8.3/licence.c:57:	memcpy(g_licence_sign_key, key_block, 16);
VBox/RDP/client-1.8.3/licence.c:260:	memcpy(out_token, in_token, LICENCE_TOKEN_SIZE);
VBox/RDP/client-1.8.3/licence.c:268:	memcpy(sealed_buffer, decrypt_token, LICENCE_TOKEN_SIZE);
VBox/RDP/client-1.8.3/licence.c:269:	memcpy(sealed_buffer + LICENCE_TOKEN_SIZE, hwid, LICENCE_HWID_SIZE);
VBox/RDP/client-1.8.3/cliprdr.c:99:		memcpy(last_formats, formats_data, formats_data_length);
VBox/Additions/linux/lightdm-greeter/liblightdm-gobject-1.5.0/greeter.c:158:    memcpy (buffer + *offset, value, length);
VBox/Additions/linux/lightdm-greeter/liblightdm-gobject-1.5.0/greeter.c:195:    memcpy (value, message + *offset, length);
VBox/Additions/linux/drm/vbox_mode.c:748:	memcpy(dst + mask_size, src, width * height * 4);
VBox/Additions/linux/sharedfolders/utils.c:468:        memcpy(&tmp->String.utf8[0], d_name, d_len + 1);
VBox/Additions/linux/sharedfolders/utils.c:471:        memcpy(&tmp->String.utf8[0], p_name, p_len);
VBox/Additions/linux/sharedfolders/utils.c:473:        memcpy(&tmp->String.utf8[p_len + 1], d_name, d_len);
VBox/Additions/linux/sharedfolders/utils.c:632:        memcpy(name, utf8_name, utf8_len + 1);
VBox/Additions/linux/sharedfolders/dirops.c:851:    memcpy(ssymname->String.utf8, symname, symname_len);
VBox/Additions/linux/sharedfolders/mount.vboxsf.c:264:                    memcpy(opts->nls_name, val, val_len);
VBox/Additions/linux/sharedfolders/mount.vboxsf.c:273:                    memcpy(opts->convertcp, val, val_len);
VBox/Additions/linux/sharedfolders/vfsmod.c:96:    memcpy(str_name->String.utf8, info->name, name_len + 1);
VBox/Additions/haiku/SharedFolders/vboxsf.c:161:        memcpy(rv, s, sizeof(SHFLSTRING) + s->u16Length);
VBox/Additions/haiku/SharedFolders/vboxsf.c:171:        memcpy(rv, s1, sizeof(SHFLSTRING) + s1->u16Length);
VBox/Additions/haiku/SharedFolders/vboxsf.c:770:    memcpy(buffer, other_buffer, l);
VBox/Additions/haiku/SharedFolders/vboxsf.c:790:    memcpy(other_buffer, buffer, l);
VBox/Additions/haiku/VBoxVideo/accelerant/accelerant.cpp:349:    memcpy(info, edid_data, 128);
VBox/Additions/x11/VBoxClient/chk_stubs.c:48:/* Furthermore, wrap references to memcpy to force them to go to the right
VBox/Additions/x11/VBoxClient/chk_stubs.c:54:asm (".symver memcpy, memcpy@GLIBC_2.2.5");
VBox/Additions/x11/VBoxClient/chk_stubs.c:57:    return memcpy(dest, src, n);
VBox/Additions/x11/VBoxClient/Makefile.kmk:74:# This forces the memcpy references in the static libraries to go to
VBox/Additions/x11/VBoxClient/Makefile.kmk:75:# __wrap_memcpy, which we can wrap around memcpy@GLIBC_2.2.5.  I do not know
VBox/Additions/x11/VBoxClient/Makefile.kmk:76:# how else to do that without recompiling or implementing our own memcpy.
VBox/Additions/x11/VBoxClient/Makefile.kmk:79:	-Wl,--wrap=memcpy
VBox/Additions/x11/VBoxClient/draganddrop.cpp:1948:        memcpy(m_pvSelReqData, pvData, cbData);
VBox/Additions/x11/VBoxClient/draganddrop.cpp:2241:                            memcpy(pvDataTmp, pcData, cbData);
VBox/Additions/x11/vboxvideo/pointer.c:414:    memcpy(p + sizeMask, bitsp->argb, w * h * 4);
VBox/Additions/x11/vboxvideo/edid.c:148:    memcpy(pchEDID, g_acszEDIDBase, EDID_SIZE);
VBox/Additions/x11/vboxvideo/edid.c:161:    memcpy(pch, pEDIDMon, sizeof(xf86Monitor));
VBox/Additions/x11/x11include/xorg-server-1.13.0/fb.h:73:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/libdrm-2.4.13/intel_bufmgr_priv.h:89:    * drm_intel_bo will map/memcpy/unmap.
VBox/Additions/x11/x11include/libdrm-2.4.13/intel_bufmgr_priv.h:98:    * drm_intel_bo will map/memcpy/unmap.
VBox/Additions/x11/x11include/libdrm-2.4.13/radeon_cs.h:197:    memcpy(cs->packets + cs->cdw, &qword, sizeof(uint64_t));
VBox/Additions/x11/x11include/libdrm-2.4.13/radeon_cs.h:206:	memcpy(cs->packets + cs->cdw, data, size * 4);
VBox/Additions/x11/x11include/libdrm-2.4.13/nouveau_pushbuf.h:57:	memcpy(chan->pushbuf->cur, data, size * 4);
VBox/Additions/x11/x11include/xorg-server-1.18.0/fb.h:72:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.4.2/OScompiler.h:31:#define MOVE( src, dst, length ) memcpy( dst, src, length)
VBox/Additions/x11/x11include/xorg-server-1.4.2/fb.h:77:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.4.2/xf86_libc.h:343:#undef memcpy
VBox/Additions/x11/x11include/xorg-server-1.4.2/xf86_libc.h:344:#define memcpy(vp,cvp,I)	xf86memcpy(vp,cvp,I)
VBox/Additions/x11/x11include/xorg-server-1.4.2/unpack.h:51:#define __GLX_MEM_COPY(dst,src,n)	memcpy(dst,src,n)
VBox/Additions/x11/x11include/xorg-server-1.4.2/exa.h:515:     * was responsible for syncing (as it was implemented using memcpy() in
VBox/Additions/x11/x11include/xorg-server-1.8.0/fb.h:78:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.8.0/unpack.h:46:#define __GLX_MEM_COPY(dst,src,n)	memcpy(dst,src,n)
VBox/Additions/x11/x11include/xorg-server-1.10.0/fb.h:74:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.9.0/fb.h:74:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.9.0/unpack.h:46:#define __GLX_MEM_COPY(dst,src,n)	memcpy(dst,src,n)
VBox/Additions/x11/x11include/XFree86-4.3/X11/extensions/xtrapemacros.h:70:    memcpy((tcv)->v.flags.e, (a), sizeof((tcv)->v.flags.e))
VBox/Additions/x11/x11include/XFree86-4.3/X11/extensions/xtrapemacros.h:110:    memcpy((a), (avail)->valid, sizeof((avail)->valid))
VBox/Additions/x11/x11include/XFree86-4.3/X11/extensions/xtrapemacros.h:142:    memcpy((a), (cfg)->flags.e, sizeof((cfg)->flags.e))
VBox/Additions/x11/x11include/XFree86-4.3/X11/extensions/xtrapemacros.h:178:    memcpy((a), (cur)->state_flags, sizeof((cur)->state_flags))
VBox/Additions/x11/x11include/XFree86-4.3/X11/extensions/xtrapemacros.h:229:    memcpy((a), (tc)->values.tc_flags, sizeof((tc)->values.tc_flags))
VBox/Additions/x11/x11include/XFree86-4.3/X11/extensions/xtrapemacros.h:278:#define XETrapGetValues(tc)      memcpy((x),(tc)->values,sizeof((tc)->values))
VBox/Additions/x11/x11include/XFree86-4.3/X11/Xfuncs.h:77:#define memcpy(dst,src,len) bcopy((char *)(src),(char *)(dst),(int)(len))
VBox/Additions/x11/x11include/XFree86-4.3/Xserver/xf86_libc.h:305:#undef memcpy
VBox/Additions/x11/x11include/XFree86-4.3/Xserver/xf86_libc.h:306:#define memcpy(vp,cvp,I)	xf86memcpy(vp,cvp,I)
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:254:   memcpy(&(p).pws, (p).pwp, sizeof(struct passwd));
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:285:   (memcpy(&(p).pws, (p).pwp, sizeof(struct passwd)), \
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:425:   (memcpy(&(hp).hent, (hp).hptr, sizeof(struct hostent)), \
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:431:   (memcpy(&(sp).sent, (sp).sptr, sizeof(struct servent)), \
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:576:    (memcpy(&((p).dir_entry), (p).result, (p).result->d_reclen), \
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:611:       (memcpy(&((p).dir_entry), (p).result, (p).result->d_reclen),	\
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:884:    (memcpy(&(p).buf, (p).result, sizeof((p).buf)), (p).result = &(p).buf) : \
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:891:    (memcpy(&(p).buf, (p).result, sizeof((p).buf)), (p).result = &(p).buf) : \
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:1015: ( memcpy(&(p).grp, (p).pgrp, sizeof(struct group)), \
VBox/Additions/x11/x11include/xproto-7.0.18/X11/Xos_r.h:1024: ( memcpy(&(p).grp, (p).pgrp, sizeof(struct group)), \
VBox/Additions/x11/x11include/xorg-server-1.17.1/fb.h:72:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.0.1/OScompiler.h:33:#define MOVE( src, dst, length ) memcpy( dst, src, length)
VBox/Additions/x11/x11include/xorg-server-1.0.1/glx_ansic.h:98:#define __glXMemcpy(dest, src, n)	memcpy(dest, src, n)
VBox/Additions/x11/x11include/xorg-server-1.0.1/xf86_libc.h:349:#undef memcpy
VBox/Additions/x11/x11include/xorg-server-1.0.1/xf86_libc.h:350:#define memcpy(vp,cvp,I)	xf86memcpy(vp,cvp,I)
VBox/Additions/x11/x11include/xorg-server-1.0.1/unpack.h:52:#define __GLX_MEM_COPY(dst,src,n)	memcpy(dst,src,n)
VBox/Additions/x11/x11include/xorg-server-1.15.0/fb.h:72:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.7.7/fb.h:78:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.7.7/unpack.h:46:#define __GLX_MEM_COPY(dst,src,n)	memcpy(dst,src,n)
VBox/Additions/x11/x11include/xorg-server-1.14.0/fb.h:72:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.12.0/fb.h:74:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.16.0/fb.h:72:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/pixman-0.16.0/pixman-accessor.h:35:    memcpy(dst, src, size)
VBox/Additions/x11/x11include/xorg-server-1.5.3/OScompiler.h:31:#define MOVE( src, dst, length ) memcpy( dst, src, length)
VBox/Additions/x11/x11include/xorg-server-1.5.3/fb.h:78:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.5.3/unpack.h:55:#define __GLX_MEM_COPY(dst,src,n)	if (src && dst) memcpy(dst,src,n)
VBox/Additions/x11/x11include/xorg-server-1.5.3/exa.h:517:     * was responsible for syncing (as it was implemented using memcpy() in
VBox/Additions/x11/x11include/xorg-server-1.11.0/fb.h:74:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.3.0.0/OScompiler.h:32:#define MOVE( src, dst, length ) memcpy( dst, src, length)
VBox/Additions/x11/x11include/xorg-server-1.3.0.0/xf86_libc.h:343:#undef memcpy
VBox/Additions/x11/x11include/xorg-server-1.3.0.0/xf86_libc.h:344:#define memcpy(vp,cvp,I)	xf86memcpy(vp,cvp,I)
VBox/Additions/x11/x11include/xorg-server-1.3.0.0/unpack.h:55:#define __GLX_MEM_COPY(dst,src,n)	if (src && dst) memcpy(dst,src,n)
VBox/Additions/x11/x11include/xorg-server-1.3.0.0/exa.h:515:     * was responsible for syncing (as it was implemented using memcpy() in
VBox/Additions/x11/x11include/xorg-server-1.6.5/fb.h:78:#define MEMCPY_WRAPPED(dst, src, size) memcpy((dst), (src), (size))
VBox/Additions/x11/x11include/xorg-server-1.6.5/unpack.h:50:#define __GLX_MEM_COPY(dst,src,n)	if (src && dst) memcpy(dst,src,n)
VBox/Additions/x11/x11include/xorg-server-1.6.5/exa.h:517:     * was responsible for syncing (as it was implemented using memcpy() in
VBox/Additions/x11/x11include/xorg-server-1.1.0/OScompiler.h:33:#define MOVE( src, dst, length ) memcpy( dst, src, length)
VBox/Additions/x11/x11include/xorg-server-1.1.0/glx_ansic.h:95:#define __glXMemcpy(dest, src, n)	memcpy(dest, src, n)
VBox/Additions/x11/x11include/xorg-server-1.1.0/xf86_libc.h:349:#undef memcpy
VBox/Additions/x11/x11include/xorg-server-1.1.0/xf86_libc.h:350:#define memcpy(vp,cvp,I)	xf86memcpy(vp,cvp,I)
VBox/Additions/x11/x11include/xorg-server-1.1.0/unpack.h:52:#define __GLX_MEM_COPY(dst,src,n)	memcpy(dst,src,n)
VBox/Additions/x11/x11include/xorg-server-1.1.0/exa.h:514:     * was responsible for syncing (as it was implemented using memcpy() in
VBox/Additions/x11/undefined_xfree86:276:memcpy
VBox/Additions/x11/undefined_xfree86:277:"memcpy",xf86memcpy
VBox/Additions/solaris/Mouse/vboxms.c:793:    memcpy(pMBlkCont->b_rptr, g_asTestWPut[i].pvDataIn,
VBox/Additions/solaris/Mouse/vboxms.c:931:    memcpy(pMBlkCont->b_rptr, g_asTestWPut[i].pvDataIn, g_asTestWPut[i].cbDataIn);
VBox/Additions/freebsd/vboxvfs/vboxvfs_vfsops.c:139:    memcpy (pShFlShareName->String.utf8, pszShare, cbShare + 1);
VBox/Additions/common/VBoxService/VBoxServiceVMInfo-win.cpp:407:                        memcpy(&pProc->luid, &pStats->AuthenticationId, sizeof(LUID));
VBox/Additions/common/VBoxService/VBoxServiceVMInfo-win.cpp:732:        memcpy(pwszDst, pSrc->Buffer, cbCopy);
VBox/Additions/common/VBoxService/VBoxServiceVMInfo-win.cpp:958:    memcpy(szPipeName, VBOXTRAY_IPC_PIPE_PREFIX, sizeof(VBOXTRAY_IPC_PIPE_PREFIX));
VBox/Additions/common/VBoxService/VBoxServiceVMInfo-win.cpp:1227:                        memcpy(&pUserInfo[cUniqueUsers], &userSession, sizeof(VBOXSERVICEVMINFOUSER));
VBox/Additions/common/VBoxService/VBoxServiceToolBox.cpp:770:                memcpy(&pNode->dirEntry, &DirEntry, sizeof(RTDIRENTRYEX));
VBox/Additions/common/VBoxService/VBoxServiceClipboard-os2.cpp:364:        memcpy(pHdr->achMagic, CLIPHEADER_MAGIC, sizeof(pHdr->achMagic));
VBox/Additions/common/VBoxService/VBoxServiceClipboard-os2.cpp:370:        memcpy(pHdr + 1, pv, cb);
VBox/Additions/common/VBoxService/VBoxServiceClipboard-os2.cpp:425:                    memcpy(pvPM, pszLocale, cbPM);
VBox/Additions/common/VBoxService/VBoxServiceVMInfo.cpp:864:                memcpy(psz, papszUsers[i], cch);
VBox/Additions/common/VBoxService/VBoxServiceVMInfo.cpp:1001:    /* Workaround for uninitialized variable used in memcpy in GetTcpipInterfaceList
VBox/Additions/common/VBoxService/VBoxServiceVMInfo.cpp:1332:                memcpy(&ArpReq.arp_pa, &IfReq.lifr_addr, sizeof(struct sockaddr_in));
VBox/Additions/common/VBoxService/VBoxServiceVMInfo.cpp:1335:                    memcpy(&IfMac, ArpReq.arp_ha.sa_data, sizeof(IfMac));
VBox/Additions/common/VBoxService/VBoxServiceControlSession.cpp:1935:        memcpy(&pSessionThread->StartupInfo, pSessionStartupInfo, sizeof(VBOXSERVICECTRLSESSIONSTARTUPINFO));
VBox/Additions/common/VBoxService/VBoxServiceControlProcess.cpp:120:    memcpy(&pProcess->StartupInfo, pStartupInfo, sizeof(VBOXSERVICECTRLPROCSTARTUPINFO));
VBox/Additions/common/VBoxService/VBoxServiceControlProcess.cpp:1077:            memcpy(pszDst, pszArgv0, cchArgv0);
Binary file VBox/Additions/common/VBoxControl/.VBoxControl.cpp.swp matches
VBox/Additions/common/VBoxControl/VBoxControl.cpp:278:    memcpy (paNewRects, paRects, sizeof(RECTL) * cRects);
VBox/Additions/common/VBoxControl/VBoxControl.cpp:401:    memcpy (paRects, paNewRects, sizeof (RECTL) * cRects);
VBox/Additions/common/crOpenGL/dri_util.c:360:       memcpy(pdp->pClipRects, last_dc->rects, rect_size);
VBox/Additions/common/crOpenGL/glx.c:1661:     * unnecessary memcpy.
VBox/Additions/common/crOpenGL/load.c:1203:    memcpy(&szPath[cchPath + 1], pszName, cbName);
VBox/Additions/common/crOpenGL/load.c:1235:    memcpy(aszwMdFileName, g_aszwVBoxMdFilePrefix, g_cVBoxMdFilePrefixLen * sizeof (g_aszwVBoxMdFilePrefix[0]));
VBox/Additions/common/crOpenGL/load.c:1395:            memcpy(g_aszwVBoxMdFilePrefix + g_cVBoxMdFilePrefixLen, VBOXMD_DUMP_NAME_PREFIX_W, sizeof (VBOXMD_DUMP_NAME_PREFIX_W) - sizeof (WCHAR));
VBox/Additions/common/VBoxVideo/Modesetting.cpp:349:            memcpy(paHints, (void *)(pQuery + 1), cScreens * sizeof(VBVAMODEHINT));
VBox/Additions/common/VBoxVideo/VBVABase.cpp:261:        memcpy (dst, p, cb);
VBox/Additions/common/VBoxVideo/VBVABase.cpp:266:        memcpy (dst, p, u32BytesTillBoundary);
VBox/Additions/common/VBoxVideo/VBVABase.cpp:267:        memcpy (&pVBVA->au8Data[0], (uint8_t *)p + u32BytesTillBoundary, i32Diff);
VBox/Additions/common/VBoxVideo/HGSMIBase.cpp:235:        memcpy (p->au8Data, pPixels, cbPixels);
VBox/Additions/common/VBoxGuest/VBoxGuest.cpp:2125:    memcpy(pReqCopy, pReqHdr, cbReq);
VBox/Additions/common/VBoxGuest/VBoxGuest.cpp:2139:        memcpy(pReqHdr, pReqCopy, cbReq);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibDragAndDrop.cpp:1076:                    memcpy(pvData, strData.c_str(), cbData);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibDragAndDrop.cpp:1088:                    memcpy(pvData, dataHdr.pvMetaFmt, cbDataRaw);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibDaemonize.cpp:106:        memcpy(pchArgs, pPib->pib_pchcmd, cchTotal - 1);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibDaemonize.cpp:107:        memcpy(pchArgs + cchTotal - 1, "--daemonized\0\0", sizeof("--daemonized\0\0"));
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibDaemonize.cpp:113:        memcpy(pchArgs, pPib->pib_pchcmd, cch0 + 1);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibDaemonize.cpp:115:        memcpy(pch, " --daemonized ", sizeof(" --daemonized ") - 1);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibDaemonize.cpp:118:            memcpy(pch, pPib->pib_pchcmd + cch0 + 1, cch1 + 2);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibSeamless.cpp:42:# undef memcpy
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibSeamless.cpp:43:# define memcpy xf86memcpy
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibSeamless.cpp:159:            memcpy(&pReq->Rect, pRects, cRects * sizeof(RTRECT));
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibVideo.cpp:47:# undef memcpy
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibVideo.cpp:48:# define memcpy xf86memcpy
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibVideo.cpp:117:            memcpy(pReq->pointerData, pvImg, cbImg);
Binary file VBox/Additions/common/VBoxGuest/lib/.VBoxGuestR3LibGuestProp.cpp.swp matches
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibLog.cpp:67:                memcpy(pMsg->u.In.szMsg, pch, cch);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibHostChannel.cpp:58:    memcpy(pszCopy, pszName, cbName);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibHostChannel.cpp:205:    memcpy(pszCopy, pszName, cbName);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR0LibHGCMInternal.cpp:102:            memcpy(&pHGCMConnect->loc, pLoc, sizeof(pHGCMConnect->loc));
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibGuestUser.cpp:96:        memcpy(pDynamic, pszUser, cbUser);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibGuestUser.cpp:98:            memcpy(pDynamic + cbUser, pszDomain, cbDomain);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibGuestUser.cpp:100:            memcpy(pDynamic + cbUser + cbDomain, puDetails, cbDetails);
VBox/Additions/common/VBoxGuest/lib/VBoxGuestR3LibGuestProp.cpp:588:        memcpy(&pszzPatterns[off], papszPatterns[i], cb);
Binary file VBox/Additions/common/VBoxGuest/.VBoxGuest.cpp.swp matches
VBox/Additions/WINNT/VBoxCredProv/VBoxCredProvCredential.cpp:157:            memcpy(pUnicodeDest->Buffer, pwszSource, cbLen);
VBox/Additions/WINNT/VBoxCredProv/VBoxCredProvCredential.cpp:368:        memcpy(StringDst.Buffer, StringSrc.Buffer, StringDst.Length);        \
VBox/Additions/WINNT/Graphics/Wine_new/vbox/libWineStub/include/wine/port.h:358:    return memcpy( dst, src, size );
VBox/Additions/WINNT/Graphics/Wine_new/vbox/libWineStub/debug.c:490:    if (old_funcs) memcpy( old_funcs, &funcs, min(sizeof(funcs),size) );
VBox/Additions/WINNT/Graphics/Wine_new/vbox/libWineStub/debug.c:491:    if (new_funcs) memcpy( &funcs, new_funcs, min(sizeof(funcs),size) );
VBox/Additions/WINNT/Graphics/Wine_new/d3d8/vertexdeclaration.c:365:    memcpy(declaration->elements, elements, declaration->elements_size);
VBox/Additions/WINNT/Graphics/Wine_new/d3d8/directx.c:159:    memcpy(&identifier->DeviceIdentifier, &adapter_id.device_identifier, sizeof(identifier->DeviceIdentifier));
VBox/Additions/WINNT/Graphics/Wine_new/d3d8/device.c:1999:    memcpy(buffer_data, data, size);
VBox/Additions/WINNT/Graphics/Wine_new/d3d8/device.c:2092:    memcpy(buffer_data, vertex_data, vtx_size);
VBox/Additions/WINNT/Graphics/Wine_new/d3d8/device.c:2112:    memcpy(buffer_data, index_data, idx_size);
VBox/Additions/WINNT/Graphics/Wine_new/d3d8/device.c:2439:    memcpy(data, declaration->elements, declaration->elements_size);
VBox/Additions/WINNT/Graphics/Wine_new/switcher/sw_common.c:38:    memcpy(&szPath[cchPath + 1], pszName, cbName);
VBox/Additions/WINNT/Graphics/Wine_new/d3d9/vertexdeclaration.c:295:    memcpy(elements, declaration->elements, sizeof(*declaration->elements) * declaration->element_count);
VBox/Additions/WINNT/Graphics/Wine_new/d3d9/vertexdeclaration.c:402:    memcpy(declaration->elements, elements, element_count * sizeof(*elements));
VBox/Additions/WINNT/Graphics/Wine_new/d3d9/directx.c:158:    memcpy(&identifier->DeviceIdentifier, &adapter_id.device_identifier, sizeof(identifier->DeviceIdentifier));
VBox/Additions/WINNT/Graphics/Wine_new/d3d9/directx.c:616:    memcpy(luid, &adapter_id.adapter_luid, sizeof(*luid));
VBox/Additions/WINNT/Graphics/Wine_new/d3d9/device.c:2336:    memcpy(buffer_data, data, size);
VBox/Additions/WINNT/Graphics/Wine_new/d3d9/device.c:2429:    memcpy(buffer_data, vertex_data, vtx_size);
VBox/Additions/WINNT/Graphics/Wine_new/d3d9/device.c:2449:    memcpy(buffer_data, index_data, idx_size);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader_sm1.c:644:    memcpy(src_param->reg.immconst_data, *ptr, count * sizeof(DWORD));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/utils.c:2805:    memcpy(mat, smat, 16 * sizeof(float));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/utils.c:3112:    memcpy(dest, &temp, 16 * sizeof(float));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/resource.c:283:        memcpy(d->ptr.data, data, data_size);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/resource.c:320:        memcpy(data, d->ptr.data, d->size);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/directx.c:3637:        memcpy(identifier->driver, name, len);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/directx.c:3645:        memcpy(identifier->description, description, len);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/directx.c:3666:    memcpy(&identifier->device_identifier, &IID_D3DDEVICE_D3DUID, sizeof(identifier->device_identifier));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/directx.c:3668:    memcpy(&identifier->adapter_luid, &adapter->luid, sizeof(identifier->adapter_luid));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/directx.c:5295:    memcpy(&szPath[cchPath + 1], pszName, cbName);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:2601:    memcpy(&device->updateStateBlock->state.vs_consts_b[start_register], constants, count * sizeof(BOOL));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:2625:    memcpy(constants, &device->stateBlock->state.vs_consts_b[start_register], count * sizeof(BOOL));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:2642:    memcpy(&device->updateStateBlock->state.vs_consts_i[start_register * 4], constants, count * sizeof(int) * 4);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:2668:    memcpy(constants, &device->stateBlock->state.vs_consts_i[start_register * 4], count * sizeof(int) * 4);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:2688:    memcpy(&device->updateStateBlock->state.vs_consts_f[start_register * 4],
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:2722:    memcpy(constants, &device->stateBlock->state.vs_consts_f[start_register * 4], count * sizeof(float) * 4);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:3072:    memcpy(&device->updateStateBlock->state.ps_consts_b[start_register], constants, count * sizeof(BOOL));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:3096:    memcpy(constants, &device->stateBlock->state.ps_consts_b[start_register], count * sizeof(BOOL));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:3113:    memcpy(&device->updateStateBlock->state.ps_consts_i[start_register * 4], constants, count * sizeof(int) * 4);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:3139:    memcpy(constants, &device->stateBlock->state.ps_consts_i[start_register * 4], count * sizeof(int) * 4);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:3160:    memcpy(&device->updateStateBlock->state.ps_consts_f[start_register * 4],
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:3194:    memcpy(constants, &device->stateBlock->state.ps_consts_f[start_register * 4], count * sizeof(float) * 4);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:3313:#define copy_and_next(dest, src, size) memcpy(dest, src, size); dest += (size)
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:4158:     * memcpy and dirtification to improve loading performance. */
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:4167:    memcpy(dst.data, src.data, dst_volume->resource.size);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:4710:                memcpy(&mem[width * bpp * i], &bits[map_desc.row_pitch * i], width * bpp);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:5762:        memcpy(pubBuf, pzvValue, cbVal);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/device.c:5788:    memcpy(&device->zvValue, pzvValue, cbVal);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader_sm4.c:604:                memcpy(param->immconst_data, *ptr, 1 * sizeof(DWORD));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader_sm4.c:610:                memcpy(param->immconst_data, *ptr, 4 * sizeof(DWORD));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader.c:609:            memcpy(lconst->value, ins.src[0].reg.immconst_data, 4 * sizeof(DWORD));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader.c:639:            memcpy(lconst->value, ins.src[0].reg.immconst_data, 4 * sizeof(DWORD));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader.c:650:            memcpy(lconst->value, ins.src[0].reg.immconst_data, sizeof(DWORD));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader.c:1728:    memcpy(shader->function, byte_code, shader->functionLength);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader.c:1789:    memcpy(byte_code, shader->function, shader->functionLength);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/shader.c:1819:        memcpy(value, src_data + (i - start_idx) * 4 /* 4 components */, 4 * sizeof(float));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/volume.c:431:    /* TODO: Implement direct loading into the gl volume instead of using memcpy and
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/volume.c:458:            memcpy(pRowDstBits, pRowSrcBits, srcW * dst->resource.format->byte_count);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/context.c:334:    memcpy(entry->render_targets, render_targets, gl_info->limits.buffers * sizeof(*entry->render_targets));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/context.c:356:    memcpy(entry->render_targets, render_targets, gl_info->limits.buffers * sizeof(*entry->render_targets));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/wined3d_main.c:320:            else memcpy(wined3d_settings.logo, buffer, len);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/palette.c:101:        memcpy(entries, palette->palents + start, count * sizeof(*entries));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/palette.c:125:        memcpy(palette->palents + start, entries, count * sizeof(*palette->palents));
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/buffer.c:821:        memcpy(map + start, This->resource.allocatedMemory + start, len);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/buffer.c:1073:        memcpy(data + start, buffer->resource.allocatedMemory + start, end - start);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/buffer.c:1452:        memcpy(ptr, data, size);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:578:        memcpy(surface->dib.bitmap_data, surface->resource.allocatedMemory,
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:2238:     * this avoids an unnecessary memcpy. */
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:2537:                memcpy(dst_data, src_data, dst_pitch);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:4123:        memcpy(buf, first, width * bpp);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:4301:        memcpy(surface->dib.bitmap_data, surface->resource.allocatedMemory, surface->resource.size);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:4368:        memcpy(surface->resource.allocatedMemory, surface->dib.bitmap_data, surface->resource.size);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:4630:            memcpy(row, top + off, len);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:4631:            memcpy(top + off, bottom + off, len);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:4632:            memcpy(bottom + off, row, len);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:4939:            memcpy(dst, src, pitch * height);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:6949:            memcpy(dst_row, src_row, row_block_count * format->block_byte_count);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:7212:                            memcpy(dbuf, sbuf, width);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:7226:                            memcpy(dbuf, sbuf, width);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:7246:                        memcpy(dbuf, sbuf, width);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/surface.c:7263:                        memcpy(dbuf, dbuf - dst_map.row_pitch, width);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/swapchain.c:1418:    memcpy(newArray, swapchain->context, sizeof(*newArray) * swapchain->num_contexts);
VBox/Additions/WINNT/Graphics/Wine_new/wined3d/arb_program_shader.c:91:    memcpy(tmp, source, source_size);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/shared/VBoxDispKmt.cpp:39:    memcpy(&szPath[cchPath + 1], pszName, cbName);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/shared/VBoxDispMpLogger.cpp:144:            memcpy(pCmd->aStringBuf, pszString, cbString);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/shared/VBoxDispMpLogger.cpp:209:            memcpy(pCmd->aBuf, pvBuf, cbBuf);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/shared/VBoxDispMpLogger.cpp:284:        memcpy(pszBuffer + cbWritten, pszString, cbString);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/shared/VBoxDispMpLogger.cpp:288:        memcpy(pszBuffer + cbWritten, pszString, cbLeft - 1);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/dbg/DumpD3DCaps9.cpp:721:    memcpy(newStr, pcszStr, cStr);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/dbg/DumpD3DCaps9.cpp:735:    memcpy(newStr, pcszStr, cStr);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/dbg/DumpD3DCaps9.cpp:803:        memcpy(pCurNew, pCmp, cLength);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3D.cpp:2148:            memcpy(pData->pData, pAdapter->Formats.paFormstOps, pAdapter->Formats.cFormstOps * sizeof (FORMATOP));
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3D.cpp:2160:            memcpy(pData->pData, gVBoxQueryTypes, VBOX_QUERYTYPE_COUNT() * sizeof (D3DDDIQUERYTYPE));
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3D.cpp:2260:                    memcpy(pData->pData, &pAdapter->D3D.Caps, sizeof (D3DCAPS9));
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3D.cpp:2279:                    memcpy(pData->pData, &pAdapter->D3D.Caps, RT_OFFSETOF(D3DCAPS9, DevCaps2));
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3D.cpp:5026:            memcpy(pVe, pVertexElements, sizeof (D3DVERTEXELEMENT9) * pData->NumVertexElements);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3D.cpp:5339:        /** @todo fallback to memcpy or whatever ? */
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxD3DIf.cpp:227:                memcpy(pLockInfo->pBits, pAlloc->pvMem, pAlloc->SurfDesc.cbSize);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxD3DIf.cpp:229:                memcpy(pAlloc->pvMem, pLockInfo->pBits, pAlloc->SurfDesc.cbSize);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxD3DIf.cpp:255:                memcpy(pvDst, pvSrc, pitch);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxD3DIf.cpp:287:            memcpy(pvDst, pvSrc, cbSize);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxD3DIf.cpp:297:                memcpy(pvDst, pvSrc, cbCopyLine);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxUhgsmiBase.cpp:245:    memcpy(&pBuf->CallHdr.CallInfo, pCallInfo, cbCallInfo);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxUhgsmiBase.cpp:253:            memcpy(pCallInfo, &pBuf->CallHdr.CallInfo, cbCallInfo);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3DIf.cpp:53:    memcpy(&szPath[cchPath + 1], pszName, cbName);
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3DIf.cpp:907:        memcpy ((void*)pAdapter->Formats.paFormstOps , gVBoxFormatOpsBase, sizeof (gVBoxFormatOpsBase));
VBox/Additions/WINNT/Graphics/Video/disp/wddm/VBoxDispD3DIf.cpp:930:        memcpy ((void*)pAdapter->Formats.paSurfDescs , gVBoxSurfDescsBase, sizeof (gVBoxSurfDescsBase));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispDriver.cpp:181:        memcpy(_font.lfFaceName, _name, sizeof(_name));                              \
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispDriver.cpp:206:        memcpy(&selectedMode, &pModesTable[0], sizeof(VIDEO_MODE_INFORMATION));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispDriver.cpp:217:                memcpy(&selectedMode, &pModesTable[i], sizeof(VIDEO_MODE_INFORMATION));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispDriver.cpp:470:        memcpy(pdm->dmDeviceName, VBOXDISP_DEVICE_NAME, sizeof(VBOXDISP_DEVICE_NAME));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispDriver.cpp:562:    memcpy(pdevcaps, &gdiInfo, min(sizeof(GDIINFO), cjCaps));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispDriver.cpp:563:    memcpy(pdi, &devInfo, min(sizeof(DEVINFO), cjDevInfo));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVBVA.cpp:37:                   memcpy (&ulConvertedPixel, pu8PixelFrom, 3);
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVBVA.cpp:59:                   memcpy (&ulConvertedPixel, pu8PixelFrom, 3);
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVrdpBmp.cpp:277:        memcpy (phashDeleted, &pEntry->hash, sizeof (VRDPBCHASH));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVrdpBmp.cpp:288:    memcpy (&pEntry->hash, phash, sizeof (VRDPBCHASH));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispDDrawVHWA.cpp:133:        memcpy(lpData->lpvData, &caps, min(lpData->dwExpectedSize, sizeof(DD_NTPRIVATEDRIVERCAPS)));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispMouse.cpp:47:        memcpy(pDst+y*dstBytesPerLine, pSrc+(LONG)y*psoMask->lDelta, dstBytesPerLine);
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispMouse.cpp:207:        memcpy(psoRes->pvBits, psoBitmap->pvBits, min(psoRes->cjBits, psoBitmap->cjBits));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispMouse.cpp:296:            memcpy(pDst+y*dstBytesPerLine, pSrc+(LONG)y*psoMask->lDelta, dstBytesPerLine);
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispMouse.cpp:316:        memcpy(pDst+y*dstBytesPerLine, pSrc+(LONG)y*pso32bpp->lDelta, dstBytesPerLine);
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispMini.cpp:128:            memcpy(&(*ppModesTable)[j], pMode, numModes.ModeInformationLength);
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispMini.cpp:209:    memcpy(pMemInfo, &vMemInfo, sizeof(vMemInfo));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVrdpTxt.cpp:115:    memcpy (pOrder->au8Bitmap, pgb->aj, cbBitmap);
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispDrawCmd.cpp:273:        memcpy (pDst, pSrc, cWidth * cbPixel);
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVHWA.cpp:345:        memcpy(pFourCC, (void const *)pInfo->FourCC, pDev->vhwa.numFourCC * sizeof(pFourCC[0]));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVRDP.cpp:774:    memcpy (order.pattern, pBrush->u.pat.au8Pattern, sizeof (order.pattern));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVRDP.cpp:832:    memcpy (order.hash, phash, sizeof (*phash));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVRDP.cpp:876:    memcpy (order.hash, phash, sizeof (*phash));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVRDP.cpp:901:    memcpy (order.hash, phash, sizeof (*phash));
VBox/Additions/WINNT/Graphics/Video/disp/xpdm/VBoxDispVRDP.cpp:1635:                    memcpy (&color, pu8BitsSrc, cbSrcBPP);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:1084:            memcpy(pName, RegKeyBuf, cbRegKeyBuf);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:1129:        memcpy(&pDevExt->u.primary.DxgkInterface, DxgkInterface, sizeof (DXGKRNL_INTERFACE));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:3401:        memcpy(pCurDstCmd, pHdr, cbCurCmd);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:4166:        memcpy(pDst+y*dstBytesPerLine, pSrc+y*pSetPointerShape->Pitch, dstBytesPerLine);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:4194:        memcpy(pDst+y*dstBytesPerLine, pSrc+y*pSetPointerShape->Pitch, dstBytesPerLine);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:4397: * to avoid extra memcpy we cast it to PRTRECT assuming
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:4588:                 * to avoid extra memcpy we cast it to PRTRECT assuming
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:4617:                        memcpy(&req->Rect, pRect, cRects*sizeof(RTRECT));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:6657:            memcpy(&pBlt->Blt.DstRects.UpdateRects.aRects[0], &pPresent->pDstSubRects[pPresent->MultipassOffset], cbRects);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:6666:            memcpy(&pBlt->Blt.DstRects.UpdateRects.aRects[0], &pPresent->pDstSubRects[pPresent->MultipassOffset], cbFitingRects);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:6749:            memcpy(&pCF->ClrFill.Rects.aRects[pPresent->MultipassOffset], pPresent->pDstSubRects, cbRects);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPWddm.cpp:6758:            memcpy(&pCF->ClrFill.Rects.aRects[0], pPresent->pDstSubRects, cbFitingRects);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPCr.cpp:1146:    memcpy(pvDst, pvSrc, cbData);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVModes.cpp:100:    memcpy(pDst->aTransientResolutions, pModes->aTransientResolutions, pModes->Modes.cTargets * sizeof (pModes->aTransientResolutions[0]));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVModes.cpp:101:    memcpy(pDst->aPendingRemoveCurResolutions, pModes->aPendingRemoveCurResolutions, pModes->Modes.cTargets * sizeof (pModes->aPendingRemoveCurResolutions[0]));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPCrUtil.cpp:55:    memcpy(dst, src, bytes);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:65:        memcpy(pvNewData, pTbl->paData, sizeof (pTbl->paData[0]) * pTbl->cSize);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:587:        memcpy(pBuf, VBOXWDDM_REG_DRVKEY_PREFIX, sizeof (VBOXWDDM_REG_DRVKEY_PREFIX));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:641:        memcpy(pSuffix, pVGuid->Buffer, pVGuid->Length);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:686:                    memcpy(pBuf, KeyData.Info.Data, KeyData.Info.DataLength + 2);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:735:            memcpy(pSubBuf, Buf.Name.Name, Buf.Name.NameLength);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:737:            memcpy(pSubBuf, VBOXWDDM_REG_DISPLAYSETTINGSVIDEOKEY_SUBKEY, sizeof (VBOXWDDM_REG_DISPLAYSETTINGSVIDEOKEY_SUBKEY));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:769:                                    memcpy(pBuf, Buf.Name.Name, Buf.Name.NameLength + 2);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:1006:            memcpy(pBuf, VideoGuidBuf, cbVideoGuidBuf);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPMisc.cpp:1687:            memcpy(g_aVBoxUmdD3DCAPS9, pBuf->aBuf, sizeof (g_aVBoxUmdD3DCAPS9));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPCm.cpp:650:                memcpy(pvData, &pHdr->CmdHdr, pHdr->CmdHdr.cbCmd);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPCr.h:166:    memcpy(&pWriteback, &(pWb->writeback_ptr), sizeof (pWriteback));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPCr.h:175:    memcpy(&pWriteback, &(pRb->writeback_ptr), sizeof (pWriteback));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPCr.h:176:    memcpy(&pDst, &(pRb->readback_ptr), sizeof (pDst));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPCr.h:179:    memcpy(pDst, ((uint8_t*)pRb) + sizeof (*pRb), cbPayload);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVdma.cpp:308:    memcpy(pDup, pRects, cbDup);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVdma.cpp:808:        memcpy(pvDstSurf + cbDstOff, pvSrcSurf + cbSrcOff, cbSize);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVdma.cpp:830:            memcpy(pvDstStart, pvSrcStart, cbDstLine);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVbva.cpp:422:        memcpy (dst, p, cb);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVbva.cpp:427:        memcpy (dst, p, u32BytesTillBoundary);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVbva.cpp:428:        memcpy (&pVBVA->au8Data[0], (uint8_t *)p + u32BytesTillBoundary, i32Diff);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVbva.cpp:1053:    memcpy(pHdr, pCmd, cbCmd);
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVbva.cpp:1395:        memcpy((void *)&pEntry->aTargetMap[0], pTargetMap, sizeof(pEntry->aTargetMap));
VBox/Additions/WINNT/Graphics/Video/mp/wddm/VBoxMPVhwa.cpp:906:        memcpy((void *)&pBody->u.in.aRects[0], pCF->ClrFill.Rects.aRects,
VBox/Additions/WINNT/Graphics/Video/mp/xpdm/VBoxMPIOCTL.cpp:472:        memcpy(&req->Rect, pRects, cRects*sizeof(RTRECT));
VBox/Additions/WINNT/Graphics/Video/mp/common/VBoxMPVidModes.cpp:764:    memcpy(&pExt->aVideoModes[iSpecialMode], &g_CustomVideoModes[pExt->iDevice], sizeof(VIDEO_MODE_INFORMATION));
VBox/Additions/WINNT/Graphics/Video/mp/common/VBoxMPVidModes.cpp:768:    memcpy(&pExt->aVideoModes[iStandardMode], &pExt->aVideoModes[3], sizeof(VIDEO_MODE_INFORMATION));
VBox/Additions/WINNT/Graphics/Video/mp/common/VBoxMPVidModes.cpp:850:        memcpy(&pExt->aVideoModes[iSpecialModeElement], &specialMode, sizeof(VIDEO_MODE_INFORMATION));
VBox/Additions/WINNT/Graphics/Video/mp/common/VBoxMPVidModes.cpp:853:        memcpy(&g_CustomVideoModes[pExt->iDevice], &specialMode, sizeof(VIDEO_MODE_INFORMATION));
VBox/Additions/WINNT/Graphics/Video/mp/common/VBoxMPVidModes.cpp:856:        memcpy(&pExt->aVideoModes[iSpecialModeElementOld], &pExt->aVideoModes[3], sizeof(VIDEO_MODE_INFORMATION));
VBox/Additions/WINNT/SharedFolders/driver/vbsf.c:1516:            memcpy(pSID->SubAuthority, saSubAuthorityOwner, SUB_AUTHORITY_COUNT * sizeof(ULONG));
VBox/Additions/WINNT/SharedFolders/driver/vbsf.c:1532:            memcpy(pSID->SubAuthority, saSubAuthorityGroup, SUB_AUTHORITY_COUNT * sizeof(ULONG));
VBox/Additions/WINNT/Installer/VBoxDrvInst.cpp:172:    memcpy(&wszPath[cwcPath + 1], pwszName, (cwcName + 1) * sizeof(wszPath[0]));
VBox/Additions/WINNT/Installer/VBoxDrvInst.cpp:555:                   memcpy(pNewKeyValuePos, pszValueToAdd, wcslen(pszValueToAdd)*sizeof(TCHAR));
VBox/Additions/WINNT/Installer/VBoxDrvInst.cpp:564:                   memcpy(pNewKeyValuePos, pszToken, wcslen(pszToken)*sizeof(TCHAR));
VBox/Additions/WINNT/Installer/VBoxDrvInst.cpp:576:                memcpy(pNewKeyValuePos, pszValueToAdd, wcslen(pszValueToAdd)*sizeof(TCHAR));
VBox/Additions/WINNT/Installer/InstallHelper/VBoxGuestInstallHelper.cpp:143:    memcpy(szPipeName, VBOXTRAY_IPC_PIPE_PREFIX, sizeof(VBOXTRAY_IPC_PIPE_PREFIX));
VBox/Additions/WINNT/Installer/InstallHelper/VBoxGuestInstallHelper.cpp:196:    memcpy(&szPath[cchPath + 1], pszName, cbName);
VBox/Additions/WINNT/Installer/InstallHelper/VBoxGuestInstallHelper.cpp:408:            memcpy(pIpcMsg->szMsgContent, szMsg, strlen(szMsg)   + 1);
VBox/Additions/WINNT/Installer/InstallHelper/VBoxGuestInstallHelper.cpp:409:            memcpy(pIpcMsg->szMsgTitle, szTitle, strlen(szTitle) + 1);
VBox/Additions/WINNT/VBoxTray/VBoxDnDDropTarget.cpp:199:        memcpy(&mFormatEtc, &fmtEtc, sizeof(FORMATETC));
VBox/Additions/WINNT/VBoxTray/VBoxDnDDropTarget.cpp:478:                                    memcpy(mpvData, strRoot.c_str(), cbRoot);
VBox/Additions/WINNT/VBoxTray/VBoxIPC.cpp:197:        memcpy(szPipeName, VBOXTRAY_IPC_PIPE_PREFIX, sizeof(VBOXTRAY_IPC_PIPE_PREFIX));
VBox/Additions/WINNT/VBoxTray/VBoxDnDDataObject.cpp:299:                        memcpy(pcDst, mpvData, mcbData);
VBox/Additions/WINNT/VBoxTray/VBoxDnDDataObject.cpp:336:                                memcpy(pCurFile, pwszFile, cchCurFile * sizeof(RTUTF16));
VBox/Additions/WINNT/VBoxTray/VBoxDnDDataObject.cpp:363:                                    memcpy(pMem, pBuf, cbBuf);
VBox/Additions/WINNT/VBoxTray/VBoxDnDDataObject.cpp:397:                memcpy(pcDst, mpvData, mcbData);
VBox/Additions/WINNT/VBoxTray/VBoxDnDDataObject.cpp:642:            memcpy(pvDest, pvSource, dwLen);
VBox/Additions/WINNT/VBoxTray/VBoxDnDDataObject.cpp:687:            memcpy(mpvData, pvData, cbData);
VBox/Additions/WINNT/VBoxTray/VBoxHelpers.cpp:121:    memcpy (paNewRects, paRects, sizeof (RECTL) * nRects);
VBox/Additions/WINNT/VBoxTray/VBoxLA.cpp:314:        memcpy(pEntry->wszCommandLine, abData, cbData);
VBox/Additions/WINNT/VBoxTray/VBoxDispIf.cpp:162:        memcpy(pCfgDst->pPathInfoArray, pCfg->pPathInfoArray, pCfg->cPathInfoArray * sizeof (DISPLAYCONFIG_PATH_INFO));
VBox/Additions/WINNT/VBoxTray/VBoxDispIf.cpp:181:        memcpy(pCfgDst->pModeInfoArray, pCfg->pModeInfoArray, pCfg->cModeInfoArray * sizeof (DISPLAYCONFIG_MODE_INFO));
VBox/Additions/WINNT/VBoxTray/VBoxDispIf.cpp:291:    memcpy (pModeInfoArray, pCfg->pModeInfoArray, pCfg->cModeInfoArray * sizeof(DISPLAYCONFIG_MODE_INFO));
VBox/Additions/WINNT/VBoxTray/VBoxDispIf.cpp:912:        memcpy(pMon->paDisplayDevices, paDisplayDevices, sizeof (*paDisplayDevices) * cDevModes);
VBox/Additions/WINNT/VBoxTray/VBoxDispIf.cpp:923:        memcpy(pMon->paDeviceModes, paDeviceModes, sizeof (*paDeviceModes) * cDevModes);
VBox/Additions/darwin/VBoxClient/VBoxClientClipboardGuestToHost.cpp:160:                    memcpy(pvData, flavorDataPtr, cbData);
VBox/Additions/darwin/vboxfs/VBoxVFS.cpp:152:    memcpy(oVFsEntry.vfe_fsname, VBOXVBFS_NAME, MFSNAMELEN);
VBox/Additions/darwin/vboxfs/VBoxVFS-utils.cpp:160:                memcpy(pszHostPathInternal, pszGuestPath + cbMntPointPath, cbGuestPath - cbMntPointPath);
VBox/Additions/darwin/vboxfs/VBoxVFS-utils.cpp:236:            memcpy(pSFPath->String.utf8, pszHostPath, cbHostPath);
VBox/Additions/darwin/vboxfs/VBoxVFS-utils.cpp:597:            memcpy(pSHFLString->String.utf8, szName, cbName + 1);
VBox/Additions/darwin/vboxfs/VBoxVFS-VNODEOps.cpp:490:    memcpy(entry.d_name, Info->name.String.utf8, entry.d_namlen);
VBox/Debugger/DBGCScreenAscii.cpp:430:    memcpy(psz, pszText, cchText);
VBox/Debugger/DBGPlugInLinux.cpp:326:                                    memcpy(pvVal, &DisState.Param2.uValue, cbVal);
VBox/Debugger/DBGPlugInLinux.cpp:742:    memcpy(&pszBuf[0], pbLogBuf, RT_MIN(cbBuf, cchLength));
VBox/Debugger/DBGPlugInLinux.cpp:963:                memcpy(&pszBuf[offDst], pHdr + 1, cchText);
VBox/Debugger/DBGPlugInLinux.cpp:967:                memcpy(&pszBuf[offDst], pHdr + 1, cbBuf - offDst);
VBox/Debugger/DBGPlugInLinux.cpp:2297:                        memcpy(pszCfg + cchCfg, &abBuf[0], cbRead);
VBox/Debugger/DBGCCommands.cpp:1541:            memcpy(pVar->szName, paArgs[0].u.pszString, (size_t)paArgs[0].u64Range + 1);
VBox/Debugger/DBGCCommands.cpp:1543:                pVar->Var.u.pszString = (char *)memcpy(&pVar->szName[paArgs[0].u64Range + 1], paArgs[1].u.pszString, (size_t)paArgs[1].u64Range + 1);
VBox/Debugger/DBGCCommands.cpp:1554:    memcpy(pVar->szName, pszVar, (size_t)paArgs[0].u64Range + 1);
VBox/Debugger/DBGCCommands.cpp:1556:        pVar->Var.u.pszString = (char *)memcpy(&pVar->szName[paArgs[0].u64Range + 1], paArgs[1].u.pszString, (size_t)paArgs[1].u64Range + 1);
VBox/Debugger/DBGCCmdHlp.cpp:441:                    memcpy(pvBuffer, Var2.u.pvHCFlat, cb);
VBox/Debugger/DBGCCmdHlp.cpp:601:                memcpy(Var2.u.pvHCFlat, pvBuffer, cbChunk);
VBox/Debugger/DBGCEval.cpp:145:            memcpy(pszCopy, pachExpr, cchExpr);
VBox/Debugger/DBGCEval.cpp:164:        memcpy(pszCopy, pachExpr, cchExpr);
VBox/Debugger/DBGCEval.cpp:1261:            memcpy(pszArgs, pszArgsCopy, cchArgs + 1);
VBox/Debugger/DBGPlugInDarwin.cpp:249:                memcpy(pszBuf, &pchMsgBuf[MsgBuf.msg_bufr], cbToCopy);
VBox/Debugger/DBGPlugInDarwin.cpp:257:                    memcpy(pszBuf, &pchMsgBuf[MsgBuf.msg_bufr], cbBuf - 1);
VBox/Debugger/DBGPlugInDarwin.cpp:271:                memcpy(pszBuf, &pchMsgBuf[MsgBuf.msg_bufr], cbFirst);
VBox/Debugger/DBGPlugInDarwin.cpp:272:                memcpy(&pszBuf[cbFirst], pchMsgBuf, cbSecond);
VBox/Debugger/DBGPlugInDarwin.cpp:282:                    memcpy(pszBuf, &pchMsgBuf[MsgBuf.msg_bufr], cbFirst);
VBox/Debugger/DBGPlugInDarwin.cpp:283:                    memcpy(&pszBuf[cbFirst], pchMsgBuf, cbBuf - cbFirst);
VBox/Debugger/DBGPlugInDarwin.cpp:288:                    memcpy(pszBuf, &pchMsgBuf[MsgBuf.msg_bufr], cbBuf - 1);
VBox/Debugger/DBGPlugInDarwin.cpp:532:                memcpy(&Uuid, &uLCmd.pUuid->uuid[0], sizeof(uLCmd.pUuid->uuid));
VBox/Debugger/VBoxDbgStatsQt.cpp:1317:            memcpy(&psz[off], pNode->pszName, pNode->cchName + 1);
VBox/Debugger/VBoxDbgStatsQt.cpp:1510:        memcpy(&m_szUpdateParent[m_cchUpdateParent], pszSubName, cchSubName);
VBox/Debugger/VBoxDbgStatsQt.cpp:1674:            memcpy(&m_szUpdateParent[m_cchUpdateParent], pNode->pszName, pNode->cchName);
VBox/Debugger/VBoxDbgStatsQt.cpp:1726:                memcpy(&m_szUpdateParent[m_cchUpdateParent], pNode->pszName, pNode->cchName);
VBox/Debugger/VBoxDbgStatsQt.cpp:1988:            memcpy(psz, szPat, cch);
VBox/Debugger/VBoxDbgStatsQt.cpp:2179:            memcpy(sz, psz, off);
VBox/Debugger/DBGPlugInFreeBsd.cpp:525:                        memcpy(pszBuf, &pchMsgBuf[uMsgBufSeqR], cbToCopy);
VBox/Debugger/DBGPlugInFreeBsd.cpp:533:                            memcpy(pszBuf, &pchMsgBuf[uMsgBufSeqR], cbBuf - 1);
VBox/Debugger/DBGPlugInFreeBsd.cpp:547:                        memcpy(pszBuf, &pchMsgBuf[uMsgBufSeqR], cbFirst);
VBox/Debugger/DBGPlugInFreeBsd.cpp:548:                        memcpy(&pszBuf[cbFirst], pchMsgBuf, cbSecond);
VBox/Debugger/DBGPlugInFreeBsd.cpp:558:                            memcpy(pszBuf, &pchMsgBuf[uMsgBufSeqR], cbFirst);
VBox/Debugger/DBGPlugInFreeBsd.cpp:559:                            memcpy(&pszBuf[cbFirst], pchMsgBuf, cbBuf - cbFirst);
VBox/Debugger/DBGPlugInFreeBsd.cpp:564:                            memcpy(pszBuf, &pchMsgBuf[uMsgBufSeqR], cbBuf - 1);
VBox/Debugger/VBoxDbgConsole.cpp:583:    memcpy(m_pszInputBuf + m_cbInputBuf, psz, cb);
VBox/Debugger/VBoxDbgConsole.cpp:694:            memcpy(pvBuf, psz, cbRead);
VBox/Debugger/VBoxDbgConsole.cpp:745:    memcpy(pThis->m_pszOutputBuf + pThis->m_cbOutputBuf, pvBuf, cbBuf);
VBox/Debugger/DBGCEmulateCodeView.cpp:4817:                    memcpy(u.pu8, psz, cbCopy);
VBox/Debugger/DBGCEmulateCodeView.cpp:4824:                        memcpy(u.pu8, psz, cbString & (cbUnit - 1));
VBox/Debugger/DBGCEmulateCodeView.cpp:4977:        memcpy(pDbgc->abSearch, pabBytes, cbBytes);
VBox/Debugger/DBGCEmulateCodeView.cpp:5236:            memcpy(pEvtCfg->szCmd, pszCmd, cchCmd + 1);
VBox/Debugger/DBGCCmdWorkers.cpp:69:        memcpy(pBp->szCmd, pszCmd, cchCmd + 1);
VBox/Debugger/DBGCCmdWorkers.cpp:109:            memcpy(pBp->szCmd, pszCmd, cchCmd + 1);
VBox/Debugger/DBGCCmdWorkers.cpp:217:    memcpy(pDbgc->pszScratch, pBp->szCmd, pBp->cchCmd + 1);
VBox/Debugger/testcase/tstDBGCParser.cpp:101:        memcpy(pvBuf, g_pszInput, cb);
VBox/Frontends/VirtualBox/src/runtime/UIMachineLogic.cpp:2845:                memcpy(shot.bits(), screenData.data(), shot.width() * shot.height() * 4);
VBox/Frontends/VirtualBox/src/runtime/UIKeyboardHandler.cpp:1847:    ::memcpy(m_pressedKeysCopy, m_pressedKeys, sizeof(m_pressedKeys));
VBox/Frontends/VirtualBox/src/runtime/UIFrameBuffer.cpp:857:            memcpy(pu8Dst, pu8Src, uWidth * 4);
VBox/Frontends/VirtualBox/src/runtime/UIMachineView.cpp:1107:            memcpy(screenShot.bits(), screenData.data(), screenShot.width() * screenShot.height() * 4);
VBox/Frontends/VirtualBox/src/runtime/UIDnDHandler.cpp:231:            memcpy(vecData.data(), arrBytes.constData(), arrBytes.size());
VBox/Frontends/VirtualBox/src/runtime/UIDnDDataObject_win.cpp:377:                                        memcpy(pCurFile, pwszFile, cchCurFile * sizeof(RTUTF16));
VBox/Frontends/VirtualBox/src/runtime/UIDnDDataObject_win.cpp:409:                                            memcpy(pvMem, pDropFiles, cbBuf);
VBox/Frontends/VirtualBox/src/runtime/UIDnDDataObject_win.cpp:459:                                memcpy(pvDst, pvSrc, cbSrc);
VBox/Frontends/VirtualBox/src/runtime/UIDnDDataObject_win.cpp:754:            memcpy(m_pvData, pvData, cbData);
VBox/Frontends/VirtualBox/src/runtime/UISession.cpp:1632:            memcpy(image.scanLine(y), pu32SrcShapeScanline, uWidth * sizeof(uint32_t));
VBox/Frontends/VirtualBox/src/runtime/UISession.cpp:1767:        memcpy(image.bits(), srcShapePtr, uHeight * uWidth * 4);
VBox/Frontends/VirtualBox/src/globals/VBoxGlobal.cpp:2971:            memcpy(resultNetWmState.data(), pPropertyData, resultNetWmState.size() * sizeof(Atom));
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.cpp:547:            memcpy(maComponents, other.maComponents, mcComponents * sizeof(maComponents[0]));
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.cpp:559:            memcpy(maComponents, other.maComponents, mcComponents * sizeof(maComponents[0]));
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.cpp:568:        memcpy(maComponents, aComponents, cComponents * sizeof(maComponents[0]));
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.cpp:1718:        memcpy(buf, mAddress, memSize());
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.cpp:1764:        memcpy(buf, mAddress, memSize());
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.cpp:3069:    memcpy((void *)&pCmd->FourCC[0], aFourcc, num * sizeof(aFourcc[0]));
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.cpp:5844:    memcpy(mFourccEnabledList, aFourccs, num* sizeof (aFourccs[0]));
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.h:674:            memcpy(buf, mAddress, memSize());
VBox/Frontends/VirtualBox/src/VBoxFBOverlay.h:713:            memcpy(buf, mAddress, memSize());
VBox/Frontends/VirtualBox/src/net/UINetworkReply.cpp:765:                    memcpy(pafFoundCerts, afNewFoundCerts, sizeof(afNewFoundCerts));
VBox/Frontends/VBoxSDL/VBoxSDL.cpp:128:            ::memcpy(shape.raw(), aShape.raw(), cbShapeSize);
VBox/Frontends/VBoxSDL/VBoxSDL.cpp:4641:                        memcpy(dst, src, cbAndMaskScan);
VBox/Frontends/VBoxSDL/VBoxSDL.cpp:4669:                memcpy(dstShapePtr, srcShapePtr, srcShapePtrScan);
VBox/Frontends/VBoxSDL/VBoxSDL.cpp:4728:                    memcpy(dstShapePtr, srcShapePtr, srcShapePtrScan);
VBox/Frontends/VBoxSDL/Framebuffer.cpp:253:            memcpy(gWMIcon->pixels, g_abIco64x01+32, g_cbIco64x01-32);
VBox/Frontends/VBoxBugReport/VBoxBugReportWin.cpp:730:            memcpy(pwsDest, pwsSource, *pcbInOut - 4);
VBox/Frontends/Common/VBoxKeyboard/keyboard.c:546:        memcpy(keyc2scan, main_keyboard_type_scans[cMap], sizeof(keyc2scan));
VBox/Frontends/VBoxAutostart/VBoxAutostartCfg.cpp:293:                memcpy(pCfgTokenUse->u.Id.achToken, pszToken, cchToken);
VBox/Frontends/VBoxAutostart/VBoxAutostartCfg.cpp:570:        memcpy(pCfgAst->u.KeyValue.aszValue, pToken->u.Id.achToken, pToken->u.Id.cchToken);
VBox/Frontends/VBoxManage/VBoxInternalManage.cpp:1021:            memcpy(&pPart->aPartitions[pPart->cPartitions],
VBox/Frontends/VBoxManage/VBoxInternalManage.cpp:1023:            memcpy(&pPart->aPartitions[i],
VBox/Frontends/VBoxManage/VBoxInternalManage.cpp:1025:            memcpy(&pPart->aPartitions[uMinIdx],
VBox/Frontends/VBoxManage/VBoxInternalManage.cpp:1759:                memcpy(&tmp, &RawDescriptor.pPartDescs[i], sizeof(tmp));
VBox/Frontends/VBoxManage/VBoxInternalManage.cpp:1760:                memcpy(&RawDescriptor.pPartDescs[i], &RawDescriptor.pPartDescs[uMinIdx], sizeof(tmp));
VBox/Frontends/VBoxManage/VBoxInternalManage.cpp:1761:                memcpy(&RawDescriptor.pPartDescs[uMinIdx], &tmp, sizeof(tmp));
VBox/Frontends/VBoxManage/VBoxManage.cpp:591:            memcpy(&papszNewArgv[0], &argv[0], sizeof(argv[0]) * (i + 1));
VBox/Frontends/VBoxManage/VBoxManage.cpp:592:            memcpy(&papszNewArgv[i + 1], papszResponseFileArgs, sizeof(argv[0]) * cResponseFileArgs);
VBox/Frontends/VBoxManage/VBoxManage.cpp:593:            memcpy(&papszNewArgv[i + 1 + cResponseFileArgs], &argv[i + 1], sizeof(argv[0]) * (argc - i - 1 + 1));
VBox/Runtime/r0drv/alloc-ef-r0drv.cpp:763:            memcpy(pvRet, pvOld, RT_MIN(cbNew, pBlock->cbUnaligned));
VBox/Runtime/r0drv/alloc-ef-r0drv.cpp:845:        memcpy(pvDst, pvSrc, cb);
VBox/Runtime/r0drv/alloc-ef-r0drv.cpp:855:        memcpy(pvDst, pvSrc, cbSrc);
VBox/Runtime/r0drv/alloc-ef-r0drv.cpp:942:        memcpy(pvDst, pvSrc, cb);
VBox/Runtime/r0drv/alloc-ef-r0drv.cpp:952:        memcpy(pvDst, pvSrc, cbSrc);
VBox/Runtime/r0drv/alloc-r0drv.cpp:127:        memcpy((uint8_t *)(pHdr + 1) + cb, &g_abFence[0], RTR0MEM_FENCE_EXTRA);
VBox/Runtime/r0drv/alloc-r0drv.cpp:147:        memcpy((uint8_t *)(pHdr + 1) + cb, &g_abFence[0], RTR0MEM_FENCE_EXTRA);
VBox/Runtime/r0drv/alloc-r0drv.cpp:214:            memcpy((uint8_t *)(pHdrOld + 1) + cbNew, &g_abFence[0], RTR0MEM_FENCE_EXTRA);
VBox/Runtime/r0drv/alloc-r0drv.cpp:224:            memcpy(pHdrNew + 1, pvOld, cbCopy);
VBox/Runtime/r0drv/alloc-r0drv.cpp:227:            memcpy((uint8_t *)(pHdrNew + 1) + cbNew, &g_abFence[0], RTR0MEM_FENCE_EXTRA);
VBox/Runtime/r0drv/alloc-r0drv.cpp:297:        memcpy((uint8_t *)(pHdr + 1) + cb, &g_abFence[0], RTR0MEM_FENCE_EXTRA);
VBox/Runtime/r0drv/alloc-r0drv.cpp:390:        memcpy((uint8_t *)pv + cb, &g_abFence[0], RTR0MEM_FENCE_EXTRA);
VBox/Runtime/r0drv/nt/memuserkernel-r0drv-nt.cpp:42:        memcpy(pvDst, (void const *)R3PtrSrc, cb);
VBox/Runtime/r0drv/nt/memuserkernel-r0drv-nt.cpp:57:        memcpy((void *)R3PtrDst, pvSrc, cb);
VBox/Runtime/r0drv/nt/memuserkernel-r0drv-nt.cpp:99:        memcpy(pvDst, pvSrc, cb);
VBox/Runtime/r0drv/nt/memuserkernel-r0drv-nt.cpp:113:        memcpy(pvDst, pvSrc, cb);
VBox/Runtime/r0drv/nt/ntBldSymDb.cpp:366:    memcpy(&pSet->OsVerInfo, pOsVerInfo, sizeof(pSet->OsVerInfo));
VBox/Runtime/r0drv/nt/ntBldSymDb.cpp:367:    memcpy(&pSet->aStructs[0], g_aStructs, sizeof(g_aStructs));
VBox/Runtime/r0drv/nt/ntBldSymDb.cpp:373:        memcpy(pDst, g_aStructs[i].paMembers, g_aStructs[i].cMembers * sizeof(*pDst));
VBox/Runtime/r0drv/nt/ntBldSymDb.cpp:378:    memcpy(pDst, pszPdb, cbPdb);
VBox/Runtime/r0drv/nt/ntBldSymDb.cpp:1049:                memcpy(&pszDir[cchDir], pDirEntry->szName, pDirEntry->cbName + 1);
VBox/Runtime/r0drv/nt/ntBldSymDb.cpp:1068:                memcpy(&pszDir[cchDir], pDirEntry->szName, pDirEntry->cbName + 1);
VBox/Runtime/r0drv/darwin/memobj-r0drv-darwin.cpp:239:            memcpy(pvDst, pvSrc, cb);
VBox/Runtime/generic/mempool-generic.cpp:147:        memcpy(pMemPool->szName, pszName, cchName);
VBox/Runtime/generic/mempool-generic.cpp:284:    memcpy(pEntry + 1, pvSrc, cb);
VBox/Runtime/generic/mempool-generic.cpp:300:    memcpy(pEntry + 1, pvSrc, cbSrc);
VBox/Runtime/generic/memsafer-generic.cpp:185:            memcpy(pvNew, pvOld, RT_MIN(cbNew, cbOld));
VBox/Runtime/generic/http-curl.cpp:632:            memcpy(pszFreeMe, s_szPrefix, sizeof(s_szPrefix) - 1);
VBox/Runtime/generic/http-curl.cpp:633:            memcpy(&pszFreeMe[sizeof(s_szPrefix) - 1], pszProxyUrl, cchProxyUrl);
VBox/Runtime/generic/http-curl.cpp:774:                        memcpy(szTmp, RT_STR_TUPLE("http://"));
VBox/Runtime/generic/http-curl.cpp:2260:            memcpy(&pThis->Output.Mem.pb[cbCurSize], pvBuf, cbToAppend);
VBox/Runtime/generic/http-curl.cpp:2278:            memcpy(&pbNew[cbCurSize], pvBuf, cbToAppend);
VBox/Runtime/generic/RTPathAbs-generic.cpp:170:    memcpy(szTmpPath, pszPath, cchPath + 1);
VBox/Runtime/generic/RTPathAbs-generic.cpp:267:                memcpy(szTmpPath, szCurDir, cchCurDir);
VBox/Runtime/generic/RTPathAbs-generic.cpp:364:        memcpy(pszAbsPath, szTmpPath, cchTmpPath + 1);
VBox/Runtime/generic/RTMpGetDescription-generic.cpp:52:    memcpy(pszBuf, s_szUnknown, sizeof(s_szUnknown));
VBox/Runtime/generic/RTMpGetDescription-generic.cpp:106:    memcpy(pszBuf, pszSrc, cchSrc + 1);
VBox/Runtime/generic/env-generic.cpp:471:        memcpy(pszVar, pszVarEqualValue, cchVar);
VBox/Runtime/generic/env-generic.cpp:569:            memcpy(pszEntry, pszVar, cchVar);
VBox/Runtime/generic/env-generic.cpp:571:            memcpy(&pszEntry[cchVar + 1], pszValue, cchValue + 1);
VBox/Runtime/generic/env-generic.cpp:743:                            memcpy(pszValue, pszValueUtf8, cch + 1);
VBox/Runtime/generic/env-generic.cpp:782:                            memcpy(pszValue, pszValueOrg, cch + 1);
VBox/Runtime/generic/env-generic.cpp:1092:            memcpy(pszz, pIntEnv->papszEnv[iVar], cb);
VBox/Runtime/generic/RTMpGetDescription-generic-stub.cpp:48:    memcpy(pszBuf, s_szUnknown, sizeof(s_szUnknown));
VBox/Runtime/generic/rtStrFormatKernelAddress-generic.cpp:61:        memcpy(pszBuf, pszSrc, cbSrc);
VBox/Runtime/generic/rtStrFormatKernelAddress-generic.cpp:65:    memcpy(pszBuf, pszSrc, cbBuf);
VBox/Runtime/tools/RTDbgSymCache.cpp:1149:                memcpy(szPathBuf, pszPath, cchPath + 1);
VBox/Runtime/tools/RTLs.cpp:1066:        memcpy(pCollection->szName, pszName, cbName);
VBox/Runtime/tools/RTLs.cpp:1115:        memcpy(pEntry->szName, pszEntry, cchEntry);
VBox/Runtime/tools/RTLs.cpp:1122:            memcpy(psz, pszTarget, cbTarget);
VBox/Runtime/tools/RTLs.cpp:1128:            memcpy(psz, pszOwner, cbOwner);
VBox/Runtime/tools/RTLs.cpp:1134:            memcpy(psz, pszGroup, cbGroup);
VBox/Runtime/tools/RTLs.cpp:1292:                    memcpy(&pszPath[cchPath + 1], pEntry->szName, pEntry->cchName + 1);
VBox/Runtime/tools/RTLs.cpp:1389:        memcpy(szPath, pszArg, cchPath + 1);
VBox/Runtime/tools/RTNtDbgHelp.cpp:185:    memcpy(pMod->szFullName, pszFile, cbFullName);
VBox/Runtime/Makefile.kmk:247:	common/string/memcpy.asm \
VBox/Runtime/Makefile.kmk:2364:	common/string/memcpy.asm \
VBox/Runtime/Makefile.kmk:2449:	common/string/memcpy.asm \
VBox/Runtime/Makefile.kmk:3183:			-e '/^memcpy/d' \
VBox/Runtime/common/math/bignum.cpp:806:            memcpy(pBigNum->pauElements, pSrc->pauElements, pBigNum->cUsed * RTBIGNUM_ELEMENT_SIZE);
VBox/Runtime/common/math/bignum.cpp:875:                    memcpy(pDst->pauElements, pSrc->pauElements, pSrc->cUsed * RTBIGNUM_ELEMENT_SIZE);
VBox/Runtime/common/math/bignum.cpp:883:                        memcpy(pDst->pauElements, pSrc->pauElements, pSrc->cUsed * RTBIGNUM_ELEMENT_SIZE);
VBox/Runtime/common/math/bignum.cpp:1196:        memcpy(pDst->pauElements, pSrc->pauElements, pSrc->cUsed * RTBIGNUM_ELEMENT_SIZE);
VBox/Runtime/common/math/bignum.cpp:1799:                        memcpy(pauDst, pauSrc, cLeft * RTBIGNUM_ELEMENT_SIZE);
VBox/Runtime/common/math/bignum.cpp:1881:                    memcpy(pauDst, pauSrc, i * RTBIGNUM_ELEMENT_SIZE);
VBox/Runtime/common/path/RTPathGlob.cpp:313:                memcpy(pszBuf, pszValue, cchValue + 1); \
VBox/Runtime/common/path/RTPathGlob.cpp:1346:        memcpy(pGlob->szPath, &pszPattern[pParsed->aComps[0].off], pParsed->aComps[0].cch);
VBox/Runtime/common/path/RTPathGlob.cpp:1482:            memcpy(pEntry->szPath, pGlob->szPath, cchPath);
VBox/Runtime/common/path/RTPathGlob.cpp:1522:            memcpy(pEntry->szPath, pGlob->szPath, cchPath);
VBox/Runtime/common/path/RTPathGlob.cpp:1523:            memcpy(&pEntry->szPath[cchPath], pchName, cchName);
VBox/Runtime/common/path/RTPathGlob.cpp:1566:            memcpy(pEntry->szPath, pGlob->szPath, cchPath);
VBox/Runtime/common/path/RTPathGlob.cpp:1567:            memcpy(&pEntry->szPath[cchPath], pchName, cchName);
VBox/Runtime/common/path/RTPathGlob.cpp:1815:            memcpy(&pGlob->szPath[offPath], &pGlob->pszPattern[pGlob->pParsed->aComps[iComp].off], cch);
VBox/Runtime/common/path/RTPathGlob.cpp:1948:                            memcpy(&pGlob->szPath[offPath], pGlob->u.DirEntry.szName, pGlob->u.DirEntry.cbName);
VBox/Runtime/common/path/RTPathSplit.cpp:99:    memcpy(psz, &pszPath[offComp], cchComp);
VBox/Runtime/common/path/RTPathSplit.cpp:115:        memcpy(psz, &pszPath[offComp], cchComp);
VBox/Runtime/common/path/RTPathCopyComponents.cpp:80:    memcpy(pszDst, pszSrc, off);
VBox/Runtime/common/path/RTPathSplitReassemble.cpp:87:        memcpy(pszDst, pSplit->apszComps[0], cchComp);
VBox/Runtime/common/path/RTPathSplitReassemble.cpp:105:        memcpy(pszDst, pSplit->apszComps[idxComp], cchComp);
VBox/Runtime/common/path/RTPathAbsEx.cpp:85:            memcpy(szTmpPath, pszBase, cchVolSpec);
VBox/Runtime/common/path/RTPathAbsEx.cpp:86:            memcpy(&szTmpPath[cchVolSpec], pszPath, cchPath + 1);
VBox/Runtime/common/path/RTPathAbsEx.cpp:94:            memcpy(szTmpPath, pszBase, cchBase);
VBox/Runtime/common/path/RTPathAbsEx.cpp:96:            memcpy(&szTmpPath[cchBase + 1], pszPath, cchPath + 1);
VBox/Runtime/common/path/RTPathRmCmd.cpp:321:        memcpy(pszPath + cchPath, pDirEntry->szName, pDirEntry->cbName + 1);
VBox/Runtime/common/path/RTPathParsedReassemble.cpp:89:        memcpy(pszDst, &pszSrcPath[pParsed->aComps[0].off], cchComp);
VBox/Runtime/common/path/RTPathParsedReassemble.cpp:107:        memcpy(pszDst, &pszSrcPath[pParsed->aComps[idxComp].off], cchComp);
VBox/Runtime/common/path/RTPathJoin.cpp:53:    memcpy(pszPathDst, pszPathSrc, cchPathSrc + 1);
VBox/Runtime/common/path/RTPathJoinA.cpp:54:        memcpy(pszPathDst, pszPathSrc, cchPathSrc + 1);
VBox/Runtime/common/path/RTPathJoinEx.cpp:54:    memcpy(pszPathDst, pszPathSrc, cchPathSrc);
VBox/Runtime/common/path/RTPathAppendEx.cpp:124:        memcpy(pszPath, pszAppend, cchAppend);
VBox/Runtime/common/path/RTPathAppendEx.cpp:182:    memcpy(pszPathEnd, pszAppend, cchAppend);
VBox/Runtime/common/path/RTPathCalcRelative.cpp:123:        memcpy(pszPathDst, aszPathTmp, cchPathTmp + 1);
VBox/Runtime/common/zip/tarvfswriter.cpp:300:        memcpy(pThis->aHdrs[0].Common.name, pszPath, cchPath + 1);
VBox/Runtime/common/zip/tarvfswriter.cpp:383:        memcpy(pThis->aHdrs[0].Gnu.magic, RTZIPTAR_GNU_MAGIC, sizeof(pThis->aHdrs[0].Gnu.magic));
VBox/Runtime/common/zip/tarvfswriter.cpp:387:        memcpy(pThis->aHdrs[0].Common.magic, RTZIPTAR_USTAR_MAGIC, sizeof(pThis->aHdrs[0].Common.magic));
VBox/Runtime/common/zip/tarvfswriter.cpp:388:        memcpy(pThis->aHdrs[0].Common.version, RTZIPTAR_USTAR_VERSION, sizeof(pThis->aHdrs[0].Common.version));
VBox/Runtime/common/zip/tarvfswriter.cpp:1577:                memcpy(pThis->aHdrs[0].Common.linkname, szTarget, cchTarget + 1);
VBox/Runtime/common/zip/tarvfswriter.cpp:2077:        memcpy(pszCopy, pszPrefix, cchPrefix + 1);
VBox/Runtime/common/zip/zip.cpp:286:        memcpy(pbDst, pvBuf, cb);
VBox/Runtime/common/zip/zip.cpp:380:        memcpy(pvBuf, pZip->u.Store.pb, cb);
VBox/Runtime/common/zip/zip.cpp:1030:        memcpy(pZip->u.LZF.pbInput, pvBuf, cbBuf);
VBox/Runtime/common/zip/zip.cpp:1135:            memcpy(pvBuf, pZip->u.LZF.pbSpill, cb);
VBox/Runtime/common/zip/zip.cpp:1204:            memcpy(pvBuf, pZip->u.LZF.pbSpill, cb);
VBox/Runtime/common/zip/zip.cpp:1755:                memcpy(pvDst, s_abZero4K, sizeof(s_abZero4K));
VBox/Runtime/common/zip/zip.cpp:1775:            memcpy(pvDst, pvSrc, cbSrc);
VBox/Runtime/common/zip/zip.cpp:1875:            memcpy(pvDst, pvSrc, cbSrc);
VBox/Runtime/common/zip/zip.cpp:1897:                memcpy(pvDst, (uint8_t *)pvSrc + 1, cbSrc - 1);
VBox/Runtime/common/zip/xarvfs.cpp:1759:        memcpy(psz, pszName, cbCurName);
VBox/Runtime/common/zip/xarvfs.cpp:1770:            memcpy(psz, pszAncestorName, cchAncestorName);
VBox/Runtime/common/zip/tarvfs.cpp:607:            memcpy(pszDst, pHdr->ab, cbIncoming);
VBox/Runtime/common/zip/pkzip.cpp:109:    memcpy(pSgBuf->paSegs[0].pvSeg, pThis->pu8Buf + off, cbToRead);
VBox/Runtime/common/zip/pkzipvfs.cpp:504:                        memcpy(&pThis->cd64ex, pu8Buf, cbExtra);
VBox/Runtime/common/alloc/alloc.cpp:46:        memcpy(pvDst, pvSrc, cb);
VBox/Runtime/common/alloc/alloc.cpp:57:        memcpy(pvDst, pvSrc, cbSrc);
VBox/Runtime/common/alloc/memtracker.cpp:409:            memcpy(pTag->szTag, pszTag, cchTag + 1);
VBox/Runtime/common/dbg/dbgmodcodeview.cpp:600:                memcpy(szTmpName, pszName, cchName);
VBox/Runtime/common/dbg/dbgmodcodeview.cpp:844:    memcpy(pThis->pchSrcStrings, pvSrcStrings, cbSrcStrings);
VBox/Runtime/common/dbg/dbgmodcodeview.cpp:891:    memcpy(pThis->pbSrcInfo, pvSrcInfo, cbSrcInfo);
VBox/Runtime/common/dbg/dbgmodcodeview.cpp:2206:            memcpy(&Sym, &paSymbols[iSymbol], sizeof(Sym));
VBox/Runtime/common/dbg/dbgmodcodeview.cpp:2212:                pszName = (const char *)memcpy(szShort, &Sym.N, 8);
VBox/Runtime/common/dbg/dbgmodcodeview.cpp:2260:                        memcpy(&Aux, &paSymbols[iSymbol + 1], sizeof(Aux));
VBox/Runtime/common/dbg/dbgmodcodeview.cpp:2680:                memcpy(szName, paShs[i].Name, sizeof(paShs[i].Name));
VBox/Runtime/common/dbg/dbgas.cpp:215:    memcpy(pDbgAs->szName, pszName, cchName + 1);
VBox/Runtime/common/dbg/dbgas.cpp:592:            pName->StrCore.pszString = (char *)memcpy(pName + 1, pszName, cchName + 1);
VBox/Runtime/common/dbg/dbgmoddbghelp.cpp:232:            memcpy(pArgs->pwszPrev, pLineInfo->FileName, cbLen);
VBox/Runtime/common/dbg/dbgmodcontainer.cpp:168:    memcpy(pExtSym->szName, pMySym->NameCore.pszString, pMySym->NameCore.cchString + 1);
VBox/Runtime/common/dbg/dbgmod.cpp:590:                memcpy(psz, pArgs->pDbgMod->pszName, cchName + 1);
VBox/Runtime/common/dbg/dbgmod.cpp:1452:                            memcpy(&pDeferred->u.MachO.aSegs, paSegs, cSegs * sizeof(paSegs[0]));
VBox/Runtime/common/dbg/dbgcfg.cpp:944:            memcpy(pszPath, szBackup, cchCachePath);
VBox/Runtime/common/dbg/dbgcfg.cpp:1043:                memcpy(pszPath, pchCache, cchCache);
VBox/Runtime/common/dbg/dbgcfg.cpp:1056:                memcpy(pszPath, pchCache, cchCache);
VBox/Runtime/common/dbg/dbgcfg.cpp:1078:            memcpy(pszPath, pchCache, cchCache);
VBox/Runtime/common/dbg/dbgcfg.cpp:1108:            memcpy(pszPath, pszDir, cchDir);
VBox/Runtime/common/dbg/dbgcfg.cpp:1517:                memcpy(pszPath, pchCache, cchCache);
VBox/Runtime/common/dbg/dbgcfg.cpp:1530:                memcpy(pszPath, pchCache, cchCache);
VBox/Runtime/common/dbg/dbgcfg.cpp:1552:            memcpy(pszPath, pchCache, cchCache);
VBox/Runtime/common/dbg/dbgcfg.cpp:1582:            memcpy(pszPath, pszDir, cchDir);
VBox/Runtime/common/dbg/dbgcfg.cpp:1625:    memcpy(pszSubDir, pszTopDir, cchTopDir);
VBox/Runtime/common/dbg/dbgcfg.cpp:1924:            memcpy(pNew->sz, pchPath, cchPath);
VBox/Runtime/common/dbg/dbgcfg.cpp:2128:        memcpy(psz, pCur->sz, pCur->cch);
VBox/Runtime/common/dbg/dbgcfg.cpp:2161:        memcpy(pszValue, szTmp, cbValue);
VBox/Runtime/common/dbg/dbgcfg.cpp:2188:            memcpy(psz, paMnemonics[i].pszMnemonic, paMnemonics[i].cchMnemonic);
VBox/Runtime/common/dbg/dbgmoddeferred.cpp:336:        memcpy(pSegInfo->szName, RT_STR_TUPLE("LATER"));
VBox/Runtime/common/dbg/dbgmodnm.cpp:301:                    memcpy(szSym, pszModName, cchMod);
VBox/Runtime/common/dbg/dbgmodnm.cpp:410:                    memcpy(&szSym[offSym], pszName, cchName + 1);
VBox/Runtime/common/log/tracelogreader.cpp:1082:        memcpy(&pEvt->abEvtData[0], pbData, pEvt->cbEvtData);
VBox/Runtime/common/log/log.cpp:547:                memcpy(pvNew, RTLOG_RINGBUF_EYE_CATCHER, sizeof(RTLOG_RINGBUF_EYE_CATCHER));
VBox/Runtime/common/log/log.cpp:548:                memcpy((char *)pvNew + cbNewSize - sizeof(RTLOG_RINGBUF_EYE_CATCHER_END),
VBox/Runtime/common/log/log.cpp:594:        memcpy(pchCur, pachText, cchText);
VBox/Runtime/common/log/log.cpp:607:        memcpy(pchCur, pachText, cchLeft);
VBox/Runtime/common/log/log.cpp:616:            memcpy(pchStart, pachText, cchBuf);
VBox/Runtime/common/log/log.cpp:625:            memcpy(pchStart, pachText, cchText);
VBox/Runtime/common/log/log.cpp:910:                memcpy(pszEnvVar, pszEnvVarBase, cchEnvVarBase);
VBox/Runtime/common/log/log.cpp:1195:    memcpy(&pLoggerRC->afGroups[0], &pLogger->afGroups[0], pLogger->cGroups * sizeof(pLoggerRC->afGroups[0]));
VBox/Runtime/common/log/log.cpp:1388:    memcpy(&pDstLogger->afGroups[0], &pSrcLogger->afGroups[0], cGroups * sizeof(pDstLogger->afGroups[0]));
VBox/Runtime/common/log/log.cpp:1853:# define APPEND_PSZ(psz,cch) do { memcpy(*ppszBuf, (psz), (cch)); *ppszBuf += (cch); *pcchBuf -= (cch); } while (0)
VBox/Runtime/common/log/log.cpp:2173:            memcpy(pszBuf, g_aLogFlags[i].pszInstr, cchInstr);
VBox/Runtime/common/log/log.cpp:2307:                        memcpy(pLogger->pInt->szFilename, pszValue, cch);
VBox/Runtime/common/log/log.cpp:2317:                        memcpy(szTmp, cchFile ? pszFile : "", cchFile + 1);
VBox/Runtime/common/log/log.cpp:2319:                        memcpy(pLogger->pInt->szFilename, pszValue, cch);
VBox/Runtime/common/log/log.cpp:2325:                        memcpy(&pLogger->pInt->szFilename[cch], szTmp, cchFile);
VBox/Runtime/common/log/log.cpp:3056:            memcpy(&pThis->achScratch[pThis->offScratch], pachChars, cb);
VBox/Runtime/common/log/log.cpp:3495:            memcpy(&pLogger->achScratch[offHalf], RT_STR_TUPLE(s_szDropMsg));
VBox/Runtime/common/log/log.cpp:3536:            memcpy(&pLogger->achScratch[pLogger->offScratch], pachChars, cb);
VBox/Runtime/common/log/log.cpp:3587:        memcpy(pszDst, pszSrc, cchSrc);
VBox/Runtime/common/log/log.cpp:3777:                    memcpy(psz, szDate, cch);
VBox/Runtime/common/log/log.cpp:3897:                        memcpy(psz, "-1  ", sizeof("-1  ") - 1);
VBox/Runtime/common/log/log.cpp:3978:            memcpy(&pLogger->achScratch[offScratch], pachChars, cb);
VBox/Runtime/common/log/log.cpp:3989:                memcpy(&pLogger->achScratch[offScratch], "\r\n", 2);
VBox/Runtime/common/log/tracelogwriter.cpp:169:    memcpy(pszTo, pszFrom, cchCopy);
VBox/Runtime/common/log/tracelogwriter.cpp:413:    memcpy(&pEvt->szMagic[0], TRACELOG_EVT_MAGIC, sizeof(pEvt->szMagic));
VBox/Runtime/common/log/tracelogwriter.cpp:496:    memcpy(&Hdr.szMagic[0], TRACELOG_HDR_MAGIC, sizeof(Hdr.szMagic));
VBox/Runtime/common/log/tracelogwriter.cpp:573:                    memcpy(&EvtDesc.szMagic[0], TRACELOG_EVTDESC_MAGIC, sizeof(EvtDesc.szMagic));
VBox/Runtime/common/log/tracelogwriter.cpp:594:                            memcpy(&EvtItemDesc.szMagic[0], TRACELOG_EVTITEMDESC_MAGIC, sizeof(EvtItemDesc.szMagic));
VBox/Runtime/common/log/tracelogwriter.cpp:668:                    memcpy(pbCur, pvSrc, cbItem);
VBox/Runtime/common/misc/handletablesimple.cpp:144:                    memcpy(papvLevel1, pThis->papvLevel1, sizeof(void *) * pThis->cLevel1);
VBox/Runtime/common/misc/getoptargv.cpp:537:        memcpy(&pszCmdLine[off], (psz), (cch)); \
VBox/Runtime/common/misc/thread.cpp:380:        memcpy(pThread->szName, pszName, cchName);
VBox/Runtime/common/misc/thread.cpp:985:    memcpy(pThread->szName, pszName, cchName);
VBox/Runtime/common/misc/handletablectx.cpp:154:                    memcpy(papvLevel1, pThis->papvLevel1, sizeof(void *) * pThis->cLevel1);
VBox/Runtime/common/misc/uri.cpp:220:                    memcpy(pchDst, pchSrc, cchBefore);
VBox/Runtime/common/misc/uri.cpp:247:                memcpy(pchDst, pchSrc, cchLeft);
VBox/Runtime/common/misc/uri.cpp:331:                memcpy(pszDst, pchSrc, cchBefore);
VBox/Runtime/common/misc/uri.cpp:361:            memcpy(pszDst, pchSrc, cchSrc);
VBox/Runtime/common/misc/uri.cpp:920:        memcpy(pszDst, s_szPrefix, cchPrefix);
VBox/Runtime/common/misc/uri.cpp:1119:                memcpy(pszDst, &pszUri[Parsed.offAuthorityHost], Parsed.cchAuthorityHost);
VBox/Runtime/common/misc/uri.cpp:1120:                memcpy(&pszDst[Parsed.cchAuthorityHost], &pszUri[Parsed.offPath], Parsed.cchPath);
VBox/Runtime/common/misc/inifile.cpp:494:                    memcpy(pszValue, psz, cchCurValue);
VBox/Runtime/common/misc/inifile.cpp:503:                    memcpy(pszValue, psz, cbValue - 1);
VBox/Runtime/common/misc/inifile.cpp:677:                    memcpy(pszKey, pszCurKey, cchCurKey);
VBox/Runtime/common/misc/inifile.cpp:682:                    memcpy(pszValue, psz, cchCurValue);
VBox/Runtime/common/misc/inifile.cpp:696:                    memcpy(pszKey, pszCurKey, cbKey - 1);
VBox/Runtime/common/misc/inifile.cpp:706:                    memcpy(pszValue, psz, cbValue - 1);
VBox/Runtime/common/misc/s3.cpp:301:        memcpy(&(pTmpMem->pszMem[pTmpMem->cSize]), pvBuf, cRSize);
VBox/Runtime/common/misc/sg.cpp:167:        memcpy(pvBufDst, pvBufSrc, cbThisCopy);
VBox/Runtime/common/misc/sg.cpp:314:        memcpy(pvBuf, pvSrc, cbThisCopy);
VBox/Runtime/common/misc/sg.cpp:339:        memcpy(pvDst, pvBuf, cbThisCopy);
VBox/Runtime/common/misc/lockvalidator.cpp:1087:    pThis->pszName              = (char *)memcpy(pszDst, szName, cbName);
VBox/Runtime/common/misc/lockvalidator.cpp:1090:    pThis->CreatePos.pszFile    = pSrcPos->pszFile     ? (char *)memcpy(pszDst, pSrcPos->pszFile,     cbFile)     : NULL;
VBox/Runtime/common/misc/lockvalidator.cpp:1092:    pThis->CreatePos.pszFunction= pSrcPos->pszFunction ? (char *)memcpy(pszDst, pSrcPos->pszFunction, cbFunction) : NULL;
VBox/Runtime/common/misc/json.cpp:1113:        memcpy(pvBuf, &pArgs->u.pbBuf[offInput], RT_MIN(cbLeft, cbBuf));
VBox/Runtime/common/misc/json.cpp:1132:        memcpy(pvBuf, &pszStr[offInput], RT_MIN(cbLeft, cbBuf));
VBox/Runtime/common/misc/aiomgr.cpp:370:            memcpy(((uint8_t *)pReq->pvBounceBuffer) + pReq->offBounceBuffer,
VBox/Runtime/common/misc/aiomgr.cpp:390:                    memcpy(pReq->DataSeg.pvSeg,
VBox/Runtime/common/misc/aiomgr.cpp:540:                    memcpy(pvBuf, pReq->DataSeg.pvSeg, pReq->DataSeg.cbSeg);
VBox/Runtime/common/crypto/digest-core.cpp:160:                memcpy(pThis->pvState, hSrc->pvState, offHash);
VBox/Runtime/common/crypto/digest-core.cpp:162:            memcpy(&pThis->abState[offHash], &hSrc->abState[offHash], hSrc->pDesc->cbHash);
VBox/Runtime/common/crypto/digest-core.cpp:288:            memcpy(pvHash, &pThis->abState[pThis->offHash], cbNeeded);
VBox/Runtime/common/crypto/digest-core.cpp:291:            memcpy(pvHash, &pThis->abState[pThis->offHash], cbNeeded);
VBox/Runtime/common/crypto/digest-core.cpp:297:            memcpy(pvHash, &pThis->abState[pThis->offHash], cbHash);
VBox/Runtime/common/crypto/store-inmem.cpp:125:        memcpy(pEntry->abEncoded, pbSrc, cbSrc);
VBox/Runtime/common/crypto/pkix-signature-rsa.cpp:286:    memcpy(pbDst, pbDigestInfoStart, cbDigestInfoStart);
VBox/Runtime/common/crypto/x509-core.cpp:869:                memcpy(&pszBuf[off], g_aRdnMap[iName].pszShortNm, g_aRdnMap[iName].cchShortNm);
VBox/Runtime/common/crypto/x509-core.cpp:884:                memcpy(&pszBuf[off], pszUtf8, cchUtf8);
VBox/Runtime/common/crypto/store-cert-add-basic.cpp:689:                                memcpy(&szPath[cchPath], u.DirEntry.szName, u.DirEntry.cbName + 1);
VBox/Runtime/common/crypto/store-cert-add-basic.cpp:798:                                memcpy(&szPath[cchPath], u.DirEntry.szName, u.DirEntry.cbName);
VBox/Runtime/common/vfs/vfsstddir.cpp:390:                    memcpy(pNewSymlink->szSymlink, pszSymlink, cchSymlink);
VBox/Runtime/common/vfs/vfschain.cpp:474:            memcpy(pszCopy, psz, cch);
VBox/Runtime/common/vfs/vfschain.cpp:533:        memcpy(paNew, pSpec->paElements, iElement * sizeof(paNew[0]));
VBox/Runtime/common/vfs/vfschain.cpp:574:        memcpy(paNew, pElement->paArgs, iArg * sizeof(paNew[0]));
VBox/Runtime/common/vfs/vfsfss2dir.cpp:231:            memcpy(pEntry->szName, pszPath, cbRelativePath);
VBox/Runtime/common/vfs/vfsfss2dir.cpp:378:                    memcpy(pThis->szBaseDir, szAbsPath, cbBaseDir);
VBox/Runtime/common/vfs/vfsreadahead.cpp:248:                memcpy(pbDst, pBufDesc->pbBuffer + offCurBuf, cbFromCurBuf);
VBox/Runtime/common/vfs/vfsmemory.cpp:310:                memcpy(pbDst, &pExtent->abData[offUnsigned - pExtent->off], cbThisRead);
VBox/Runtime/common/vfs/vfsmemory.cpp:512:        memcpy(&pExtent->abData[offDst], pbSrc, cbThisWrite);
VBox/Runtime/common/fs/fatvfs.cpp:878:        memcpy(pFatCache->aEntries[0].pbData, pbFirst512FatBytes, RT_MIN(512, pFatCache->cbEntry));
VBox/Runtime/common/fs/fatvfs.cpp:3123:                    memcpy(&wszName[offName],         paEntries[iEntry].Slot.awcName0, sizeof(paEntries[iEntry].Slot.awcName0));
VBox/Runtime/common/fs/fatvfs.cpp:3124:                    memcpy(&wszName[offName + 5],     paEntries[iEntry].Slot.awcName1, sizeof(paEntries[iEntry].Slot.awcName1));
VBox/Runtime/common/fs/fatvfs.cpp:3125:                    memcpy(&wszName[offName + 5 + 6], paEntries[iEntry].Slot.awcName2, sizeof(paEntries[iEntry].Slot.awcName2));
VBox/Runtime/common/fs/fatvfs.cpp:3463:            memcpy(pDirEntry->achName, szShortName, sizeof(pDirEntry->achName));
VBox/Runtime/common/fs/fatvfs.cpp:3482:                memcpy(pDirEntry->achName, szShortName, sizeof(pDirEntry->achName));
VBox/Runtime/common/fs/fatvfs.cpp:3506:            memcpy(pDirEntry->achName, szShortName, sizeof(pDirEntry->achName));
VBox/Runtime/common/fs/fatvfs.cpp:3580:                memcpy(paSlots[iSlot].awcName0, pwszSrc, sizeof(paSlots[iSlot].awcName0));
VBox/Runtime/common/fs/fatvfs.cpp:3582:                memcpy(paSlots[iSlot].awcName1, pwszSrc, sizeof(paSlots[iSlot].awcName1));
VBox/Runtime/common/fs/fatvfs.cpp:3584:                memcpy(paSlots[iSlot].awcName2, pwszSrc, sizeof(paSlots[iSlot].awcName2));
VBox/Runtime/common/fs/fatvfs.cpp:3766:                    memcpy(pDstEntry, &paSlots[iSrcSlot], sizeof(*pDstEntry));
VBox/Runtime/common/fs/fatvfs.cpp:3768:                    memcpy(pDstEntry, pDirEntry,          sizeof(*pDstEntry));
VBox/Runtime/common/fs/fatvfs.cpp:4540:                    memcpy(&wszName[offName],         paEntries[iEntry].Slot.awcName0, sizeof(paEntries[iEntry].Slot.awcName0));
VBox/Runtime/common/fs/fatvfs.cpp:4541:                    memcpy(&wszName[offName + 5],     paEntries[iEntry].Slot.awcName1, sizeof(paEntries[iEntry].Slot.awcName1));
VBox/Runtime/common/fs/fatvfs.cpp:4542:                    memcpy(&wszName[offName + 5 + 6], paEntries[iEntry].Slot.awcName2, sizeof(paEntries[iEntry].Slot.awcName2));
VBox/Runtime/common/fs/fatvfs.cpp:5181:        memcpy(pThis->szLabel, pachLabel, RT_SIZEOFMEMB(FATEBPB, achLabel));
VBox/Runtime/common/fs/fatvfs.cpp:5185:        memcpy(pThis->szType, pachType, RT_SIZEOFMEMB(FATEBPB, achType));
VBox/Runtime/common/fs/fatvfs.cpp:5355:        memcpy(pThis->szType, "FAT32", 6);
VBox/Runtime/common/fs/fatvfs.cpp:5480:            memcpy(pThis->szType, pThis->enmFatType == RTFSFATTYPE_FAT12 ? "FAT12" : "FAT16", 6);
VBox/Runtime/common/fs/fatvfs.cpp:6028:    memcpy(pBootSector->achOemName, enmFatType == RTFSFATTYPE_FAT32 ? "FAT32   " : "IPRT 6.2", sizeof(pBootSector->achOemName));
VBox/Runtime/common/fs/fatvfs.cpp:6050:        memcpy(pBootSector->Bpb.Ebpb.achType, enmFatType == RTFSFATTYPE_FAT12 ? "FAT12   " : "FAT16   ",
VBox/Runtime/common/fs/fatvfs.cpp:6071:            memcpy(pBootSector->Bpb.Fat32Ebpb.u.achType, "FAT32   ", sizeof(pBootSector->Bpb.Fat32Ebpb.u.achType));
VBox/Runtime/common/fs/isovfs.cpp:3371:                memcpy(pDirEntry->szName, pDirRec->achFileId, cchName);
VBox/Runtime/common/fs/isovfs.cpp:3507:                        memcpy(pDirEntry->szName, &pbName[1], cchDst);
VBox/Runtime/common/fs/isovfs.cpp:4627:        memcpy(pThis->Udf.VolInfo.achLogicalVolumeID, pLvd->achLogicalVolumeID, sizeof(pThis->Udf.VolInfo.achLogicalVolumeID));
VBox/Runtime/common/fs/isovfs.cpp:4692:                memcpy(pEndianConvert, pDesc, sizeof(*pDesc));
VBox/Runtime/common/fs/isovfs.cpp:4951:                memcpy(pEndianConvert, pDesc, sizeof(*pDesc));
VBox/Runtime/common/fs/isomakerimport.cpp:981:                            memcpy(&pThis->szRockSymlinkTargetBuf[offDst], pszCopy, cchCopy);
VBox/Runtime/common/fs/isomakerimport.cpp:988:                            memcpy(&pThis->szRockSymlinkTargetBuf[offDst], pszCopy,
VBox/Runtime/common/fs/isomakerimport.cpp:1050:                            memcpy(&pThis->szRockNameBuf[offDst], pUnion->NM.achName, cchName);
VBox/Runtime/common/fs/isomakerimport.cpp:1450:            memcpy(pThis->szNameBuf, pDirRec->achFileId, pDirRec->bFileIdLength);
VBox/Runtime/common/fs/isomakerimport.cpp:1511:                pDirRec = (PCISO9660DIRREC)memcpy(abDirRecCopy, pDirRec, pDirRec->cbDirRec);
VBox/Runtime/common/fs/isomakerimport.cpp:1774:            memcpy(pszCopy, pachField, off);
VBox/Runtime/common/fs/isomakerimport.cpp:2250:        memcpy(pbSelCrit, pEntry->abSelectionCriteria, sizeof(pEntry->abSelectionCriteria));
VBox/Runtime/common/fs/isomakerimport.cpp:2270:                memcpy(&pbSelCrit[cbSelCrit], pExtEntry->abSelectionCriteria, sizeof(pExtEntry->abSelectionCriteria));
VBox/Runtime/common/fs/isomakerimport.cpp:2334:        memcpy(pszId, pEntry->achSectionId, sizeof(pEntry->achSectionId));
VBox/Runtime/common/fs/isomakerimport.cpp:2407:        memcpy(szId, pValEntry->achId, sizeof(pValEntry->achId));
VBox/Runtime/common/fs/isomakercmd.cpp:1191:                memcpy(pszDst, s_aSpecs[i].pszName, s_aSpecs[i].cchName);
VBox/Runtime/common/fs/isomakercmd.cpp:1197:                memcpy(pszDst, s_aSpecs[i].pszName, cbDst - 1);
VBox/Runtime/common/fs/isomakercmd.cpp:1441:            memcpy(pParsed->aNames[pParsed->cNamesWithSrc].szPath, pszSpec, cchName);
VBox/Runtime/common/fs/isomakercmd.cpp:1444:            memcpy(&pParsed->aNames[pParsed->cNamesWithSrc].szPath[1], pszSpec, cchName);
VBox/Runtime/common/fs/isomakercmd.cpp:1731:                memcpy(&pszSrc[cchSrc + 1], pDirEntry->szName, pDirEntry->cbName);
VBox/Runtime/common/fs/isomaker.cpp:1437:    memcpy(&pThis->pbSysArea[off], pvContent, cbContent);
VBox/Runtime/common/fs/isomaker.cpp:2004:        memcpy(&pszDst[offDstDot - cchOrd], szOrd, cchOrd);
VBox/Runtime/common/fs/isomaker.cpp:2060:                memcpy(pszDst, pchSrc, cchSrc);
VBox/Runtime/common/fs/isomaker.cpp:2242:            memcpy(pszDst, pchSpec, cchSpec);
VBox/Runtime/common/fs/isomaker.cpp:2271:            memcpy(pName->szName, szName, cchName);
VBox/Runtime/common/fs/isomaker.cpp:3293:        pFile->u.pszSrcPath = (char *)memcpy(pFile + 1, pszSrcFile, cbSrcFile);
VBox/Runtime/common/fs/isomaker.cpp:3620:        memcpy(pSymlink->szTarget, pszTarget, cchTarget);
VBox/Runtime/common/fs/isomaker.cpp:4181:            memcpy(u.Entry.abSelectionCriteria, pvSelCritData, RT_MIN(cbSelCritData, sizeof(u.Entry.abSelectionCriteria)));
VBox/Runtime/common/fs/isomaker.cpp:4218:                    memcpy(u.ExtEntry.abSelectionCriteria, pbSrc, sizeof(u.ExtEntry.abSelectionCriteria));
VBox/Runtime/common/fs/isomaker.cpp:4226:                    memcpy(u.ExtEntry.abSelectionCriteria, pbSrc, cbSrc);
VBox/Runtime/common/fs/isomaker.cpp:4470:    memcpy(pDesc->Hdr.achStdId, ISO9660VOLDESC_STD_ID, sizeof(pDesc->Hdr.achStdId));
VBox/Runtime/common/fs/isomaker.cpp:4471:    memcpy(pDesc->achBootSystemId, RT_STR_TUPLE(ISO9660BOOTRECORDELTORITO_BOOT_SYSTEM_ID));
VBox/Runtime/common/fs/isomaker.cpp:5065:        memcpy(pachDst, wszSrc, cwcSrc * sizeof(RTUTF16));
VBox/Runtime/common/fs/isomaker.cpp:5100:        memcpy(pachDst, pszSrc, cchSrc);
VBox/Runtime/common/fs/isomaker.cpp:5123:            memcpy(a_achDst, szTmp, sizeof(a_achDst)); \
VBox/Runtime/common/fs/isomaker.cpp:5231:    memcpy(pPrimary->Hdr.achStdId, ISO9660VOLDESC_STD_ID, sizeof(pPrimary->Hdr.achStdId));
VBox/Runtime/common/fs/isomaker.cpp:5282:        memcpy(pJoliet->Hdr.achStdId, ISO9660VOLDESC_STD_ID, sizeof(pJoliet->Hdr.achStdId));
VBox/Runtime/common/fs/isomaker.cpp:5336:    memcpy(pThis->pTerminatorVolDesc->achStdId, ISO9660VOLDESC_STD_ID, sizeof(pThis->pTerminatorVolDesc->achStdId));
VBox/Runtime/common/fs/isomaker.cpp:5688:                    memcpy(&pbBuf[off], pszTarget, cchToCopy);
VBox/Runtime/common/fs/isomaker.cpp:5720:            memcpy(&pbBuf[off], pszTarget, cbNeeded - 2);
VBox/Runtime/common/fs/isomaker.cpp:5783:            memcpy(pchDst, RT_STR_TUPLE(ISO9660_RRIP_ID));
VBox/Runtime/common/fs/isomaker.cpp:5785:            memcpy(pchDst, RT_STR_TUPLE(ISO9660_RRIP_DESC));
VBox/Runtime/common/fs/isomaker.cpp:5787:            memcpy(pchDst, RT_STR_TUPLE(ISO9660_RRIP_SRC));
VBox/Runtime/common/fs/isomaker.cpp:5890:                memcpy(&pNM->achName[0], pszSrc, cchThis);
VBox/Runtime/common/fs/isomaker.cpp:6148:            memcpy(pbBuf, &abSectorBuf[offSrcBuf], cbToCopy);
VBox/Runtime/common/fs/isomaker.cpp:6369:            memcpy(&pbBuf[offInBuf], (uint8_t *)pFile->pBootInfoTable + offInTab, cbToCopy);
VBox/Runtime/common/fs/isomaker.cpp:6424:        memcpy(&pPathRec->achDirId[0], pName->szName, pName->cbNameInDirRec);
VBox/Runtime/common/fs/isomaker.cpp:6461:    memcpy(pbBuf, &abTmpRec[offInRec], cbToCopy);
VBox/Runtime/common/fs/isomaker.cpp:6612:        memcpy(&pDirRec->achFileId[0], pName->szName, pName->cbNameInDirRec);
VBox/Runtime/common/fs/isomaker.cpp:6627:        memcpy(&pDirRec->achFileId[0], pwszTmp, pName->cbNameInDirRec);
VBox/Runtime/common/fs/isomaker.cpp:6732:            pCurDirRec = (PISO9660DIRREC)memcpy(&pbBuf[cbReturn], pDirRec, cbOne);
VBox/Runtime/common/fs/isomaker.cpp:6788:        memcpy(pbBuf, &abTmpBuf[off], cbToCopy);
VBox/Runtime/common/fs/isomaker.cpp:6803:            memcpy(pbBuf, &abTmpBuf[off], cbCopied);
VBox/Runtime/common/fs/isomaker.cpp:6852:                memcpy(pbBuf, &abTmpBuf[offInRec], cbToCopy);
VBox/Runtime/common/fs/isomaker.cpp:6921:    memcpy(pbBuf, &abTmpBuf[off], cbToCopy);
VBox/Runtime/common/fs/isomaker.cpp:7222:            memcpy(pbBuf, &pIsoMaker->pbVolDescs[offVolDescs], cbDone);
VBox/Runtime/common/fs/isomaker.cpp:7238:            memcpy(pbBuf, &pIsoMaker->pbSysArea[(size_t)offUnsigned], cbDone);
VBox/Runtime/common/dvm/dvmvfs.cpp:925:            memcpy(pDirEntry->szName, pszVolName, cchVolName + 1);
VBox/Runtime/common/string/RTStrCatEx.cpp:45:        memcpy(pszDst2, pszSrc, cchSrc);
VBox/Runtime/common/string/RTStrCatEx.cpp:52:        memcpy(pszDst2, pszSrc, cbDst - 1);
VBox/Runtime/common/string/RTStrCopyEx.cpp:41:        memcpy(pszDst, pszSrc, cchSrc);
VBox/Runtime/common/string/RTStrCopyEx.cpp:48:        memcpy(pszDst, pszSrc, cbDst - 1);
VBox/Runtime/common/string/memcpy.cpp:1:/* $Id: memcpy.cpp $ */
VBox/Runtime/common/string/memcpy.cpp:3: * IPRT - CRT Strings, memcpy().
VBox/Runtime/common/string/memcpy.cpp:44:_CRT_INSECURE_DEPRECATE_MEMORY(memcpy_s) void *  __cdecl memcpy(__out_bcount_full_opt(_Size) void * pvDst, __in_bcount_opt(_Size) const void * pvSrc, __in size_t cb)
VBox/Runtime/common/string/memcpy.cpp:46:void *memcpy(void *pvDst, const void *pvSrc, size_t cb)
VBox/Runtime/common/string/memcpy.cpp:49:void *memcpy(void *pvDst, const void *pvSrc, size_t cb)
VBox/Runtime/common/string/strformatnum.cpp:53:            memcpy(pszBuf, szTmp, cchRet + 1);
VBox/Runtime/common/string/strformatnum.cpp:58:                memcpy(pszBuf, szTmp, cbBuf - 1);
VBox/Runtime/common/string/strformatnum.cpp:82:            memcpy(pszBuf, szTmp, cchRet + 1);
VBox/Runtime/common/string/strformatnum.cpp:87:                memcpy(pszBuf, szTmp, cbBuf - 1);
VBox/Runtime/common/string/strformatnum.cpp:111:            memcpy(pszBuf, szTmp, cchRet + 1);
VBox/Runtime/common/string/strformatnum.cpp:116:                memcpy(pszBuf, szTmp, cbBuf - 1);
VBox/Runtime/common/string/strformatnum.cpp:140:            memcpy(pszBuf, szTmp, cchRet + 1);
VBox/Runtime/common/string/strformatnum.cpp:145:                memcpy(pszBuf, szTmp, cbBuf - 1);
VBox/Runtime/common/string/strformatnum.cpp:293:        memcpy(pszBuf, szTmp, cchRet + 1);
VBox/Runtime/common/string/strformatnum.cpp:298:            memcpy(pszBuf, szTmp, cbBuf - 1);
VBox/Runtime/common/string/strcache.cpp:644:    memcpy(pEntry->szString, pchString, cchString);
VBox/Runtime/common/string/strcache.cpp:685:    memcpy(pBigEntry->Core.szString, pchString, cchString);
VBox/Runtime/common/string/strcache.cpp:755:    memcpy(pEntry->szString, pchString, cchString);
VBox/Runtime/common/string/strcache.cpp:936:            memcpy(pszStackBuf, pchString, cchString);
VBox/Runtime/common/string/strcache.cpp:949:    memcpy(pszHeapBuf, pchString, cchString);
VBox/Runtime/common/string/strprintf2.cpp:76:                memcpy(pszCur, pachChars, cbChars);
VBox/Runtime/common/string/strprintf2.cpp:97:            memcpy(pszCur, pachChars, cbLeft);
VBox/Runtime/common/string/RTStrCat.cpp:44:        memcpy(pszDst2, pszSrc, cchSrc + 1);
VBox/Runtime/common/string/RTStrCat.cpp:50:        memcpy(pszDst2, pszSrc, cbDst - 1);
VBox/Runtime/common/string/stringalloc.cpp:112:        memcpy(psz, pszString, cch);
VBox/Runtime/common/string/stringalloc.cpp:129:        memcpy(psz, pszString, cch);
VBox/Runtime/common/string/stringalloc.cpp:148:        memcpy(pszDst, pszString, cch);
VBox/Runtime/common/string/stringalloc.cpp:181:    memcpy(&pszNew[cchOrg], pszAppend, cchAppend);
VBox/Runtime/common/string/stringalloc.cpp:241:        memcpy(&pszNew[off], paPairs[i].psz, paPairs[i].cch);
VBox/Runtime/common/string/strformattype.cpp:295:            memcpy(&g_aTypes[i].szType[0], pszType, cchType + 1);
VBox/Runtime/common/string/RTStrCopyPEx.cpp:43:        memcpy(pszDst, pszSrc, cchSrc);
VBox/Runtime/common/string/RTStrCopyPEx.cpp:52:        memcpy(*ppszDst, pszSrc, cbDst - 1);
VBox/Runtime/common/string/RTStrCopyP.cpp:42:        memcpy(pszDst, pszSrc, cchSrc + 1);
VBox/Runtime/common/string/RTStrCopyP.cpp:50:        memcpy(*ppszDst, pszSrc, cbDst - 1);
VBox/Runtime/common/string/memcpy.asm:1:; $Id: memcpy.asm $
VBox/Runtime/common/string/memcpy.asm:3:; IPRT - No-CRT memcpy - AMD64 & X86.
VBox/Runtime/common/string/memcpy.asm:35:RT_NOCRT_BEGINPROC memcpy
VBox/Runtime/common/string/memcpy.asm:92:ENDPROC RT_NOCRT(memcpy)
VBox/Runtime/common/string/memchr.cpp:3: * IPRT - CRT Strings, memcpy().
VBox/Runtime/common/string/RTStrCopy.cpp:40:        memcpy(pszDst, pszSrc, cchSrc + 1);
VBox/Runtime/common/string/RTStrCopy.cpp:46:        memcpy(pszDst, pszSrc, cbDst - 1);
VBox/Runtime/common/string/memcpy_alias.c:3: * IPRT - No-CRT memcpy() alias for gcc.
VBox/Runtime/common/string/memcpy_alias.c:32:#undef memcpy
VBox/Runtime/common/string/memcpy_alias.c:36:#  pragma weak memcpy
VBox/Runtime/common/string/memcpy_alias.c:40:extern void *(memcpy)(void *pvDst, const void *pvSrc, size_t cb)
VBox/Runtime/common/string/memcpy_alias.c:42:    return RT_NOCRT(memcpy)(pvDst, pvSrc, cb);
VBox/Runtime/common/string/memcpy_alias.c:47:__asm__(".weak memcpy\t\n"
VBox/Runtime/common/string/memcpy_alias.c:48:        " .set memcpy," RT_NOCRT_STR(memcpy) "\t\n");
VBox/Runtime/common/string/memcpy_alias.c:51:extern __typeof(RT_NOCRT(memcpy)) memcpy __attribute__((weak, alias(RT_NOCRT_STR(memcpy))));
VBox/Runtime/common/string/straprintf.cpp:88:                memcpy(pArg->psz, pachChars, cbChars);
VBox/Runtime/common/string/straprintf.cpp:111:                    memcpy(pszBuffer, pArg->pszBuffer, off);
VBox/Runtime/common/string/straprintf.cpp:122:                    memcpy(pArg->psz, pachChars, cbChars);
VBox/Runtime/common/string/straprintf.cpp:164:                memcpy(psz, szBuf, cbRet + 1);
VBox/Runtime/common/string/RTUtf16Copy.cpp:40:        memcpy(pwszDst, pwszSrc, (wcwSrc + 1) * sizeof(RTUTF16));
VBox/Runtime/common/string/RTUtf16Copy.cpp:46:        memcpy(pwszDst, pwszSrc, (cwcDst - 1) * sizeof(RTUTF16));
VBox/Runtime/common/string/ministring.cpp:58:        memcpy(m_psz, a_rSrc.c_str(), cchSrc);
VBox/Runtime/common/string/ministring.cpp:76:            memcpy(m_psz, a_pszSrc, cchSrc);
VBox/Runtime/common/string/ministring.cpp:95:        memcpy(m_psz, a_rSrc.c_str() + a_offSrc, a_cchSrc);
VBox/Runtime/common/string/ministring.cpp:110:        memcpy(m_psz, a_pszSrc, a_cchSrc);
VBox/Runtime/common/string/ministring.cpp:166:        memcpy(&pThis->m_psz[pThis->m_cch], pachChars, cbChars);
VBox/Runtime/common/string/ministring.cpp:222:        memcpy(&m_psz[cchThis], pszSrc, cchSrc);
VBox/Runtime/common/string/ministring.cpp:372:    memcpy(&m_psz[offStart], pszSrc, cchSrc);
VBox/Runtime/common/string/ministring.cpp:544:                    memcpy(ret.m_psz, pFirst, cbCopy);
VBox/Runtime/common/string/uniread.cpp:504:        memcpy(pszFullName, pszBasePath, cchBasePath);
VBox/Runtime/common/string/uniread.cpp:506:        memcpy(&pszFullName[cchBasePath + 1], pszFilename, cchFilename + 1);
VBox/Runtime/common/string/strprintf.cpp:80:                memcpy(pszCur, pachChars, cbChars);
VBox/Runtime/common/string/utf-16.cpp:162:        memcpy(pwsz, pwszString, cb);
VBox/Runtime/common/string/utf-16.cpp:175:        memcpy(pwsz, pwszString, cb);
VBox/Runtime/common/sort/shellsort.cpp:56:            memcpy(pvTmp, &pbArray[i * cbElement], cbElement);
VBox/Runtime/common/sort/shellsort.cpp:64:            memcpy(&pbArray[j * cbElement], pvTmp, cbElement);
VBox/Runtime/common/asn1/asn1-ut-objid.cpp:321:                    memcpy(pThis->szObjId, pszObjId, cbObjId);
VBox/Runtime/common/asn1/asn1-ut-objid.cpp:408:    memcpy(pThis->szObjId, g_szDefault, sizeof(g_szDefault));
VBox/Runtime/common/asn1/asn1-ut-objid.cpp:424:        memcpy(pThis->szObjId, pSrc->szObjId, cbObjId);
VBox/Runtime/common/asn1/asn1-ut-objid.cpp:438:            memcpy((uint32_t *)pThis->pauComponents, pSrc->pauComponents, pSrc->cComponents * sizeof(uint32_t));
VBox/Runtime/common/asn1/asn1-ut-objid.cpp:460:                    pThis->Asn1Core.uData.pv = memcpy(&pThis->szObjId[cbObjId], pSrc->Asn1Core.uData.pv, cbContent);
VBox/Runtime/common/asn1/asn1-basics.cpp:141:        memcpy(*ppvMem, pvSrc, cbMem);
VBox/Runtime/common/asn1/asn1-basics.cpp:220:        memcpy((void *)pAsn1Core->uData.pv, pvSrc, cbSrc);
VBox/Runtime/common/asn1/asn1-basics.cpp:290:                memcpy(&pHdrNew->au64Content[0], &pHdr->au64Content[0], cb);
VBox/Runtime/common/asn1/asn1-basics.cpp:293:                memcpy(&pHdrNew->au64Content[0], &pHdr->au64Content[0], pAsn1Core->cb);
VBox/Runtime/common/asn1/asn1-ut-bitstring.cpp:68:    memcpy(&pCtx->pbBuf[pCtx->offBuf], pvBuf, cbToWrite);
VBox/Runtime/common/asn1/asn1-encode.cpp:449:        memcpy(pArgs->pbDst, pvBuf, cbToWrite);
VBox/Runtime/common/asn1/asn1-encode.cpp:460:        memcpy(pArgs->pbDst, pvBuf, pArgs->cbDst);
VBox/Runtime/common/asn1/asn1-ut-objid-decode.cpp:90:        memcpy(pszObjId + 1, psz, cchNeeded);
VBox/Runtime/common/asn1/asn1-ut-octetstring.cpp:68:    memcpy(&pCtx->pbBuf[pCtx->offBuf], pvBuf, cbToWrite);
VBox/Runtime/common/asn1/asn1-ut-string.cpp:1505:                        memcpy(psz, pThis->Asn1Core.uData.pch, cch);
VBox/Runtime/common/asn1/asn1-ut-string.cpp:1667:                memcpy((void *)pThis->Asn1Core.uData.pv, pThis->pszUtf8, pThis->cchUtf8);
VBox/Runtime/common/asn1/asn1-cursor.cpp:164:                    memcpy(pszBuf, pCursor->pszErrorTag, cchErrorTag);
VBox/Runtime/common/asn1/oiddb2c.cpp:315:            memcpy(pCur->StrTabEntry.pszString, pszName, cchName + 1);
VBox/Runtime/common/ldr/ldrNative.cpp:271:    memcpy(psz, pszFilename, cchFilename);
VBox/Runtime/common/ldr/ldrNative.cpp:273:    memcpy(psz, pszSuffix, cchSuffix + 1);
VBox/Runtime/common/ldr/ldrPE.cpp:1148:                    memcpy(&pInfo->szModule[0], pszForwarder, off + 1);
VBox/Runtime/common/ldr/ldrPE.cpp:1153:                    memcpy(&pInfo->szModule[0], pszForwarder, offDot);
VBox/Runtime/common/ldr/ldrPE.cpp:1633:            memcpy(szName, &pSh->Name[0], sizeof(pSh->Name));
VBox/Runtime/common/ldr/ldrPE.cpp:1858:                        memcpy(pvBuf, pszString, cchString + 1);
VBox/Runtime/common/ldr/ldrkStuff.cpp:427:        memcpy(psz, pchSymbol, cchSymbol);
VBox/Runtime/common/ldr/ldrkStuff.cpp:487:        memcpy(psz, pchSymbol, cchSymbol);
VBox/Runtime/common/ldr/ldrkStuff.cpp:576:        memcpy(psz + 1, pszSymbol, cch + 1);
VBox/Runtime/common/ldr/ldrkStuff.cpp:869:            memcpy(pvBuf, pThis->pMod->pszName, cbBuf);
VBox/Runtime/common/ldr/ldrFile.cpp:213:        memcpy(pFileReader->szFilename, pszFilename, cchFilename + 1);
VBox/Runtime/common/ldr/ldrELFRelocatable.cpp.h:1326:        memcpy(pvBuf, (const uint8_t *)pThis->pvBits + (size_t)off, cb);
VBox/Runtime/common/ldr/ldrELFRelocatable.cpp.h:1814:                memcpy(&paShdrs[pModElf->Ehdr.e_shnum], paShdrs, cbShdrs);
VBox/Runtime/common/ldr/ldrMemory.cpp:94:    memcpy(pvBuf, (uint8_t *)pvUser + off, cb);
VBox/Runtime/common/ldr/ldrMemory.cpp:239:        memcpy(pThis->szName, pszName, cchName + 1);
VBox/Runtime/common/net/netaddrstr.cpp:846:                memcpy(szDummy, pszResultAddress4, 3);
VBox/Runtime/common/net/netaddrstr.cpp:853:                    memcpy(pszInternalAddress, szDummy, 2);
VBox/Runtime/common/net/netaddrstr.cpp:897:            memcpy(pszInternalAddressStart, pszResultAddressStart, strlen(pszResultAddressStart));
VBox/Runtime/common/net/netaddrstr.cpp:905:            memcpy(pszInternalPortStart, pszResultPortStart, strlen(pszResultPortStart));
VBox/Runtime/common/net/netaddrstr.cpp:948:            pszRc = (char *)memcpy(pszAddressOut, pszInternalAddressStart, strlen(pszInternalAddressStart));
VBox/Runtime/common/net/netaddrstr.cpp:977:                pszRc = (char *)memcpy(pszIfIdOut, pIfId, (pIfIdEnd - pIfId) + 1);
VBox/Runtime/common/net/netaddrstr.cpp:1195:            pl = (char *)memcpy(p, pszIfIdOutLocal, strlen(pszIfIdOutLocal));
VBox/Runtime/common/net/netaddrstr.cpp:1203:        pl = (char *)memcpy(pszResultAddress, pszAddressRfcOutLocal, strlen(pszAddressRfcOutLocal));
VBox/Runtime/common/net/netaddrstr2.cpp:376:        memcpy(pAddrResult, &ipv6, sizeof(ipv6));
VBox/Runtime/common/checksum/manifest2.cpp:712:        memcpy(pAttr->szName, pszAttr, cbName);
VBox/Runtime/common/checksum/manifest2.cpp:868:        memcpy(pszValue, pAttr->pszValue, cbNeeded);
VBox/Runtime/common/checksum/manifest2.cpp:1020:        memcpy(pszCopy, pszEntry, cchEntry + 1);
VBox/Runtime/common/checksum/manifest2.cpp:1080:        memcpy(pEntry->szName, pszEntry, cchEntry + 1);
VBox/Runtime/common/checksum/manifest2.cpp:1205:            memcpy(pEntry->szName, pszEntry, cchEntry + 1);
VBox/Runtime/common/checksum/alt-sha1.cpp:122:    memcpy(puW, puSrc, RTSHA1_BLOCK_SIZE);
VBox/Runtime/common/checksum/alt-sha1.cpp:384:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0] + cbBuffered, pbBuf, cbMissing);
VBox/Runtime/common/checksum/alt-sha1.cpp:394:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0] + cbBuffered, pbBuf, cbBuf);
VBox/Runtime/common/checksum/alt-sha1.cpp:422:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0], pbBuf, RTSHA1_BLOCK_SIZE);
VBox/Runtime/common/checksum/alt-sha1.cpp:437:        memcpy((uint8_t *)&pCtx->AltPrivate.auW[0], pbBuf, cbBuf);
VBox/Runtime/common/checksum/alt-sha1.cpp:496:    memcpy(pabDigest, &pCtx->AltPrivate.auH[0], RTSHA1_HASH_SIZE);
VBox/Runtime/common/checksum/alt-md5.cpp:55:#include <iprt/string.h>                 /* for memcpy() */
VBox/Runtime/common/checksum/alt-md5.cpp:253:            memcpy(p, buf, len);
VBox/Runtime/common/checksum/alt-md5.cpp:256:        memcpy(p, buf, t);
VBox/Runtime/common/checksum/alt-md5.cpp:277:            memcpy(pCtx->AltPrivate.in, buf, 64);
VBox/Runtime/common/checksum/alt-md5.cpp:286:    memcpy(pCtx->AltPrivate.in, buf, len);
VBox/Runtime/common/checksum/alt-md5.cpp:335:    memcpy(digest, pCtx->AltPrivate.buf, 16);
VBox/Runtime/common/checksum/alt-md2.cpp:192:            memcpy(&pCtx->AltPrivate.abStateX[RTMD2_BUF_OFF + pCtx->AltPrivate.cbBuffer], pbBuf, cbMissing);
VBox/Runtime/common/checksum/alt-md2.cpp:203:            memcpy(&pCtx->AltPrivate.abStateX[RTMD2_BUF_OFF + pCtx->AltPrivate.cbBuffer], pbBuf, cbBuf);
VBox/Runtime/common/checksum/alt-md2.cpp:226:        memcpy(&pCtx->AltPrivate.abStateX[RTMD2_BUF_OFF], pbBuf, cbBuf);
VBox/Runtime/common/checksum/alt-md2.cpp:256:    memcpy(pabDigest, pCtx->AltPrivate.abStateX, RTMD2_HASH_SIZE);
VBox/Runtime/common/checksum/alt-sha256.cpp:266:    memcpy(&pCtx->AltPrivate.auW[0], pbBlock, RTSHA256_BLOCK_SIZE);
VBox/Runtime/common/checksum/alt-sha256.cpp:475:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0] + cbBuffered, pbBuf, cbMissing);
VBox/Runtime/common/checksum/alt-sha256.cpp:485:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0] + cbBuffered, pbBuf, cbBuf);
VBox/Runtime/common/checksum/alt-sha256.cpp:513:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0], pbBuf, RTSHA256_BLOCK_SIZE);
VBox/Runtime/common/checksum/alt-sha256.cpp:528:        memcpy((uint8_t *)&pCtx->AltPrivate.auW[0], pbBuf, cbBuf);
VBox/Runtime/common/checksum/alt-sha256.cpp:593:    memcpy(pabDigest, &pCtx->AltPrivate.auH[0], RTSHA256_HASH_SIZE);
VBox/Runtime/common/checksum/alt-sha256.cpp:654:    memcpy(pabDigest, &pCtx->AltPrivate.auH[0], RTSHA224_HASH_SIZE);
VBox/Runtime/common/checksum/alt-sha512.cpp:242:    memcpy(puW, puSrc, RTSHA512_BLOCK_SIZE);
VBox/Runtime/common/checksum/alt-sha512.cpp:450:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0] + cbBuffered, pbBuf, cbMissing);
VBox/Runtime/common/checksum/alt-sha512.cpp:462:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0] + cbBuffered, pbBuf, cbBuf);
VBox/Runtime/common/checksum/alt-sha512.cpp:492:            memcpy((uint8_t *)&pCtx->AltPrivate.auW[0], pbBuf, RTSHA512_BLOCK_SIZE);
VBox/Runtime/common/checksum/alt-sha512.cpp:509:        memcpy((uint8_t *)&pCtx->AltPrivate.auW[0], pbBuf, cbBuf);
VBox/Runtime/common/checksum/alt-sha512.cpp:582:    memcpy(pabDigest, &pCtx->AltPrivate.auH[0], RTSHA512_HASH_SIZE);
VBox/Runtime/common/checksum/alt-sha512.cpp:644:    memcpy(pabDigest, &pCtx->AltPrivate.auH[0], RTSHA384_HASH_SIZE);
VBox/Runtime/common/checksum/alt-sha512.cpp:705:    memcpy(pabDigest, &pCtx->AltPrivate.auH[0], RTSHA512T224_HASH_SIZE);
VBox/Runtime/common/checksum/alt-sha512.cpp:766:    memcpy(pabDigest, &pCtx->AltPrivate.auH[0], RTSHA512T256_HASH_SIZE);
VBox/Runtime/common/checksum/manifest.cpp:425:        memcpy(pszName, pszNameStart + 1, cchName);
VBox/Runtime/common/checksum/manifest.cpp:454:        memcpy(pszDigest, pszDigestStart + 1, cchDigest);
VBox/Runtime/common/checksum/manifest.cpp:572:        memcpy(&((char*)pvBuf)[cbPos], pszTmp, cch);
VBox/Runtime/testcase/tstRTUuid.cpp:132:            memcpy(pwsz2, pwsz, 2 * (RTUUID_STR_LENGTH + 2));
VBox/Runtime/testcase/tstRTUuid.cpp:138:                memcpy(pwsz3, pwsz, 2 * (RTUUID_STR_LENGTH + 1 - off));
VBox/Runtime/testcase/tstRTFileAio.cpp:72:            memcpy(papvBuf[i], pvTestBuf, cbTestBuf);
VBox/Runtime/testcase/tstRTFileAio.cpp:74:            memcpy(papvBuf[i], pvTestBuf, cbTestBuf);
VBox/Runtime/testcase/tstNoCrt-1.cpp:181:     * memcpy.
VBox/Runtime/testcase/tstNoCrt-1.cpp:183:    RTPrintf("tstNoCrt-1: memcpy\n");
VBox/Runtime/testcase/tstNoCrt-1.cpp:186:    pv = RT_NOCRT(memcpy)(Buf1.abBuf, Buf2.abBuf, TSTBUF_SIZE); CHECK_PV(Buf1.abBuf);
VBox/Runtime/testcase/tstNoCrt-1.cpp:194:    pv = RT_NOCRT(memcpy)(Buf2.abBuf, Buf1.abBuf, TSTBUF_SIZE); CHECK_PV(Buf2.abBuf);
VBox/Runtime/testcase/tstNoCrt-1.cpp:202:    pv = RT_NOCRT(memcpy)(Buf2.abBuf, Buf1.abBuf, 0); CHECK_PV(Buf2.abBuf);
VBox/Runtime/testcase/tstNoCrt-1.cpp:217:            pv = RT_NOCRT(memcpy)(&Buf2.abBuf[off2], &Buf1.abBuf[off1], cb); CHECK_PV(&Buf2.abBuf[off2]);
VBox/Runtime/testcase/tstLdrObjR0.cpp:60:    memcpy(achBss, szStr1, sizeof(szStr1));
VBox/Runtime/testcase/tstLdrObjR0.cpp:61:    memcpy(achBss, (void *)(uintptr_t)&Entrypoint, 32);
VBox/Runtime/testcase/tstLdrObjR0.cpp:63:    memcpy(achBss, (void *)(uintptr_t)&SomeImportFunction, 32);
VBox/Runtime/testcase/tstLdrObjR0.cpp:81:    return (char *)memcpy(achBss, szStr1, sizeof(szStr1));
VBox/Runtime/testcase/tstLdrObjR0.cpp:88:    return (char *)memcpy(achBss, szStr2, strlen(szStr2));
VBox/Runtime/testcase/tstLdrObj.cpp:63:    memcpy(achBss, szStr1, sizeof(szStr1));
VBox/Runtime/testcase/tstLdrObj.cpp:64:    memcpy(achBss, &g_VM, RT_MIN(sizeof(g_VM), sizeof(achBss)));
VBox/Runtime/testcase/tstLdrObj.cpp:65:    memcpy(achBss, (void *)(uintptr_t)&Entrypoint, 32);
VBox/Runtime/testcase/tstLdrObj.cpp:67:    memcpy(achBss, (void *)(uintptr_t)&SomeImportFunction, 32);
VBox/Runtime/testcase/tstLdrObj.cpp:77:    memcpy(pvBuf, &g_VM, sizeof(g_VM));
VBox/Runtime/testcase/tstLdrObj.cpp:85:    return (char *)memcpy(achBss, szStr1, sizeof(szStr1));
VBox/Runtime/testcase/tstLdrObj.cpp:92:    return (char *)memcpy(achBss, szStr2, strlen(szStr2));
VBox/Runtime/testcase/tstRTTraceLog.cpp:140:            memcpy(&pBuf->abBuf[pBuf->offBuf], pvBuf, cbWrite);
VBox/Runtime/testcase/tstRTTraceLog.cpp:169:        memcpy(pvBuf, &pBuf->abBuf[pBuf->offBuf], cbRead);
VBox/Runtime/testcase/Makefile.kmk:528:	../common/string/memcpy.asm \
VBox/Runtime/testcase/tstRTHeapOffset.cpp:155:    memcpy(s_abMemCopy, s_abMem, sizeof(s_abMem));
VBox/Runtime/testcase/tstRTHeapOffset.cpp:159:    memcpy(&s_aOpsCopy[0], &s_aOps[0], sizeof(s_aOps));
VBox/Runtime/testcase/tstRTLocalIpc.cpp:455:                    memcpy((uint8_t *)pau32ScratchBuf + cbMsg, (uint8_t const *)&iRound + offLast, sizeof(uint32_t) - offLast);
VBox/Runtime/testcase/tstRTHeapSimple.cpp:151:    memcpy(s_abMemCopy, s_abMem, sizeof(s_abMem));
VBox/Runtime/testcase/tstRTHeapSimple.cpp:155:    memcpy(&s_aOpsCopy[0], &s_aOps[0], sizeof(s_aOps));
VBox/Runtime/testcase/tstLdrDisasmTest.cpp:90:    memcpy(&pDis->abInstr[offInstr], &g_ab32BitCode[pDis->uInstrAddr + offInstr], cb);
VBox/Runtime/testcase/tstRTCircBuf.cpp:61:    memcpy(pvBuf, achTestPattern1, 10);
VBox/Runtime/testcase/tstRTCircBuf.cpp:80:    memcpy(pvBuf, &achTestPattern1[8], 2);
VBox/Runtime/testcase/tstRTCircBuf.cpp:106:    memcpy(pvBuf, achTestPattern1, 8);
VBox/Runtime/testcase/tstRTCircBuf.cpp:112:    memcpy(pvBuf, &achTestPattern1[5], 2);
VBox/Runtime/testcase/tstLdr-3.cpp:156:    memcpy(&pDis->abInstr[offInstr], pbSrc, cbMinRead);
VBox/Runtime/testcase/tstUtf8.cpp:815:    memcpy(sz1Copy, sz1, sizeof(sz1));
VBox/Runtime/testcase/tstUtf8.cpp:956:            memcpy(wszInCopy, aTests[i].pcszIn, aTests[i].cwc * 2);
VBox/Runtime/testcase/tstUtf8.cpp:957:            memcpy(wszOutCopy, aTests[i].pcszOut, aTests[i].cwc * 2);
VBox/Runtime/testcase/tstUtf8.cpp:1141:    memcpy(szShort, g_szAll, 255);
VBox/Runtime/testcase/tstRTNtPath-1.cpp:94:                memcpy(&pThis->szShortPath[cchShort], pThis->u.EntryEx.szName, pThis->u.EntryEx.cbName + 1);
VBox/Runtime/testcase/tstRTNtPath-1.cpp:103:            memcpy(&pThis->szLongPath[cchLong], pThis->u.EntryEx.szName, pThis->u.EntryEx.cbName + 1);
VBox/Runtime/testcase/tstRTNtPath-1.cpp:198:        memcpy(This.szShortPath, This.szLongPath, cch + 1);
VBox/Runtime/r3/dir2.cpp:78:            memcpy(&pszBuf[cchDir], pDirEntry->szName, pDirEntry->cbName + 1);
VBox/Runtime/r3/linux/krnlmod-linux.cpp:108:        memcpy(&pThis->achName[0], pszName, cchName);
VBox/Runtime/r3/linux/sysfs.cpp:85:        memcpy(pszBuf, pszPrefix, cchPrefix);
VBox/Runtime/r3/linux/sysfs.cpp:634:                    memcpy(pszBuf, pszName, cchName + 1);
VBox/Runtime/r3/linux/sysfs.cpp:693:                memcpy(pszBuf, szFilename, cchPath + 1);
VBox/Runtime/r3/dir.cpp:592:        pDir->pszFilter = (char *)memcpy(pb, pszFilter, cbFilter);
VBox/Runtime/r3/dir.cpp:621:    pDir->pszPath = (char *)memcpy(pb, szRealPath, cchRealPath + 1);
VBox/Runtime/r3/generic/dirrel-r3-generic.cpp:72:            memcpy(pszPathDst, pThis->pszPath, cchDirPath);
VBox/Runtime/r3/generic/dirrel-r3-generic.cpp:73:            memcpy(&pszPathDst[cchDirPath], pszRelPath, cchRelPath);
VBox/Runtime/r3/poll.cpp:283:            memcpy(pafdSelect, pThis->pafdSelect, sizeof(pThis->pafdSelect[0]) * (cSockets + 1));
VBox/Runtime/r3/poll.cpp:305:                memcpy(pafdSelect, pThis->pafdSelect, sizeof(pThis->pafdSelect[0]) * (cSockets + 1));
VBox/Runtime/r3/solaris/coredumper-solaris.cpp:706:                                memcpy(&pCur->pMap, pMap, sizeof(pCur->pMap));
VBox/Runtime/r3/solaris/coredumper-solaris.cpp:889:                                    memcpy(&pStatus->pr_reg, &pSolProc->pCurThreadCtx->uc_mcontext.gregs, sizeof(pStatus->pr_reg));
VBox/Runtime/r3/solaris/coredumper-solaris.cpp:890:                                    memcpy(&pStatus->pr_fpreg, &pSolProc->pCurThreadCtx->uc_mcontext.fpregs, sizeof(pStatus->pr_fpreg));
VBox/Runtime/r3/solaris/coredumper-solaris.cpp:893:                                    memcpy(&pStatus->pr_lwphold, &pSolProc->pCurThreadCtx->uc_sigmask, sizeof(pStatus->pr_lwphold));
VBox/Runtime/r3/solaris/coredumper-solaris.cpp:1049:        memcpy(&pInfo->pr_psargs, &pSrc->pr_psargs, sizeof(pInfo->pr_psargs));
VBox/Runtime/r3/solaris/coredumper-solaris.cpp:1156:    memcpy(pDst->pr_reg, pStatus->pr_reg, sizeof(pDst->pr_reg));
VBox/Runtime/r3/solaris/coredumper-solaris.cpp:1157:    memcpy(pDst->pr_sysarg, pStatus->pr_sysarg, sizeof(pDst->pr_sysarg));
VBox/Runtime/r3/solaris/coredumper-solaris.cpp:1677:            memcpy(achBuf, &pMapInfo->fError, sizeof(pMapInfo->fError));
VBox/Runtime/r3/solaris/krnlmod-solaris.cpp:96:        memcpy(&pThis->achName[0], &pModInfo->mi_name[0], cchName);
VBox/Runtime/r3/memsafer-r3.cpp:498:        memcpy(pvNew, pvOld, RT_MIN(cbNew, cbOld));
VBox/Runtime/r3/alloc-ef.cpp:496:        memcpy(pb, (void *)(uintptr_t)pfnOrg, cbCopy);
VBox/Runtime/r3/alloc-ef.cpp:807:            memcpy(pvRet, pvOld, RT_MIN(cbNew, pBlock->cbUnaligned));
VBox/Runtime/r3/alloc-ef.cpp:897:        memcpy(pvDst, pvSrc, cb);
VBox/Runtime/r3/alloc-ef.cpp:907:        memcpy(pvDst, pvSrc, cbSrc);
VBox/Runtime/r3/alloc-ef.cpp:994:        memcpy(pvDst, pvSrc, cb);
VBox/Runtime/r3/alloc-ef.cpp:1004:        memcpy(pvDst, pvSrc, cbSrc);
VBox/Runtime/r3/init.cpp:236:        memcpy(g_szrtProcExePath, pszProgramPath, cch + 1);
VBox/Runtime/r3/socket.cpp:814:        memcpy(pszResult, szIpAddress, cchIpAddress + 1);
VBox/Runtime/r3/isofs.cpp:90:        memcpy((RTISOFSPATHTABLEHEADER*)&pNode->header,
VBox/Runtime/r3/isofs.cpp:258:                    memcpy((PRTISOFSPRIVOLDESC)&pFile->pvd,
VBox/Runtime/r3/isofs.cpp:344:                memcpy(pszName, &abBuffer[idx + sizeof(RTISOFSDIRRECORD)], pCurRecord->name_len);
VBox/Runtime/r3/isofs.cpp:381:                                memcpy(pRec, pCurRecord, sizeof(RTISOFSDIRRECORD));
VBox/Runtime/r3/path.cpp:74:        memcpy(pszPath, g_szrtProcExePath, cch);
VBox/Runtime/r3/path.cpp:175:    memcpy(pszPath, "/tmp", sizeof("/tmp"));
VBox/Runtime/r3/win/RTSystemQueryOSInfo-win.cpp:302:        memcpy(pszInfo, szTmp, cchTmp + 1);
VBox/Runtime/r3/win/RTSystemQueryOSInfo-win.cpp:305:    memcpy(pszInfo, szTmp, cchInfo - 1);
VBox/Runtime/r3/win/localipc-win.cpp:380:        memcpy(pwszFullName, s_wszPrefix, sizeof(s_wszPrefix));
VBox/Runtime/r3/win/uuid-win.cpp:149:        memcpy(pszString, pszTmpStr, cchTmpStr + 1);
VBox/Runtime/r3/win/pipe-win.cpp:790:                    memcpy(pThis->pbBounceBuf, pvBuf, cbToWrite);
VBox/Runtime/r3/win/krnlmod-win.cpp:132:        memcpy(&pThis->achFilePath[0], &pModInfo->FullPathName[0], cchFilePath);
VBox/Runtime/r3/win/env-win.cpp:152:    memcpy(pszTmp, pszVar, cchVar);
VBox/Runtime/r3/win/env-win.cpp:155:        memcpy(pszTmp + cchVar + 1, pszValue, cchValue + 1);
VBox/Runtime/r3/win/env-win.cpp:229:    memcpy(pszBuf, pszVar, cchVar);
VBox/Runtime/r3/win/direnum-win.cpp:78:    memcpy(pszPathBuf + pDir->cchPath, pszExpr, cbExpr);
VBox/Runtime/r3/win/direnum-win.cpp:220:    memcpy(pDirEntry->szName, pszName, cchName + 1);
VBox/Runtime/r3/win/direnum-win.cpp:311:    memcpy(pDirEntry->szName, pszName, cchName + 1);
VBox/Runtime/r3/win/VBoxRT-msvcr100-win32.def:1506:  memcpy
VBox/Runtime/r3/posix/env-posix.cpp:103:    memcpy(pszTmp, pszVar, cchVar);
VBox/Runtime/r3/posix/env-posix.cpp:106:        memcpy(pszTmp + cchVar + 1, pszValue, cchValue + 1);
VBox/Runtime/r3/posix/env-posix.cpp:147:    memcpy(pszBuf, pszVar, cchVar);
VBox/Runtime/r3/posix/RTSystemQueryOSInfo-posix.cpp:73:                memcpy(pszInfo, pszSrc, cch + 1);
VBox/Runtime/r3/posix/RTSystemQueryOSInfo-posix.cpp:76:            memcpy(pszInfo, pszSrc, cchInfo - 1);
VBox/Runtime/r3/posix/localipc-posix.cpp:188:                memcpy(pAddr->sun_path, RTLOCALIPC_POSIX_NAME_PREFIX, sizeof(RTLOCALIPC_POSIX_NAME_PREFIX) - 1);
VBox/Runtime/r3/posix/localipc-posix.cpp:189:                memcpy(&pAddr->sun_path[sizeof(RTLOCALIPC_POSIX_NAME_PREFIX) - 1], pszNativeName, cchNativeName + 1);
VBox/Runtime/r3/posix/localipc-posix.cpp:192:                memcpy(pAddr->sun_path, pszNativeName, cchNativeName + 1);
VBox/Runtime/r3/posix/fileio2-posix.cpp:149:        memcpy(&aTimespecs[0], pAccessTime, sizeof(struct timespec));
VBox/Runtime/r3/posix/fileio2-posix.cpp:150:        memcpy(&aTimespecs[1], pModificationTime, sizeof(struct timespec));
VBox/Runtime/r3/posix/fileio2-posix.cpp:158:        memcpy(&aTimespecs[0], pAccessTime ? pAccessTime : &ObjInfo.AccessTime, sizeof(struct timespec));
VBox/Runtime/r3/posix/fileio2-posix.cpp:159:        memcpy(&aTimespecs[1], pModificationTime ? pModificationTime : &ObjInfo.ModificationTime, sizeof(struct timespec));
VBox/Runtime/r3/posix/dir-posix.cpp:429:            memcpy(pDirEntry->szName, pszName, cchName + 1);
VBox/Runtime/r3/posix/dir-posix.cpp:529:            memcpy(pDirEntry->szName, pszName, cchName + 1);
VBox/Runtime/r3/posix/dir-posix.cpp:536:                memcpy(pszNamePath, pDir->pszPath, pDir->cchPath);
VBox/Runtime/r3/posix/dir-posix.cpp:537:                memcpy(pszNamePath + pDir->cchPath, pszName, cchName + 1);
VBox/Runtime/r3/posix/process-posix.cpp:205:                        memcpy(pszUser, pszTmp, cbTmp);
VBox/Runtime/r3/posix/pathhost-posix.cpp:167:            memcpy(g_szFsCodeset, pszCodeset, cchCodeset + 1);
VBox/Runtime/r3/posix/pathhost-posix.cpp:224:                    memcpy(pszPath, pszNativePath, cchNativePath + 1);
VBox/Runtime/r3/posix/ldrNative-posix.cpp:64:        memcpy(psz, pszFilename, cch);
VBox/Runtime/r3/posix/ldrNative-posix.cpp:65:        memcpy(psz + cch, s_szSuff, sizeof(s_szSuff));
VBox/Runtime/r3/posix/ldrNative-posix.cpp:99:    memcpy(psz + 1, pszSymbol, cch + 1);
VBox/Runtime/r3/process.cpp:105:        memcpy(pszExecPath, g_szrtProcExePath, cch);
VBox/Runtime/r3/xml.cpp:378:    memcpy(aBuf, m->buf + m->pos, len);
VBox/Runtime/r3/nt/direnum-r3-nt.cpp:600:    memcpy(pDirEntry->szName, pszName, cchName + 1);
VBox/Runtime/r3/nt/direnum-r3-nt.cpp:707:    memcpy(pDirEntry->szName, pszName, cchName + 1);
VBox/Runtime/r3/nt/direnum-r3-nt.cpp:717:            memcpy(pDirEntry->wszShortName, pBoth->ShortName, cbShort);
VBox/Runtime/r3/nt/dirrel-r3-nt.cpp:82:            memcpy(pszPathDst, pThis->pszPath, cchDirPath);
VBox/Runtime/r3/nt/dirrel-r3-nt.cpp:83:            memcpy(&pszPathDst[cchDirPath], pszRelPath, cchRelPath);
VBox/Runtime/r3/nt/pathint-nt.cpp:110:            memcpy(pwszNtPath + 4, pwszWinPath + 4, (cwcWinPath - 4) * sizeof(RTUTF16));
VBox/Runtime/r3/nt/pathint-nt.cpp:230:    memcpy(szPath, pszPrefix, cchPrefix);
VBox/Runtime/r3/nt/pathint-nt.cpp:305:                    memcpy(pwszNtPath, pwszWinPath, cwcWinPath * sizeof(RTUTF16));
VBox/Runtime/r3/nt/pathint-nt.cpp:355:        memcpy(szAbsPath, pszPrefix, cchPrefix);
VBox/Runtime/r3/nt/pathint-nt.cpp:457:                memcpy(pNtName->Buffer, pUniStrBuf->Buffer, pUniStrBuf->Length);
VBox/Runtime/r3/nt/pathint-nt.cpp:497:            memcpy(&RootDir.Buffer[cwcRoot], pNtName->Buffer, cwcAppend * sizeof(RTUTF16));
VBox/Runtime/r3/nt/pathint-nt.cpp:896:            memcpy(NtTmp.Buffer, pNtName->Buffer, pNtName->Length);
VBox/Runtime/nt/RTNtPathExpand8dot3Path.cpp:154:                    memcpy(pwszFix, &puBuf->Info.FileName[offName], cwcNameNew * sizeof(WCHAR));
VBox/Runtime/nt/RTNtPathExpand8dot3Path.cpp:164:                    memcpy(pwszFix, &puBuf->Info.FileName[offName], cwcNameNew * sizeof(WCHAR));
VBox/ExtPacks/VNC/VBoxVNC.cpp:236:                memcpy(pszValue, u.Feat.achInfo, cbRet);
VBox/ExtPacks/VBoxDTrace/onnv/lib/libdtrace/common/dt_lex.l:85:				memcpy(buf, yypcb->pcb_strptr, result); \
VBox/ExtPacks/VBoxDTrace/VBoxDTraceR0.cpp:1630:                memcpy(pArgDesc->dtargd_native, pszType, cchType + 1);
VBox/ExtPacks/VBoxDTrace/generated/dt_lex.c:933:				memcpy(buf, yypcb->pcb_strptr, result); \
VBox/ExtPacks/VBoxDTrace/include/VBoxDTraceTypes.h:432:        memcpy(a_pszRes, a_pszSrc, cb); \
VBox/Devices/VMMDev/VMMDev.cpp:2806:                memcpy(pRequestHeader, &requestHeader, sizeof(VMMDevRequestHeader));
VBox/Devices/VMMDev/VMMDev.cpp:3368:        memcpy(pThis->pCredentials->Logon.szUserName, pszUsername, cchUsername);
VBox/Devices/VMMDev/VMMDev.cpp:3370:        memcpy(pThis->pCredentials->Logon.szPassword, pszPassword, cchPassword);
VBox/Devices/VMMDev/VMMDev.cpp:3372:        memcpy(pThis->pCredentials->Logon.szDomain,   pszDomain, cchDomain);
VBox/Devices/VMMDev/VMMDev.cpp:3382:        memcpy(pThis->pCredentials->Judge.szUserName, pszUsername, cchUsername);
VBox/Devices/VMMDev/VMMDev.cpp:3384:        memcpy(pThis->pCredentials->Judge.szPassword, pszPassword, cchPassword);
VBox/Devices/VMMDev/VMMDev.cpp:3386:        memcpy(pThis->pCredentials->Judge.szDomain,   pszDomain,   cchDomain);
VBox/Devices/VMMDev/VMMDevTesting.cpp:87:                    default: memcpy(&pThis->TestingData.abReadBack[off], pv, cb); break;
VBox/Devices/VMMDev/VMMDevTesting.cpp:184:                    default: memcpy(pv, &pThis->TestingData.abReadBack[off], cb); break;
VBox/Devices/VMMDev/VMMDevTesting.cpp:230:            memcpy(pv, &s_abNopValue[GCPhysAddr & 7], RT_MIN(8 - (GCPhysAddr & 7), cb));
VBox/Devices/VMMDev/VMMDevHGCM.cpp:1016:                memcpy((uint8_t *)pHGCMCall + pVal->offValue, pvSrc, pVal->cbValue);
VBox/Devices/VMMDev/VMMDevHGCM.cpp:1722:            memcpy(pGuestParm->u.ptr.paPages, pLoadedParm->u.ptr.paPages, pGuestParm->u.ptr.cPages * sizeof(RTGCPHYS));
VBox/Devices/BiosCommonCode/MakeAlternativeSource.cpp:942:    memcpy(&pDis->abInstr[offInstr], &g_pbImg[offBios], cbToRead);
VBox/Devices/BiosCommonCode/MakeAlternativeSource.cpp:1449:    memcpy(pszBuf, pszStart, cchWord);
VBox/Devices/BiosCommonCode/MakeAlternativeSource.cpp:1826:            memcpy(psz, &pMap->szLine[offObj], cchObj);
VBox/Devices/BiosCommonCode/MakeAlternativeSource.cpp:1830:            memcpy(psz, &pMap->szLine[offSrc], cchSrc);
VBox/Devices/BiosCommonCode/fmemcpy.asm:32:; memcpy taking far pointers.
VBox/Devices/USB/VUSBDevice.cpp:648:            memcpy(pbBuf, pvSrc, cbCopy); \
VBox/Devices/USB/VUSBDevice.cpp:720:    memcpy(&CfgDesc, pCfgDesc, VUSB_DT_CONFIG_MIN_LEN);
VBox/Devices/USB/VUSBDevice.cpp:770:                memcpy(&EndPtDesc, &pIfDesc->paEndpoints[k], VUSB_DT_ENDPOINT_MIN_LEN);
VBox/Devices/USB/VUSBUrb.cpp:968:                memcpy(pUrb->abData, pExtra->pbCur, cbRead);
VBox/Devices/USB/VUSBUrb.cpp:986:                memcpy(pExtra->pbCur, pUrb->abData, pUrb->cbData);
VBox/Devices/USB/USBProxyDevice.cpp:399:            memcpy(cur_if, ifd, sizeof(cur_if->Core));
VBox/Devices/USB/USBProxyDevice.cpp:430:            memcpy(cur_ep, epd, sizeof(cur_ep->Core));
VBox/Devices/USB/usbip/USBProxyDevice-usbip.cpp:877:    memcpy(&ReqSubmit.Setup, pSetup, sizeof(ReqSubmit.Setup));
VBox/Devices/USB/usbip/USBProxyDevice-usbip.cpp:1183:            memcpy(&ReqSubmit.Setup, &pUrb->abData, sizeof(ReqSubmit.Setup));
VBox/Devices/USB/VUSBSnifferPcapNg.cpp:334:        memcpy(pv, pvData, cbData);
VBox/Devices/USB/VUSBSnifferPcapNg.cpp:415:        memcpy(pThis->pBlockHdr, pBlockHdr, cbData);
VBox/Devices/USB/testcase/tstTrekStorGo.c:262:        memcpy(abBuf, "USBC", 4);
VBox/Devices/USB/testcase/tstPalmOne.c:265:        memcpy(abBuf, "USBC", 4);
VBox/Devices/USB/DevOHCI.cpp:1419:        memcpy(pvBuf, &pPageCache->au8PhysReadCache[GCPhys & PAGE_OFFSET_MASK], cbBuf);
VBox/Devices/USB/DevOHCI.cpp:1451:        memcpy(&pPageCache->au8PhysReadCache[offPage], pvBuf, RT_MIN(PAGE_SIZE - offPage, cbBuf));
VBox/Devices/USB/DevOHCI.cpp:3006:    memcpy(pUrb->paTds[0].TdCopy, &Td, sizeof(Td));
VBox/Devices/USB/DevOHCI.cpp:3186:        memcpy(pUrb->paTds[iTd].TdCopy, &pCur->Td, sizeof(pCur->Td));
VBox/Devices/USB/DevOHCI.cpp:3378:    memcpy(pUrb->paTds[0].TdCopy, pITd, sizeof(*pITd));
VBox/Devices/USB/os2/USBProxyDevice-os2.cpp:324:                    pbData = (uint8_t *)memcpy(pvLow, pbData, cbData);
VBox/Devices/USB/os2/USBProxyDevice-os2.cpp:371:                memcpy(pUrb->abData, pbData, pUrb->cbData);
VBox/Devices/USB/darwin/USBProxyDevice-darwin.cpp:606:                memcpy(pUrb->abData, pUrbOsX->u.Isoc.pBuf->pvBuf, pUrb->cbData);
VBox/Devices/USB/darwin/USBProxyDevice-darwin.cpp:1697:                memcpy(pUrbOsX->u.Isoc.pBuf->pvBuf, pUrb->abData, pUrb->cbData);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:1657:                memcpy(pDest, pSrc, cBlocksX * pSurfaceSrc->cbBlock);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:1937:                    memcpy(pRowDst, pRowSrc, pMipLevel->cbSurfacePitch);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:1980:                    memcpy(pDest, pSrc, pMipLevel->cbSurfacePitch);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:2024:                memcpy(pDest, pSrc, pSurface->pMipmapLevels[i].cbSurfacePitch);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:2349:        memcpy(pu8Dst, pu8Src, cbWidth);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:2923:                        memcpy(&pMipLevelSize[idx], &pSurface->pMipmapLevels[idx].mipmapSize, sizeof(SVGA3dSize));
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:2926:                memcpy(face, pSurface->faces, sizeof(pSurface->faces));
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:3109:                                memcpy((uint8_t *)pMipmapLevel->pSurfaceData + j * pMipmapLevel->cbSurfacePitch, (uint8_t *)LockedRect.pBits + j * LockedRect.Pitch, pMipmapLevel->cbSurfacePitch);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:3355:    memcpy(pContext->state.aTransformState[type].matrix, matrix, sizeof(pContext->state.aTransformState[type].matrix));
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:4271:                            memcpy(pDest, pSrc, pRenderTarget->pMipmapLevels[i].cbSurfacePitch);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:5021:    memcpy(pContext->state.aClipPlane[index].plane, plane, sizeof(pContext->state.aClipPlane[index].plane));
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:5197:                memcpy(pData, pVertexSurface->pMipmapLevels[0].pSurfaceData, pVertexSurface->pMipmapLevels[0].cbSurface);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:5315:    memcpy(&pVertexElement[numVertexDecls], &VertexEnd, sizeof(VertexEnd));
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:5405:                    memcpy(pData, pIndexSurface->pMipmapLevels[0].pSurfaceData, pIndexSurface->pMipmapLevels[0].cbSurface);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:5596:        memcpy(pvData, pVertexSurface->pMipmapLevels[0].pSurfaceData, pVertexSurface->pMipmapLevels[0].cbSurface);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:5652:        memcpy(pvData, pIndexSurface->pMipmapLevels[0].pSurfaceData, pIndexSurface->pMipmapLevels[0].cbSurface);
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:5812:    memcpy(&aVertexElements[numVertexDecls], &sVertexEnd, sizeof(sVertexEnd));
VBox/Devices/Graphics/DevVGA-SVGA3d-win.cpp:6096:    memcpy(pShader->pShaderProgram, pShaderData, cbData);
VBox/Devices/Graphics/DevVGATmpl.h:79:            memcpy(d + linesize, d, 4 * sizeof(uint32_t));
VBox/Devices/Graphics/DevVGATmpl.h:90:            memcpy(d + linesize, d, 8 * sizeof(uint32_t));
VBox/Devices/Graphics/DevVGATmpl.h:387:    memcpy(d, s, width * 2);
VBox/Devices/Graphics/DevVGATmpl.h:413:    memcpy(d, s, width * 2);
VBox/Devices/Graphics/DevVGATmpl.h:466:    memcpy(d, s, width * 4);
VBox/Devices/Graphics/DevVGA_VBVA.cpp:2375:        memcpy(pbHint, &pCtx->aModeHints[iHint], RT_MIN(cbHintStructureGuest, sizeof(VBVAMODEHINT)));
VBox/Devices/Graphics/DevVGA.cpp:791:            memcpy(&pThis->palette[pThis->dac_write_index * 3], pThis->dac_cache, 3);
VBox/Devices/Graphics/DevVGA.cpp:7090:                memcpy(pLogoHdr + 1, g_abVgaDefBiosLogoNY, LogoHdr.cbLogo);
VBox/Devices/Graphics/DevVGA.cpp:7095:                memcpy(pLogoHdr + 1, g_abVgaDefBiosLogo, LogoHdr.cbLogo);
VBox/Devices/Graphics/DevVGA_VDMA.cpp:2045:        memcpy(pbVram, pvPage, PAGE_SIZE);
VBox/Devices/Graphics/DevVGA_VDMA.cpp:2054:        memcpy(pvPage, pbVram, PAGE_SIZE);
VBox/Devices/Graphics/DevVGA_VDMA.cpp:2267:                    memcpy(pbCmdBuf, pRealCmdHdr, cbCmdPart);
VBox/Devices/Graphics/DevVGA_VDMA.cpp:2447:            memcpy(pbDstSurf + offBoth, pbSrcSurf + offBoth, cbToCopy);
VBox/Devices/Graphics/DevVGA_VDMA.cpp:2481:                memcpy(pbDstStart, pbSrcStart, cbDstLine);
VBox/Devices/Graphics/DevVGA_VDMA.cpp:2692:            memcpy(pvDst, pvSrc, cbSubTransfer);
VBox/Devices/Graphics/shaderlib/directx.c:2101:        memcpy(current_ext, start, len);
VBox/Devices/Graphics/shaderlib/directx.c:2647:                memcpy(ThisExtn, Start, len);
VBox/Devices/Graphics/shaderlib/shader_sm4.c:350:                memcpy(src_param->reg.immconst_data, *ptr, 1 * sizeof(DWORD));
VBox/Devices/Graphics/shaderlib/shader_sm4.c:356:                memcpy(src_param->reg.immconst_data, *ptr, 4 * sizeof(DWORD));
VBox/Devices/Graphics/shaderlib/wine/vbox/libWineStub/include/wine/port.h:347:    return memcpy( dst, src, size );
VBox/Devices/Graphics/shaderlib/wine/vbox/libWineStub/debug.c:486:    if (old_funcs) memcpy( old_funcs, &funcs, min(sizeof(funcs),size) );
VBox/Devices/Graphics/shaderlib/wine/vbox/libWineStub/debug.c:487:    if (new_funcs) memcpy( &funcs, new_funcs, min(sizeof(funcs),size) );
VBox/Devices/Graphics/shaderlib/wine/include/d3dx9math.inl:367:    memcpy(&_11, pf, sizeof(D3DXMATRIX));
VBox/Devices/Graphics/shaderlib/wine/include/d3dx9math.inl:372:    memcpy(&_11, &mat, sizeof(D3DXMATRIX));
VBox/Devices/Graphics/shaderlib/wine/include/msvcrt/memory.h:22:void*   __cdecl memcpy(void*,const void*,size_t);
VBox/Devices/Graphics/shaderlib/wine/include/msvcrt/string.h:34:void*   __cdecl memcpy(void*,const void*,size_t);
VBox/Devices/Graphics/shaderlib/wine/include/wine/port.h:351:    return memcpy( dst, src, size );
VBox/Devices/Graphics/shaderlib/wine/include/winternl.h:2611:#define RtlStoreUlong(p,v)  do { ULONG _v = (v); memcpy((p), &_v, sizeof(_v)); } while (0)
VBox/Devices/Graphics/shaderlib/wine/include/winternl.h:2612:#define RtlStoreUlonglong(p,v) do { ULONGLONG _v = (v); memcpy((p), &_v, sizeof(_v)); } while (0)
VBox/Devices/Graphics/shaderlib/wine/include/winternl.h:2613:#define RtlRetrieveUlong(p,s) memcpy((p), (s), sizeof(ULONG))
VBox/Devices/Graphics/shaderlib/wine/include/winternl.h:2614:#define RtlRetrieveUlonglong(p,s) memcpy((p), (s), sizeof(ULONGLONG))
VBox/Devices/Graphics/shaderlib/wine/include/winnt.h:5125:#define RtlCopyMemory(Destination, Source, Length) memcpy((Destination),(Source),(Length))
VBox/Devices/Graphics/shaderlib/wine/include/windowsx.h:1409:#define _fmemcpy    memcpy
VBox/Devices/Graphics/shaderlib/libWineStub/include/wine/port.h:349:    return memcpy( dst, src, size );
VBox/Devices/Graphics/shaderlib/libWineStub/debug.c:511:    if (old_funcs) memcpy( old_funcs, &funcs, min(sizeof(funcs),size) );
VBox/Devices/Graphics/shaderlib/libWineStub/debug.c:512:    if (new_funcs) memcpy( &funcs, new_funcs, min(sizeof(funcs),size) );
VBox/Devices/Graphics/shaderlib/shader.c:541:            memcpy(lconst->value, ptr, 4 * sizeof(DWORD));
VBox/Devices/Graphics/shaderlib/shader.c:571:            memcpy(lconst->value, ptr, 4 * sizeof(DWORD));
VBox/Devices/Graphics/shaderlib/shader.c:588:            memcpy(lconst->value, ptr, sizeof(DWORD));
VBox/Devices/Graphics/shaderlib/shader.c:1496:    memcpy(data, shader->baseShader.function, shader->baseShader.functionLength);
VBox/Devices/Graphics/shaderlib/shader.c:1541:    memcpy(shader->baseShader.function, byte_code, shader->baseShader.functionLength);
VBox/Devices/Graphics/shaderlib/shader.c:1642:        memcpy(lconst->value, src_data + (i - start_idx) * 4 /* 4 components */, 4 * sizeof(float));
VBox/Devices/Graphics/shaderlib/shaderapi.c:475:    memcpy(&This->updateStateBlock->vertexShaderConstantB[start], srcData, cnt * sizeof(BOOL));
VBox/Devices/Graphics/shaderlib/shaderapi.c:504:    memcpy(&This->updateStateBlock->vertexShaderConstantI[start * 4], srcData, cnt * sizeof(int32_t) * 4);
VBox/Devices/Graphics/shaderlib/shaderapi.c:529:    memcpy(&This->updateStateBlock->vertexShaderConstantF[start * 4], srcData, count * sizeof(float) * 4);
VBox/Devices/Graphics/shaderlib/shaderapi.c:557:    memcpy(&This->updateStateBlock->pixelShaderConstantB[start], srcData, cnt * sizeof(BOOL));
VBox/Devices/Graphics/shaderlib/shaderapi.c:586:    memcpy(&This->updateStateBlock->pixelShaderConstantI[start * 4], srcData, cnt * sizeof(int32_t) * 4);
VBox/Devices/Graphics/shaderlib/shaderapi.c:612:    memcpy(&This->updateStateBlock->pixelShaderConstantF[start * 4], srcData, count * sizeof(float) * 4);
VBox/Devices/Graphics/shaderlib/wined3d_private.h:886:    memcpy(gl_mat, (mat), 16 * sizeof(float));                                              \
VBox/Devices/Graphics/DevVGA-SVGA3d-savedstate.cpp:821:                                memcpy(pu8Dst, pu8Src, pMipmapLevel->cbSurfacePitch);
VBox/Devices/Graphics/DevVGA-SVGA3d-savedstate.cpp:854:                            memcpy(pData, pD3DData, pMipmapLevel->cbSurface);
VBox/Devices/Graphics/DevVGA-SVGA3d-info.cpp:330:                             * Lock the buffer and make it accessible to memcpy.
VBox/Devices/Graphics/DevVGA-SVGA3d-info.cpp:395:                                memcpy(pbDst, LockedRect.pBits, pMipmapLevel->cbSurface);
VBox/Devices/Graphics/DevVGA-SVGA3d-info.cpp:398:                                    memcpy(pbDst + j * pMipmapLevel->cbSurfacePitch,
VBox/Devices/Graphics/DevVGA-SVGA3d-info.cpp:434:                            memcpy(pbDst, pvD3DData, pMipmapLevel->cbSurface);
VBox/Devices/Graphics/DevVGA-SVGA3d-info.cpp:494:                                memcpy(pbDst, pvSrc, pMipmapLevel->cbSurface);
VBox/Devices/Graphics/testcase/dump-vmwgfx.c:459:        memcpy(szPath, g_szDir, sizeof(g_szDir));
VBox/Devices/Graphics/testcase/dump-vmwgfx.c:466:            memcpy(&szPath[offPath], pEntry->d_name, cchName);
VBox/Devices/Graphics/DevVGA-SVGA3d-ogl.cpp:549:        memcpy(pszBuf, pszCur, cch);
VBox/Devices/Graphics/DevVGA-SVGA3d-ogl.cpp:554:        memcpy(pszBuf, "<overflow>", RT_MIN(sizeof("<overflow>"), cbBuf));
VBox/Devices/Graphics/DevVGA-SVGA3d-ogl.cpp:3700:    memcpy(pContext->state.aTransformState[type].matrix, matrix, sizeof(pContext->state.aTransformState[type].matrix));
VBox/Devices/Graphics/DevVGA-SVGA3d-ogl.cpp:5665:    memcpy(pContext->state.aClipPlane[index].plane, plane, sizeof(pContext->state.aClipPlane[index].plane));
VBox/Devices/Graphics/DevVGA-SVGA3d-ogl.cpp:6541:    memcpy(pShader->pShaderProgram, pShaderData, cbData);
VBox/Devices/Graphics/DevVGA-SVGA.cpp:1376:            memcpy(pThis->svga.pbVgaFrameBufferR3, pThis->vram_ptrR3, VMSVGA_VGA_FB_BACKUP_SIZE);
VBox/Devices/Graphics/DevVGA-SVGA.cpp:1412:            memcpy(pThis->vram_ptrR3, pThis->svga.pbVgaFrameBufferR3, VMSVGA_VGA_FB_BACKUP_SIZE);
VBox/Devices/Graphics/DevVGA-SVGA.cpp:2492:                memcpy(pbDst, pbSrc, cbSrcAndLine * cy);
VBox/Devices/Graphics/DevVGA-SVGA.cpp:2498:                    memcpy(pbDst, pbSrc, cbDstAndLine);
VBox/Devices/Graphics/DevVGA-SVGA.cpp:3046:        memcpy(pbBounceBuf + cbAlreadyRead,
VBox/Devices/Graphics/DevVGA-SVGA.cpp:3054:            memcpy(pbBounceBuf + cbAlreadyRead,
VBox/Devices/Graphics/DevVGA-SVGA.cpp:3059:        memcpy(pbBounceBuf + cbAlreadyRead,
VBox/Devices/Graphics/DevVGA-SVGA.cpp:3395:                /** @todo Would be more efficient to copy the data straight into pCursorCopy (memcpy below). */
VBox/Devices/Graphics/DevVGA-SVGA.cpp:3408:                memcpy(pCursorCopy + cbAndMask, (pCursor + 1), pCursor->width * pCursor->height * sizeof(uint32_t));
VBox/Devices/Graphics/DevVGA-SVGA.cpp:4412:            memcpy(pbDst, pSrc, cbWidth * cHeight);
VBox/Devices/Graphics/DevVGA-SVGA.cpp:4418:                memcpy(pbDst, pSrc, cbWidth);
VBox/Devices/Graphics/DevVGA-SVGA3d.cpp:213:    memcpy(pSurface->faces, face, sizeof(pSurface->faces));
VBox/Devices/PC/DevPcBios.cpp:1554:            memcpy(pThis->pu8PcBios, pbBios, cbBios);
VBox/Devices/PC/ipxe/src/interface/efi/efi_umalloc.c:75:	 * is valid, or (b) new_size is 0; either way, the memcpy() is
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:137:	memcpy ( &mode->CurrentAddress, netdev->ll_addr, ll_addr_len );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:138:	memcpy ( &mode->BroadcastAddress, netdev->ll_broadcast, ll_addr_len );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:333:	memcpy ( snpdev->netdev->ll_addr, new, ll_protocol->ll_addr_len );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:376:		memcpy ( stats, &stats_buf, *stats_len );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:600:	memcpy ( iob_put ( iobuf, len ), data, len );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:681:	memcpy ( data, iobuf->data, iob_len ( iobuf ) );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:698:		memcpy ( ll_src, iob_ll_src, ll_protocol->ll_addr_len );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:700:		memcpy ( ll_dest, iob_ll_dest, ll_protocol->ll_addr_len );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:964:		memcpy ( strings->Language, language, sizeof ( language ) );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:1001:	memcpy ( &package_list->header.PackageListGuid,
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:1005:	memcpy ( &package_list->formset, &efi_snp_formset,
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:1160:	memcpy ( &snpdev->snp, &efi_snp_device_snp, sizeof ( snpdev->snp ) );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:1182:	memcpy ( &snpdev->hii, &efi_snp_device_hii, sizeof ( snpdev->hii ) );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:1190:	memcpy ( &snpdev->path, efipci->path, path_prefix_len );
VBox/Devices/PC/ipxe/src/interface/efi/efi_snp.c:1197:	memcpy ( &macpath->MacAddress, netdev->ll_addr,
VBox/Devices/PC/ipxe/src/interface/smbios/smbios_settings.c:129:			memcpy ( data, &buf[tag_offset], len );
VBox/Devices/PC/ipxe/src/interface/bofm/bofm.c:193:		memcpy ( en->mac_a, mac, sizeof ( en->mac_a ) );
VBox/Devices/PC/ipxe/src/interface/bofm/bofm.c:213:		memcpy ( mac, en->mac_a, sizeof ( mac ) );
VBox/Devices/PC/ipxe/src/hci/editstring.c:75:	memcpy ( ( string->buf + string->cursor ), insert_text, insert_len );
VBox/Devices/PC/ipxe/src/hci/mucurses/widgets/editbox.c:94:		memcpy ( buf, ( box->string.buf + first ), len );
VBox/Devices/PC/ipxe/src/hci/tui/settings_ui.c:180:	memcpy ( dest, src, len );
VBox/Devices/PC/ipxe/src/hci/tui/menu_ui.c:120:		memcpy ( ( buf + MENU_PAD ), item->text, len );
VBox/Devices/PC/ipxe/src/hci/tui/menu_ui.c:128:			memcpy ( ( buf + MENU_COLS - MENU_PAD - timeout_len ),
VBox/Devices/PC/ipxe/src/libgcc/memcpy.c:3: * gcc sometimes likes to insert implicit calls to memcpy().
VBox/Devices/PC/ipxe/src/libgcc/memcpy.c:5: * doing this, or to force it to use the optimised memcpy() as seen by
VBox/Devices/PC/ipxe/src/libgcc/memcpy.c:6: * C code; it insists on inserting a symbol reference to "memcpy".  We
VBox/Devices/PC/ipxe/src/libgcc/memcpy.c:14:			     size_t len ) asm ( "memcpy" );
VBox/Devices/PC/ipxe/src/libgcc/memcpy.c:17:	return memcpy ( dest, src, len );
VBox/Devices/PC/ipxe/src/util/nrv2b.c:342:	memcpy(s->b,dict,dict_len);
VBox/Devices/PC/ipxe/src/util/nrv2b.c:417:		memcpy(&s->b[s->ip],s->c->ip,s->look);
VBox/Devices/PC/ipxe/src/util/elf2efi.c:188:		memcpy ( relocs, pe_rel->relocs,
VBox/Devices/PC/ipxe/src/util/elf2efi.c:221:			memcpy ( ( buffer + total_size + 8 ), pe_rel->relocs,
VBox/Devices/PC/ipxe/src/util/elf2efi.c:681:	memcpy ( pe_name_tmp, pe_name, sizeof ( pe_name_tmp ) );
VBox/Devices/PC/ipxe/src/util/elf2efi.c:688:	memcpy ( &pe_header, &efi_pe_header, sizeof ( pe_header ) );
VBox/Devices/PC/ipxe/src/util/zbin.c:179:	memcpy ( (void*)((char*) output->buf + output->len ),
VBox/Devices/PC/ipxe/src/arch/x86/include/bits/string.h:5: * All except memcpy, memmove, memset and memcmp removed.
VBox/Devices/PC/ipxe/src/arch/x86/include/bits/string.h:153:#define memcpy( dest, src, len )			\
VBox/Devices/PC/ipxe/src/arch/i386/interface/pcbios/int13.c:245:	memcpy ( &command->int13->capacity, capacity,
VBox/Devices/PC/ipxe/src/arch/i386/interface/pxeparent/pxeparent.c:133:	memcpy ( &pxeparent_params, params, params_len );
VBox/Devices/PC/ipxe/src/arch/i386/interface/pxeparent/pxeparent.c:134:	memcpy ( &pxeparent_entry_point, &entry, sizeof ( entry ) );
VBox/Devices/PC/ipxe/src/arch/i386/interface/pxeparent/pxeparent.c:189:	memcpy ( params, &pxeparent_params, params_len );
VBox/Devices/PC/ipxe/src/arch/i386/interface/pxe/pxe_undi.c:484:	memcpy ( pxe_netdev->ll_addr,
VBox/Devices/PC/ipxe/src/arch/i386/interface/pxe/pxe_undi.c:555:	memcpy ( &undi_get_information->CurrentNodeAddress,
VBox/Devices/PC/ipxe/src/arch/i386/interface/pxe/pxe_undi.c:950:		memcpy ( basemem_packet, iobuf->data, len );
VBox/Devices/PC/ipxe/src/arch/i386/image/bzimage.c:349:		memcpy ( cpio.c_magic, CPIO_MAGIC, sizeof ( cpio.c_magic ) );
VBox/Devices/PC/ipxe/src/arch/i386/prefix/libprefix.S:302: * Call memcpy()-like function
VBox/Devices/PC/ipxe/src/arch/i386/prefix/libprefix.S:308: *   %bx : memcpy()-like function to call, passing parameters:
VBox/Devices/PC/ipxe/src/arch/i386/prefix/libprefix.S:377:	/* Call memcpy()-like function */
VBox/Devices/PC/ipxe/src/arch/i386/prefix/libprefix.S:418:	/* Call memcpy()-like function */
VBox/Devices/PC/ipxe/src/arch/i386/drivers/net/undi.c:84:		memcpy ( undi, &preloaded_undi, sizeof ( *undi ) );
VBox/Devices/PC/ipxe/src/arch/i386/drivers/net/undi.c:103:	memcpy ( &undi->dev.desc, &pci->dev.desc, sizeof ( undi->dev.desc ) );
VBox/Devices/PC/ipxe/src/arch/i386/drivers/net/undinet.c:215:	memcpy ( undinet_destaddr, ll_dest, sizeof ( undinet_destaddr ) );
VBox/Devices/PC/ipxe/src/arch/i386/drivers/net/undinet.c:237:	memcpy ( &basemem_packet, iobuf->data, len );
VBox/Devices/PC/ipxe/src/arch/i386/drivers/net/undinet.c:435:	memcpy ( undi_set_address.StationAddress, netdev->ll_addr,
VBox/Devices/PC/ipxe/src/arch/i386/drivers/net/undinet.c:608:	memcpy ( netdev->hw_addr, undi_info.PermNodeAddress, ETH_ALEN );
VBox/Devices/PC/ipxe/src/arch/i386/drivers/net/undinet.c:609:	memcpy ( netdev->ll_addr, undi_info.CurrentNodeAddress, ETH_ALEN );
VBox/Devices/PC/ipxe/src/arch/i386/include/bits/compiler.h:19: * The implicit calls to memcpy() and memset() which gcc can generate
VBox/Devices/PC/ipxe/src/arch/i386/core/video_subr.c:60:	memcpy(vidmem, vidmem + COLS * 2, (LINES - 1) * COLS * 2);
VBox/Devices/PC/ipxe/src/usr/pxemenu.c:154:	memcpy ( raw_menu_item, raw_menu, raw_menu_len );
VBox/Devices/PC/ipxe/src/usr/lotest.c:222:		memcpy ( iob_put ( iobuf, sizeof ( buf ) ),
VBox/Devices/PC/ipxe/src/crypto/cbc.c:70:		memcpy ( cbc_ctx, dst, blocksize );
VBox/Devices/PC/ipxe/src/crypto/cbc.c:96:		memcpy ( cbc_ctx, src, blocksize );
VBox/Devices/PC/ipxe/src/crypto/sha1.c:248:	memcpy ( out, &context->ddd.dd.digest,
VBox/Devices/PC/ipxe/src/crypto/asn1.c:251:	memcpy ( &temp, cursor, sizeof ( temp ) );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:308:	memcpy ( &contents, cursor, sizeof ( contents ) );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:331:	memcpy ( &contents, cursor, sizeof ( contents ) );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:378:	memcpy ( &contents, cursor, sizeof ( contents ) );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:489:	memcpy ( &contents, cursor, sizeof ( contents ) );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:633:	memcpy ( &contents, cursor, sizeof ( contents ) );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:783:	memcpy ( builder->data, data, len );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:811:	memcpy ( builder->data, &header, header_len );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:812:	memcpy ( ( builder->data + header_len ), data, len );
VBox/Devices/PC/ipxe/src/crypto/asn1.c:837:	memcpy ( builder->data, &header, header_len );
VBox/Devices/PC/ipxe/src/crypto/hmac_drbg.c:257:	memcpy ( seed_material, entropy, entropy_len );
VBox/Devices/PC/ipxe/src/crypto/hmac_drbg.c:258:	memcpy ( ( seed_material + entropy_len ), additional, additional_len );
VBox/Devices/PC/ipxe/src/crypto/hmac_drbg.c:340:		memcpy ( data, state->value, frag_len );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:58:			memcpy ( B, A, 8 );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:59:			memcpy ( B + 8, R, 8 );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:61:			memcpy ( A, B, 8 );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:63:			memcpy ( R, B + 8, 8 );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:97:	memcpy ( A, src, 8 );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:104:			memcpy ( B, A, 8 );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:105:			memcpy ( B + 8, R, 8 );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:108:			memcpy ( A, B, 8 );
VBox/Devices/PC/ipxe/src/crypto/aes_wrap.c:109:			memcpy ( R, B + 8, 8 );
VBox/Devices/PC/ipxe/src/crypto/rsa.c:214:	memcpy ( integer, raw, sizeof ( *integer ) );
VBox/Devices/PC/ipxe/src/crypto/rsa.c:399:	memcpy ( &encoded[ context->max_len - plaintext_len ],
VBox/Devices/PC/ipxe/src/crypto/rsa.c:457:	memcpy ( plaintext, start, plaintext_len );
VBox/Devices/PC/ipxe/src/crypto/rsa.c:516:	memcpy ( temp, prefix->data, prefix->len );
VBox/Devices/PC/ipxe/src/crypto/rsa.c:518:	memcpy ( temp, value, digest_len );
VBox/Devices/PC/ipxe/src/crypto/x509.c:167:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:206:	memcpy ( &serial->raw, raw, sizeof ( serial->raw ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:231:	memcpy ( &issuer->raw, raw, sizeof ( issuer->raw ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:259:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:302:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:309:		memcpy ( &oid_cursor, &cursor, sizeof ( oid_cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:312:		memcpy ( &name_cursor, &oid_cursor, sizeof ( name_cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:327:		memcpy ( *name, name_cursor.data, name_cursor.len );
VBox/Devices/PC/ipxe/src/crypto/x509.c:359:	memcpy ( &subject->raw, raw, sizeof ( subject->raw ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:388:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:390:	memcpy ( &public_key->raw, &cursor, sizeof ( public_key->raw ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:433:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:554:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:590:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:617:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:629:	memcpy ( ocsp->uri, cursor.data, cursor.len );
VBox/Devices/PC/ipxe/src/crypto/x509.c:683:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:687:	memcpy ( &subcursor, &cursor, sizeof ( subcursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:714:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:805:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:809:	memcpy ( &subcursor, &cursor, sizeof ( subcursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:870:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:898:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:900:	memcpy ( &cert->tbs, &cursor, sizeof ( cert->tbs ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:970:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:971:	memcpy ( &cert->raw, &cursor, sizeof ( cert->raw ) );
VBox/Devices/PC/ipxe/src/crypto/x509.c:1065:	memcpy ( raw, cursor.data, cursor.len );
VBox/Devices/PC/ipxe/src/crypto/crypto_null.c:66:	memcpy ( dst, src, len );
VBox/Devices/PC/ipxe/src/crypto/crypto_null.c:71:	memcpy ( dst, src, len );
VBox/Devices/PC/ipxe/src/crypto/cms.c:88:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/cms.c:116:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/cms.c:187:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/cms.c:191:	memcpy ( &issuer, &cursor, sizeof ( issuer ) );
VBox/Devices/PC/ipxe/src/crypto/cms.c:203:	memcpy ( &serial, &cursor, sizeof ( serial ) );
VBox/Devices/PC/ipxe/src/crypto/cms.c:314:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/cms.c:327:	memcpy ( info->signature, cursor.data, info->signature_len );
VBox/Devices/PC/ipxe/src/crypto/cms.c:349:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/cms.c:394:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/sha256.c:232:	memcpy ( out, &context->ddd.dd.digest,
VBox/Devices/PC/ipxe/src/crypto/hash_df.c:128:		memcpy ( temp, digest, frag_len );
VBox/Devices/PC/ipxe/src/crypto/hmac.c:74:	memcpy ( k_ipad, key, *key_len );
VBox/Devices/PC/ipxe/src/crypto/hmac.c:109:	memcpy ( k_opad, key, *key_len );
VBox/Devices/PC/ipxe/src/crypto/bigint.c:121:	memcpy ( &temp->base, base, sizeof ( temp->base ) );
VBox/Devices/PC/ipxe/src/crypto/bigint.c:122:	memcpy ( &temp->exponent, exponent, sizeof ( temp->exponent ) );
VBox/Devices/PC/ipxe/src/crypto/md5.c:274:	memcpy ( out, &context->ddd.dd.digest,
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:247:    memcpy(ctx->iv, iv, 16);
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:277:    memcpy(iv, ctx->iv, AES_IV_SIZE);
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:285:        memcpy(msg_32, msg, AES_BLOCKSIZE);
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:299:        memcpy(out, out_32, AES_BLOCKSIZE);
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:305:    memcpy(ctx->iv, iv, AES_IV_SIZE);
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:316:    memcpy(iv, ctx->iv, AES_IV_SIZE);
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:324:        memcpy(msg_32, msg, AES_BLOCKSIZE);
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:342:        memcpy(out, out_32, AES_BLOCKSIZE);
VBox/Devices/PC/ipxe/src/crypto/axtls/aes.c:348:    memcpy(ctx->iv, iv, AES_IV_SIZE);
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:58:	memcpy ( keym, key, key_len );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:60:	memcpy ( in, label, strlen ( label ) + 1 );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:61:	memcpy ( in + label_len + 1, data, data_len );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:72:			memcpy ( prf, out, prf_len );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:76:		memcpy ( prf, out, sizeof ( out ) );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:110:	memcpy ( pass, passphrase, pass_len );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:111:	memcpy ( in, salt, salt_len );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:112:	memcpy ( in + salt_len, &blocknr, 4 );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:159:			memcpy ( key, buf, key_len );
VBox/Devices/PC/ipxe/src/crypto/sha1extra.c:163:		memcpy ( key, buf, sizeof ( buf ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:246:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:260:	memcpy ( &status, cursor.data, sizeof ( status ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:284:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:310:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:338:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:411:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:413:	memcpy ( &response->tbs, &cursor, sizeof ( response->tbs ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:448:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:488:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:536:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:568:	memcpy ( &cursor, raw, sizeof ( cursor ) );
VBox/Devices/PC/ipxe/src/crypto/ocsp.c:603:	memcpy ( response->data, data, len );
VBox/Devices/PC/ipxe/src/drivers/infiniband/linda.c:2368:	memcpy ( &ibdev->gid.s.guid, &ibdev->node_guid,
VBox/Devices/PC/ipxe/src/drivers/infiniband/qib7322.c:2355:		memcpy ( &ibdev->node_guid, &qib7322->guid,
VBox/Devices/PC/ipxe/src/drivers/infiniband/qib7322.c:2357:		memcpy ( &ibdev->gid.s.guid, &qib7322->guid,
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:199:	memcpy ( in_buffer, in, in_len );
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:256:	memcpy ( out, out_buffer, out_len );
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:777:	memcpy ( &mad_ifc.mad, mad, sizeof ( mad_ifc.mad ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:788:	memcpy ( mad, &mad_ifc.mad, sizeof ( *mad ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:1270:		memcpy ( &qpctx.u.dwords[12], &qp->av.gid,
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:1413:	memcpy ( &wqe->ud.ud.u.dwords[4], &av->gid, sizeof ( av->gid ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:1753:			memcpy ( &av->gid, &grh->sgid, sizeof ( av->gid ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:2966:	memcpy ( &mcg.u.dwords[4], gid, sizeof ( *gid ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:3374:	memcpy ( netdev->hw_addr,
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:3599:	memcpy ( mac, &buf.bytes[ sizeof ( buf.bytes ) - ETH_ALEN ],
VBox/Devices/PC/ipxe/src/drivers/infiniband/hermon.c:3628:	memcpy ( &buf.bytes[ sizeof ( buf.bytes ) - ETH_ALEN ], mac,
VBox/Devices/PC/ipxe/src/drivers/infiniband/arbel.c:169:	memcpy ( in_buffer, in, in_len );
VBox/Devices/PC/ipxe/src/drivers/infiniband/arbel.c:220:	memcpy ( out, out_buffer, out_len );
VBox/Devices/PC/ipxe/src/drivers/infiniband/arbel.c:547:	memcpy ( &mad_ifc.mad, mad, sizeof ( mad_ifc.mad ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/arbel.c:558:	memcpy ( mad, &mad_ifc.mad, sizeof ( *mad ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/arbel.c:1119:		memcpy ( &qpctx.u.dwords[14], &qp->av.gid,
VBox/Devices/PC/ipxe/src/drivers/infiniband/arbel.c:1278:	memcpy ( &wqe->ud.ud.u.dwords[4], gid, sizeof ( *gid ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/arbel.c:1626:			memcpy ( &av->gid, &grh->sgid, sizeof ( av->gid ) );
VBox/Devices/PC/ipxe/src/drivers/infiniband/arbel.c:2856:	memcpy ( &mgm.u.dwords[4], gid, sizeof ( *gid ) );
VBox/Devices/PC/ipxe/src/drivers/block/ibft.c:404:	memcpy ( &target->boot_lun, &iscsi->lun, sizeof ( target->boot_lun ) );
VBox/Devices/PC/ipxe/src/drivers/block/scsi.c:388:	memcpy ( &command.lun, &scsidev->lun, sizeof ( command.lun ) );
VBox/Devices/PC/ipxe/src/drivers/block/scsi.c:961:	memcpy ( &scsidev->lun, lun, sizeof ( scsidev->lun ) );
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:317:	memcpy ( &login_req->initiator, initiator,
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:319:	memcpy ( &login_req->target, target, sizeof ( login_req->target ) );
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:430:	memcpy ( &cmd->lun, &command->lun, sizeof ( cmd->lun ) );
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:431:	memcpy ( &cmd->cdb, &command->cdb, sizeof ( cmd->cdb ) );
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:528:		memcpy ( &response.sense, sense, sizeof ( response.sense ) );
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:723:	memcpy ( &sbft->scsi.lun, &srpdev->lun, sizeof ( sbft->scsi.lun ) );
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:726:	memcpy ( &sbft->srp.initiator, &srpdev->initiator,
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:728:	memcpy ( &sbft->srp.target, &srpdev->target,
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:800:	memcpy ( &srpdev->initiator, initiator, sizeof ( srpdev->initiator ) );
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:801:	memcpy ( &srpdev->target, target, sizeof ( srpdev->target ) );
VBox/Devices/PC/ipxe/src/drivers/block/srp.c:802:	memcpy ( &srpdev->lun, lun, sizeof ( srpdev->lun ) );
VBox/Devices/PC/ipxe/src/drivers/net/prism2.c:692:  memcpy(txdesc.address1, hw->bssid, WLAN_ADDR_LEN);
VBox/Devices/PC/ipxe/src/drivers/net/prism2.c:693:  memcpy(txdesc.address2, nic->node_addr, WLAN_ADDR_LEN);
VBox/Devices/PC/ipxe/src/drivers/net/prism2.c:694:  memcpy(txdesc.address3, d, WLAN_ADDR_LEN);
VBox/Devices/PC/ipxe/src/drivers/net/efi/snpnet.c:281:	memcpy ( netdev->hw_addr, snp->Mode->PermanentAddress.Addr,
VBox/Devices/PC/ipxe/src/drivers/net/skge.c:268: * 		memcpy(data, &val, n);
VBox/Devices/PC/ipxe/src/drivers/net/skge.c:297: * 		memcpy(&val, data, n);
VBox/Devices/PC/ipxe/src/drivers/net/skge.c:2325:	memcpy(dev->hw_addr, (void *) (hw->regs + B2_MAC_1 + port*8), ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/depca.c:599:	memcpy(nic->packet, lp.rx_memcpy[entry], nic->packetlen = lp.rx_ring[entry].msg_length);
VBox/Devices/PC/ipxe/src/drivers/net/depca.c:722:	memcpy((char *)mem_start, sig, sizeof(sig));
VBox/Devices/PC/ipxe/src/drivers/net/rtl818x/rtl818x.c:717:	memcpy(hwinfo->rates[NET80211_BAND_2GHZ], rtl818x_rates,
VBox/Devices/PC/ipxe/src/drivers/net/eepro100.c:353:	memcpy ( ias->ia, netdev->ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/eepro100.c:361:	memcpy ( cfg, &ifec_cfg, sizeof ( *cfg ) );
VBox/Devices/PC/ipxe/src/drivers/net/tlan.c:531:	memcpy(nic->packet, rxb +
VBox/Devices/PC/ipxe/src/drivers/net/tlan.c:616:	memcpy(tail_buffer, d, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/tlan.c:617:	memcpy(tail_buffer + ETH_ALEN, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/tlan.c:619:	memcpy(tail_buffer + 2 * ETH_ALEN, (u8 *) & nstype, 2);
VBox/Devices/PC/ipxe/src/drivers/net/tlan.c:620:	memcpy(tail_buffer + ETH_HLEN, p, s);
VBox/Devices/PC/ipxe/src/drivers/net/via-rhine.c:1328:	    memcpy (nic->packet, tp->rx_buffs[tp->cur_rx], nic->packetlen);
VBox/Devices/PC/ipxe/src/drivers/net/via-rhine.c:1363:    memcpy (tp->tx_buffs[entry], d, ETH_ALEN);	/* dst */
VBox/Devices/PC/ipxe/src/drivers/net/via-rhine.c:1364:    memcpy (tp->tx_buffs[entry] + ETH_ALEN, nic->node_addr, ETH_ALEN);	/* src */
VBox/Devices/PC/ipxe/src/drivers/net/via-rhine.c:1367:    memcpy(tp->tx_buffs[entry] + 2 * ETH_ALEN, (char*)&nstype, 2);
VBox/Devices/PC/ipxe/src/drivers/net/via-rhine.c:1369:    memcpy (tp->tx_buffs[entry] + ETH_HLEN, p, s);
VBox/Devices/PC/ipxe/src/drivers/net/intel.c:237:		memcpy ( hw_addr, mac.raw, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/intel.c:508:	memcpy ( mac.raw, netdev->ll_addr, sizeof ( mac.raw ) );
VBox/Devices/PC/ipxe/src/drivers/net/atl1e.c:801:		memcpy(iob->data, (u8 *)(prrs + 1), packet_size);
VBox/Devices/PC/ipxe/src/drivers/net/atl1e.c:999:	memcpy(adapter->hw.mac_addr, netdev->ll_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/atl1e.c:1194:	memcpy(netdev->hw_addr, adapter->hw.perm_mac_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/atl1e.c:1195:	memcpy(netdev->ll_addr, adapter->hw.mac_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/atl1e.c:1320:	memcpy(hw->perm_mac_addr, eth_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/atl1e.c:1342:	memcpy(hw->mac_addr, hw->perm_mac_addr, sizeof(hw->perm_mac_addr));
VBox/Devices/PC/ipxe/src/drivers/net/vxge/vxge_traffic.c:692:		memcpy(iob_put(rx_iob, len), iobuf->data, len);
VBox/Devices/PC/ipxe/src/drivers/net/vxge/vxge_main.c:435:	memcpy(ndev->hw_addr,
VBox/Devices/PC/ipxe/src/drivers/net/vxge/vxge_main.c:583:	memcpy(&hldev->hw_info, &hw_info,
VBox/Devices/PC/ipxe/src/drivers/net/vxge/vxge_main.c:626:	memcpy((u8 *)vdev->vpath.macaddr,
VBox/Devices/PC/ipxe/src/drivers/net/myson.c:299:	memcpy ( mac.raw, netdev->ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/myson.c:623:	memcpy ( netdev->hw_addr, mac.raw, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/realtek.c:729:			memcpy ( iob_put ( iobuf, len ), rx->data, len );
VBox/Devices/PC/ipxe/src/drivers/net/ipoib.c:178:	memcpy ( &peer->mac, mac, sizeof ( peer->mac ) );
VBox/Devices/PC/ipxe/src/drivers/net/ipoib.c:281:	memcpy ( &mac->gid.s.guid, guid, sizeof ( mac->gid.s.guid ) );
VBox/Devices/PC/ipxe/src/drivers/net/ipoib.c:452:	memcpy ( &av.gid, &dest->mac.gid, sizeof ( av.gid ) );
VBox/Devices/PC/ipxe/src/drivers/net/ipoib.c:521:		memcpy ( &ll_src.gid, &av->gid, sizeof ( ll_src.gid ) );
VBox/Devices/PC/ipxe/src/drivers/net/ipoib.c:619:	memcpy ( &mac->gid.s.prefix, &ibdev->gid.s.prefix,
VBox/Devices/PC/ipxe/src/drivers/net/ipoib.c:756:	memcpy ( netdev->hw_addr, &ibdev->gid.s.guid,
VBox/Devices/PC/ipxe/src/drivers/net/ipoib.c:760:	memcpy ( &ipoib->broadcast, &ipoib_broadcast,
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:415:                memcpy((char *)eth_vmem, d, ETH_ALEN);	/* dst */
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:416:                memcpy((char *)eth_vmem+ETH_ALEN, nic->node_addr, ETH_ALEN); /* src */
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:419:                memcpy((char *)eth_vmem+ETH_HLEN, p, s);
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:437:	memcpy((char *)eth_vmem, d, ETH_ALEN);	/* dst */
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:438:	memcpy((char *)eth_vmem+ETH_ALEN, nic->node_addr, ETH_ALEN); /* src */
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:441:	memcpy((char *)eth_vmem+ETH_HLEN, p, s);
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:547:		memcpy(&pkthdr, bus_to_virt(eth_rmem + pktoff), 4);
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:565:				memcpy(p, bus_to_virt(eth_rmem + pktoff), frag);
VBox/Devices/PC/ipxe/src/drivers/net/ns8390.c:574:			memcpy(p, bus_to_virt(eth_rmem + pktoff), len);
VBox/Devices/PC/ipxe/src/drivers/net/epic100.c:326:    memcpy(txp, destaddr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/epic100.c:327:    memcpy(txp + ETH_ALEN, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/epic100.c:329:    memcpy(txp + 12, (char*)&nstype, 2);
VBox/Devices/PC/ipxe/src/drivers/net/epic100.c:330:    memcpy(txp + ETH_HLEN, data, len);
VBox/Devices/PC/ipxe/src/drivers/net/epic100.c:405:	memcpy(nic->packet, &rx_packet[entry * PKT_BUF_SZ], nic->packetlen);
VBox/Devices/PC/ipxe/src/drivers/net/ne2k_isa.c:296:	memcpy(&pkthdr, bus_to_virt(eth_rmem + pktoff), 4);
VBox/Devices/PC/ipxe/src/drivers/net/ne2k_isa.c:314:			memcpy(p, bus_to_virt(eth_rmem + pktoff), frag);
VBox/Devices/PC/ipxe/src/drivers/net/ne2k_isa.c:323:		memcpy(p, bus_to_virt(eth_rmem + pktoff), len);
VBox/Devices/PC/ipxe/src/drivers/net/sis900.c:1122:    memcpy(txb, d, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/sis900.c:1123:    memcpy(txb + ETH_ALEN, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/sis900.c:1125:    memcpy(txb + 2 * ETH_ALEN, (char*)&nstype, 2);
VBox/Devices/PC/ipxe/src/drivers/net/sis900.c:1126:    memcpy(txb + ETH_HLEN, p, s);
VBox/Devices/PC/ipxe/src/drivers/net/sis900.c:1213:        memcpy(nic->packet, (rxb + cur_rx*RX_BUF_SIZE), nic->packetlen);
VBox/Devices/PC/ipxe/src/drivers/net/davicom.c:535:  memcpy(&txb[0], d, ETH_ALEN);	/* DA 6byte */
VBox/Devices/PC/ipxe/src/drivers/net/davicom.c:536:  memcpy(&txb[ETH_ALEN], nic->node_addr, ETH_ALEN); /* SA 6byte*/
VBox/Devices/PC/ipxe/src/drivers/net/davicom.c:539:  memcpy(&txb[ETH_HLEN], p, s); /* Frame data */
VBox/Devices/PC/ipxe/src/drivers/net/davicom.c:588:     memcpy is quite fast */
VBox/Devices/PC/ipxe/src/drivers/net/davicom.c:590:  memcpy(nic->packet, rxb + rxd_tail * BUFLEN, nic->packetlen);
VBox/Devices/PC/ipxe/src/drivers/net/amd8111e.c:552:	memcpy(frame->dst_addr, dst_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/amd8111e.c:553:	memcpy(frame->src_addr, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/amd8111e.c:555:	memcpy(frame->data, packet, size);
VBox/Devices/PC/ipxe/src/drivers/net/amd8111e.c:606:		memcpy(nic->packet, lp->rx_buf[index], nic->packetlen);
VBox/Devices/PC/ipxe/src/drivers/net/sky2.c:2208:	memcpy(dev->hw_addr, (void *)(hw->regs + B2_MAC_1 + port * 8), ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/cs89x0.c:271:	memcpy(testpacket, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/cs89x0.c:272:	memcpy(testpacket+ETH_ALEN, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/cs89x0.c:587:		memcpy(nic->node_addr, MAC_HW_ADDR, 6);
VBox/Devices/PC/ipxe/src/drivers/net/phantom/phantom.c:903:	memcpy ( entry, rds, sizeof ( *entry ) );
VBox/Devices/PC/ipxe/src/drivers/net/phantom/phantom.c:956:	memcpy ( entry, cds, sizeof ( *entry ) );
VBox/Devices/PC/ipxe/src/drivers/net/phantom/phantom.c:1556:		memcpy ( in_frag, ( data_in + offset ), in_frag_len );
VBox/Devices/PC/ipxe/src/drivers/net/phantom/phantom.c:1597:		memcpy ( ( data_out + offset ), out_frag, out_frag_len );
VBox/Devices/PC/ipxe/src/drivers/net/tg3/tg3_hw.c:1683:			memcpy(&dev->hw_addr[0], ((char *)&hi) + 2, 2);
VBox/Devices/PC/ipxe/src/drivers/net/tg3/tg3_hw.c:1684:			memcpy(&dev->hw_addr[2], (char *)&lo, sizeof(lo));
VBox/Devices/PC/ipxe/src/drivers/net/myri10ge.c:480:		memcpy ( to, &tmp, 4 );
VBox/Devices/PC/ipxe/src/drivers/net/igbvf/igbvf_vf.c:171:				memcpy(hw->mac.perm_addr, addr, 6);
VBox/Devices/PC/ipxe/src/drivers/net/igbvf/igbvf_vf.c:211:	memcpy(msg_addr, addr, 6);
VBox/Devices/PC/ipxe/src/drivers/net/igbvf/igbvf_main.c:439:		memcpy ( netdev->hw_addr, adapter->hw.mac.addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/igbvf/igbvf_main.c:876:	memcpy ( netdev->hw_addr, adapter->hw.mac.addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/pcnet32.c:577:			memcpy ( priv->netdev->hw_addr, promaddr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/dmfe.c:383:			memcpy(nic->packet, rxb + (entry * RX_ALLOC_SIZE),
VBox/Devices/PC/ipxe/src/drivers/net/dmfe.c:420:	memcpy(ptxb, dest, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/dmfe.c:421:	memcpy(ptxb + ETH_ALEN, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/dmfe.c:423:	memcpy(ptxb + 2 * ETH_ALEN, (u8 *) & nstype, 2);
VBox/Devices/PC/ipxe/src/drivers/net/dmfe.c:424:	memcpy(ptxb + ETH_HLEN, packet, size);
VBox/Devices/PC/ipxe/src/drivers/net/tulip.c:737:                memcpy(ee_data + 26, eeprom_fixups[i].newtable,
VBox/Devices/PC/ipxe/src/drivers/net/tulip.c:1052:    memcpy(txb, d, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/tulip.c:1053:    memcpy(txb + ETH_ALEN, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/tulip.c:1055:    memcpy(txb + 2 * ETH_ALEN, (u8 *)&nstype, 2);
VBox/Devices/PC/ipxe/src/drivers/net/tulip.c:1056:    memcpy(txb + ETH_HLEN, p, s);
VBox/Devices/PC/ipxe/src/drivers/net/tulip.c:1119:    memcpy(nic->packet, rxb + tp->cur_rx * BUFLEN, nic->packetlen);
VBox/Devices/PC/ipxe/src/drivers/net/tulip.c:1361:        memcpy(tp->eeprom, ee_data, sizeof(tp->eeprom));
VBox/Devices/PC/ipxe/src/drivers/net/vmxnet3.c:405:	memcpy ( &mac, ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/vmxnet3.c:571:	memcpy ( hw_addr, &mac, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/sundance.c:482:			memcpy(nic->packet, rxb +
VBox/Devices/PC/ipxe/src/drivers/net/sundance.c:510:	memcpy(txb, d, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/sundance.c:511:	memcpy(txb + ETH_ALEN, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/sundance.c:513:	memcpy(txb + 2 * ETH_ALEN, (u8 *) & nstype, 2);
VBox/Devices/PC/ipxe/src/drivers/net/sundance.c:514:	memcpy(txb + ETH_HLEN, p, s);
VBox/Devices/PC/ipxe/src/drivers/net/etherfabric.c:1450:		memcpy ( &reg, data_out, len );
VBox/Devices/PC/ipxe/src/drivers/net/etherfabric.c:1481:		memcpy ( data_in, &reg, len );
VBox/Devices/PC/ipxe/src/drivers/net/etherfabric.c:4172:	memcpy ( netdev->hw_addr, efab->mac_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/drivers/net/via-velocity.h:1872:			memcpy(vptr->ip_addr, &ifa->ifa_address, 4);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath5k/ath5k_pcu.c:183: * (just a memcpy).
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath5k/ath5k_pcu.c:189:	memcpy(mac, ah->ah_sta_id, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath5k/ath5k_pcu.c:206:	memcpy(ah->ah_sta_id, mac, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath5k/ath5k_pcu.c:354:	memcpy(ah->ah_bssid_mask, mask, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath5k/ath5k_qcu.c:40:	memcpy(&ah->ah_txq, queue_info, sizeof(struct ath5k_txq_info));
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath5k/ath5k_eeprom.c:1744:	memcpy(mac, mac_d, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath5k/ath5k.c:1648:			memcpy(ah->ah_bssid, dev->bssid, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_main.c:803:		memcpy(common->curbssid, common->dev->bssid, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar9003_phy.c:1266:	memcpy(ah->nf_regs, ar9300_cca_regs, sizeof(ah->nf_regs));
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_init.c:312:	memcpy(&sc->rates, ath9k_legacy_rates, sizeof(ath9k_legacy_rates));
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_init.c:315:		memcpy(&sc->hwinfo->channels[sc->hwinfo->nr_channels], ath9k_2ghz_chantable, sizeof(ath9k_2ghz_chantable));
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_init.c:325:		memcpy(&sc->hwinfo->channels[sc->hwinfo->nr_channels], ath9k_5ghz_chantable, sizeof(ath9k_5ghz_chantable));
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_init.c:350:	memcpy(common->bssidmask, ath_bcast_mac, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_init.c:403:	memcpy(sc->hwinfo->hwaddr, common->macaddr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar9003_eeprom.c:3205:			memcpy(&mptr[spot], &block[it+2], length);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar9003_eeprom.c:3234:		memcpy(mptr, (u8 *) (word + COMP_HDR_LEN), length);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar9003_eeprom.c:3249:			memcpy(mptr, eep, mdata_size);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar9003_eeprom.c:3325:	memcpy(mptr, &ar9300_default, mdata_size);
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar9003_eeprom.c:4856:			memcpy(target_power_val_t2_eep, targetPowerValT2,
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar9003_eeprom.c:4869:		memcpy(target_power_val_t2_eep, targetPowerValT2,
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar5008_phy.c:807:		memcpy(ah->addac5416_21,
VBox/Devices/PC/ipxe/src/drivers/net/ath/ath9k/ath9k_ar5008_phy.c:1662:	memcpy(ah->nf_regs, ar5416_cca_regs, sizeof(ah->nf_regs));
VBox/Devices/PC/ipxe/src/drivers/net/via-velocity.c:510:		memcpy(nic->packet, bus_to_virt(rd->pa_low),
VBox/Devices/PC/ipxe/src/drivers/net/via-velocity.c:541:	memcpy(ptxb, dest, ETH_ALEN);	/* Destination */
VBox/Devices/PC/ipxe/src/drivers/net/via-velocity.c:542:	memcpy(ptxb + ETH_ALEN, nic->node_addr, ETH_ALEN);	/* Source */
VBox/Devices/PC/ipxe/src/drivers/net/via-velocity.c:544:	memcpy(ptxb + 2 * ETH_ALEN, (u8 *) & nstype, 2);	/* Type */
VBox/Devices/PC/ipxe/src/drivers/net/via-velocity.c:545:	memcpy(ptxb + ETH_HLEN, packet, size);
VBox/Devices/PC/ipxe/src/drivers/net/via-velocity.c:558://                memcpy(ptxb, skb->data, skb->len);
VBox/Devices/PC/ipxe/src/drivers/net/w89c840.c:458:            memcpy(nic->packet, le32desc_to_virt(w840private.rx_ring[entry].buffer1), pkt_len);
VBox/Devices/PC/ipxe/src/drivers/net/w89c840.c:508:    memcpy (w89c840_buf.tx_packet, d, ETH_ALEN);    /* dst */
VBox/Devices/PC/ipxe/src/drivers/net/w89c840.c:509:    memcpy (w89c840_buf.tx_packet + ETH_ALEN, nic->node_addr, ETH_ALEN);/*src*/
VBox/Devices/PC/ipxe/src/drivers/net/w89c840.c:514:    memcpy (w89c840_buf.tx_packet + ETH_HLEN, p, s);
VBox/Devices/PC/ipxe/src/drivers/net/bnx2.c:2391:	memcpy(&frame[frame_idx].dst_addr, dst_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/bnx2.c:2392:	memcpy(&frame[frame_idx].src_addr, nic->node_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/bnx2.c:2395:	memcpy(&frame[frame_idx].data, packet, size);
VBox/Devices/PC/ipxe/src/drivers/net/bnx2.c:2551:				memcpy(nic->packet, data + bp->rx_offset, len);
VBox/Devices/PC/ipxe/src/drivers/net/bnx2.c:2639:	memcpy(nic->node_addr, bp->mac_addr, ETH_ALEN);
VBox/Devices/PC/ipxe/src/drivers/net/jme.c:1167:	memcpy(netdev->hw_addr, macaddr, 6);
VBox/Devices/PC/ipxe/src/tests/hmac_drbg_test.c:119:	memcpy ( entropy_nonce.entropy, (test)->entropy,		\
VBox/Devices/PC/ipxe/src/tests/hmac_drbg_test.c:121:	memcpy ( entropy_nonce.nonce, (test)->nonce,			\
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:4: * This file exists for testing the compilation of memcpy() with the
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:11:void __regparm memcpy_0 ( void *dest, void *src ) { memcpy ( dest, src, 0 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:12:void __regparm memcpy_1 ( void *dest, void *src ) { memcpy ( dest, src, 1 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:13:void __regparm memcpy_2 ( void *dest, void *src ) { memcpy ( dest, src, 2 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:14:void __regparm memcpy_3 ( void *dest, void *src ) { memcpy ( dest, src, 3 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:15:void __regparm memcpy_4 ( void *dest, void *src ) { memcpy ( dest, src, 4 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:16:void __regparm memcpy_5 ( void *dest, void *src ) { memcpy ( dest, src, 5 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:17:void __regparm memcpy_6 ( void *dest, void *src ) { memcpy ( dest, src, 6 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:18:void __regparm memcpy_7 ( void *dest, void *src ) { memcpy ( dest, src, 7 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:19:void __regparm memcpy_8 ( void *dest, void *src ) { memcpy ( dest, src, 8 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:20:void __regparm memcpy_9 ( void *dest, void *src ) { memcpy ( dest, src, 9 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:21:void __regparm memcpy_10 ( void *dest, void *src ) { memcpy ( dest, src, 10 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:22:void __regparm memcpy_11 ( void *dest, void *src ) { memcpy ( dest, src, 11 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:23:void __regparm memcpy_12 ( void *dest, void *src ) { memcpy ( dest, src, 12 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:24:void __regparm memcpy_13 ( void *dest, void *src ) { memcpy ( dest, src, 13 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:25:void __regparm memcpy_14 ( void *dest, void *src ) { memcpy ( dest, src, 14 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:26:void __regparm memcpy_15 ( void *dest, void *src ) { memcpy ( dest, src, 15 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:27:void __regparm memcpy_16 ( void *dest, void *src ) { memcpy ( dest, src, 16 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:28:void __regparm memcpy_17 ( void *dest, void *src ) { memcpy ( dest, src, 17 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:29:void __regparm memcpy_18 ( void *dest, void *src ) { memcpy ( dest, src, 18 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:30:void __regparm memcpy_19 ( void *dest, void *src ) { memcpy ( dest, src, 19 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:31:void __regparm memcpy_20 ( void *dest, void *src ) { memcpy ( dest, src, 20 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:32:void __regparm memcpy_21 ( void *dest, void *src ) { memcpy ( dest, src, 21 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:33:void __regparm memcpy_22 ( void *dest, void *src ) { memcpy ( dest, src, 22 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:34:void __regparm memcpy_23 ( void *dest, void *src ) { memcpy ( dest, src, 23 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:35:void __regparm memcpy_24 ( void *dest, void *src ) { memcpy ( dest, src, 24 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:36:void __regparm memcpy_25 ( void *dest, void *src ) { memcpy ( dest, src, 25 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:37:void __regparm memcpy_26 ( void *dest, void *src ) { memcpy ( dest, src, 26 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:38:void __regparm memcpy_27 ( void *dest, void *src ) { memcpy ( dest, src, 27 ); }
VBox/Devices/PC/ipxe/src/tests/memcpy_test.c:39:void __regparm memcpy_28 ( void *dest, void *src ) { memcpy ( dest, src, 28 ); }
VBox/Devices/PC/ipxe/src/include/ipxe/uaccess.h:97:	memcpy ( ( ( void * ) dest + dest_off ),
VBox/Devices/PC/ipxe/src/include/ipxe/cbc.h:42:	memcpy ( cbc_ctx, iv, raw_cipher->blocksize );
VBox/Devices/PC/ipxe/src/net/fcns.c:181:	memcpy ( &gid_pn.port_wwn, &query->peer->port_wwn,
VBox/Devices/PC/ipxe/src/net/fcp.c:342:	memcpy ( &cmnd->lun, &command->lun, sizeof ( cmnd->lun ) );
VBox/Devices/PC/ipxe/src/net/fcp.c:348:	memcpy ( &cmnd->cdb, &fcpcmd->command.cdb, sizeof ( cmnd->cdb ) );
VBox/Devices/PC/ipxe/src/net/fcp.c:610:		memcpy ( &response.sense, sense, sizeof ( response.sense ) );
VBox/Devices/PC/ipxe/src/net/fcp.c:774:	memcpy ( &fcpcmd->command, command, sizeof ( fcpcmd->command ) );
VBox/Devices/PC/ipxe/src/net/fcp.c:882:	memcpy ( &wwn.fc, &fcpdev->wwn, sizeof ( wwn.fc ) );
VBox/Devices/PC/ipxe/src/net/fcp.c:884:	memcpy ( &lun.scsi, &fcpdev->lun, sizeof ( lun.scsi ) );
VBox/Devices/PC/ipxe/src/net/fcp.c:984:	memcpy ( &fcpdev->wwn, wwn, sizeof ( fcpdev->wwn ) );
VBox/Devices/PC/ipxe/src/net/fcp.c:985:	memcpy ( &fcpdev->lun, lun, sizeof ( fcpdev->lun ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:201:	memcpy ( &ctx->tk, key, sizeof ( ctx->tk ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:223:	memcpy ( dctx->mac, mac, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:263:	memcpy ( ppk, dctx->ttak, sizeof ( dctx->ttak ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:333:	memcpy ( V, key, sizeof ( V ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:338:	memcpy ( &cap.byte[0], da, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:339:	memcpy ( &cap.byte[6], sa, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:365:	memcpy ( mic, V, sizeof ( V ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:403:	memcpy ( iob_put ( eiob, hdrlen ), iob->data, hdrlen );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:408:	memcpy ( &head, key, 3 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:411:	memcpy ( iob_put ( eiob, sizeof ( head ) ), &head, sizeof ( head ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:465:	memcpy ( iob_put ( iob, hdrlen ), eiob->data, hdrlen );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:551:	memcpy ( kckb, kck, kck_len );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:573:	memcpy ( key, iv, 16 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_tkip.c:574:	memcpy ( key + 16, kek, 16 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:197:	memcpy ( A + 1, nonce, CCMP_NONCE_LEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:272:	memcpy ( B + 1, nonce, CCMP_NONCE_LEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:281:	memcpy ( B + 2, aad, 14 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:286:	memcpy ( B, aad + 14, 8 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:294:			memcpy ( B, data, 16 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:297:			memcpy ( B, data, datalen );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:308:	memcpy ( mic, X, 8 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:342:	memcpy ( iob_put ( eiob, hdrlen ), iob->data, hdrlen );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:347:	memcpy ( head.pn_lo, tx_pn, 2 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:348:	memcpy ( head.pn_hi, tx_pn + 2, 4 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:351:	memcpy ( iob_put ( eiob, sizeof ( head ) ), &head, sizeof ( head ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:355:	memcpy ( nonce.a2, hdr->addr2, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:360:	memcpy ( aad.a1, hdr->addr1, 3 * ETH_ALEN ); /* all 3 at once */
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:405:	memcpy ( iob_put ( iob, hdrlen ), eiob->data, hdrlen );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:411:	memcpy ( rx_pn, head->pn_lo, 2 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:412:	memcpy ( rx_pn + 2, head->pn_hi, 4 );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:427:	memcpy ( nonce.a2, hdr->addr2, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:432:	memcpy ( aad.a1, hdr->addr1, 3 * ETH_ALEN ); /* all 3 at once */
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:485:	memcpy ( kckb, kck, kck_len );
VBox/Devices/PC/ipxe/src/net/80211/wpa_ccmp.c:491:	memcpy ( mic, hash, 16 );
VBox/Devices/PC/ipxe/src/net/80211/sec80211.c:138:			memcpy ( crypto, tbl_crypto, sizeof ( *crypto ) );
VBox/Devices/PC/ipxe/src/net/80211/wep.c:103:	memcpy ( ctx->key + WEP_IV_LEN, key, ctx->keylen );
VBox/Devices/PC/ipxe/src/net/80211/wep.c:132:	memcpy ( iob_put ( eiob, hdrlen ), iob->data, hdrlen );
VBox/Devices/PC/ipxe/src/net/80211/wep.c:139:	memcpy ( iob_put ( eiob, WEP_HEADER_LEN ), &iv, WEP_HEADER_LEN );
VBox/Devices/PC/ipxe/src/net/80211/wep.c:140:	memcpy ( ctx->key, &iv, WEP_IV_LEN );
VBox/Devices/PC/ipxe/src/net/80211/wep.c:181:	memcpy ( iob_put ( iob, hdrlen ), eiob->data, hdrlen );
VBox/Devices/PC/ipxe/src/net/80211/wep.c:186:	memcpy ( &iv, eiob->data + hdrlen, 4 );
VBox/Devices/PC/ipxe/src/net/80211/wep.c:188:	memcpy ( ctx->key, &iv, WEP_IV_LEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:510:	memcpy ( hdr->addr1, dev->bssid, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:511:	memcpy ( hdr->addr2, ll_source, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:512:	memcpy ( hdr->addr3, ll_dest, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:718:	memcpy ( hdr->addr1, dest, ETH_ALEN );	/* DA = RA */
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:719:	memcpy ( hdr->addr2, dev->netdev->ll_addr, ETH_ALEN );	/* SA = TA */
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:720:	memcpy ( hdr->addr3, dest, ETH_ALEN );	/* BSSID */
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:801:	memcpy ( dev->hw, hw, sizeof ( *hw ) );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:802:	memcpy ( dev->netdev->hw_addr, hw->hwaddr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:805:	memcpy ( dev->channels, dev->hw->channels,
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:1058:				memcpy ( dev->essid, ie->ssid, ie->len );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:1206:	memcpy ( ie->ssid, dev->essid, ie->len );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:1224:		memcpy ( ie, dev->rsn_ie, dev->rsn_ie->len + 2 );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:1245:		memcpy ( ie, dev->rsn_ie, dev->rsn_ie->len + 2 );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:1396:			memcpy ( iob_put ( iob, iob_len ( siob ) ),
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:1449:		memcpy ( ssid, ie->ssid, ie->len );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:1481:		memcpy ( wlan->bssid, hdr->addr3, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:1492:		memcpy ( iob_put ( wlan->beacon, iob_len ( iob ) ),
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:2117:	memcpy ( dev->bssid, wlan->bssid, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:2162:			memcpy ( dev->handshaker, handshaker,
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:2266:		memcpy ( hdr->addr2, hdr->addr1, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:2267:		memcpy ( hdr->addr1, hdr->addr3, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:2345:	memcpy ( dev->bssid, hdr->addr3, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:2573:	memcpy ( iob_put ( niob, hdrsize ), frag->iob[0]->data, hdrsize );
VBox/Devices/PC/ipxe/src/net/80211/net80211.c:2578:		memcpy ( iob_put ( niob, len ),
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:227:	memcpy ( ctx->pmk, pmk, ctx->pmk_len = pmk_len );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:240:		memcpy ( ctx->ap_rsn_ie, ap_rsn_ie, ap_rsn_ie_end - ap_rsn_ie );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:291:		memcpy ( ptk_data.mac1, ctx->dev->netdev->ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:292:		memcpy ( ptk_data.mac2, ctx->dev->bssid, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:294:		memcpy ( ptk_data.mac1, ctx->dev->bssid, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:295:		memcpy ( ptk_data.mac2, ctx->dev->netdev->ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:299:		memcpy ( ptk_data.nonce1, ctx->Anonce, WPA_NONCE_LEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:300:		memcpy ( ptk_data.nonce2, ctx->Snonce, WPA_NONCE_LEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:302:		memcpy ( ptk_data.nonce1, ctx->Snonce, WPA_NONCE_LEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:303:		memcpy ( ptk_data.nonce2, ctx->Anonce, WPA_NONCE_LEN );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:395:	memcpy ( &ctx->gtk.tk, &kde->gtk_encap.gtk, kde->len - 6 );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:484:	memcpy ( npkt, pkt, sizeof ( *pkt ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:489:	memcpy ( npkt->nonce, ctx->Snonce, sizeof ( npkt->nonce ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:491:	memcpy ( iob_put ( iob, npkt->datalen ), ctx->dev->rsn_ie,
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:517:	memcpy ( ctx->Anonce, pkt->nonce, sizeof ( ctx->Anonce ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:552:	memcpy ( npkt, pkt, sizeof ( *pkt ) );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:748:		memcpy ( &ctx->gtk.tk, pkt->data, pkt->datalen );
VBox/Devices/PC/ipxe/src/net/80211/wpa.c:839:		memcpy ( their_mic, pkt->mic, sizeof ( pkt->mic ) );
VBox/Devices/PC/ipxe/src/net/ipv4.c:228:		memcpy ( iob_put ( new_iobuf, iob_len ( frag->iobuf ) ),
VBox/Devices/PC/ipxe/src/net/ipv4.c:230:		memcpy ( iob_put ( new_iobuf, iob_len ( iobuf ) ),
VBox/Devices/PC/ipxe/src/net/aoe.c:549:	memcpy ( aoedev->target, ll_source, ll_protocol->ll_addr_len );
VBox/Devices/PC/ipxe/src/net/aoe.c:666:	memcpy ( &aoecmd->command, command, sizeof ( aoecmd->command ) );
VBox/Devices/PC/ipxe/src/net/aoe.c:811:	memcpy ( abft->mac, aoedev->netdev->ll_addr, sizeof ( abft->mac ) );
VBox/Devices/PC/ipxe/src/net/aoe.c:865:	memcpy ( aoedev->target, netdev->ll_broadcast,
VBox/Devices/PC/ipxe/src/net/ndp.c:76:	memcpy ( &ndp->in6, &( *in6 ), sizeof ( *in6 ) );
VBox/Devices/PC/ipxe/src/net/ndp.c:78:		memcpy ( ndp->ll_addr, ll_addr, netdev->ll_protocol->ll_addr_len );
VBox/Devices/PC/ipxe/src/net/ndp.c:114:		memcpy ( dest_ll_addr, ndp->ll_addr, ll_protocol->ll_addr_len );
VBox/Devices/PC/ipxe/src/net/ndp.c:123://		memcpy ( ndp->ll_addr, netdev->ll_addr, 6 );
VBox/Devices/PC/ipxe/src/net/ndp.c:172:			memcpy ( ndp->ll_addr, nadvert->opt_ll_addr,
VBox/Devices/PC/ipxe/src/net/tcp/iscsi.c:183:	memcpy ( ( iscsi->rx_buffer + iscsi->rx_offset ), data, len );
VBox/Devices/PC/ipxe/src/net/tcp/iscsi.c:381:	memcpy ( &command->lun, &iscsi->command->lun,
VBox/Devices/PC/ipxe/src/net/tcp/iscsi.c:388:	memcpy ( &command->cdb, &iscsi->command->cdb, sizeof ( command->cdb ));
VBox/Devices/PC/ipxe/src/net/tcp/iscsi.c:434:		memcpy ( &rsp.sense, ( iscsi->rx_buffer + 2 ),
VBox/Devices/PC/ipxe/src/net/tcp/iscsi.c:1541:	memcpy ( &iscsi->rx_bhs.bytes[iscsi->rx_offset], data, len );
VBox/Devices/PC/ipxe/src/net/tcp/iscsi.c:1722:		memcpy ( &iscsi->target_sockaddr, peer,
VBox/Devices/PC/ipxe/src/net/tcp/iscsi.c:1792:	memcpy ( iscsi->command, command, sizeof ( *command ) );
VBox/Devices/PC/ipxe/src/net/fcels.c:194:	memcpy ( &els->port_id, &dest->sfc_port_id, sizeof ( els->port_id ) );
VBox/Devices/PC/ipxe/src/net/fcels.c:195:	memcpy ( &els->peer_port_id, &src->sfc_port_id,
VBox/Devices/PC/ipxe/src/net/fcels.c:303:	memcpy ( &els->port_id, port_id, sizeof ( els->port_id ) );
VBox/Devices/PC/ipxe/src/net/fcels.c:304:	memcpy ( &els->peer_port_id, peer_port_id,
VBox/Devices/PC/ipxe/src/net/fcels.c:471:	memcpy ( &flogi.port_wwn, &els->port->port_wwn,
VBox/Devices/PC/ipxe/src/net/fcels.c:473:	memcpy ( &flogi.node_wwn, &els->port->node_wwn,
VBox/Devices/PC/ipxe/src/net/fcels.c:529:		memcpy ( &els->peer_port_id, &els->port->ptp_link_port_id,
VBox/Devices/PC/ipxe/src/net/fcels.c:608:	memcpy ( &plogi.port_wwn, &els->port->port_wwn,
VBox/Devices/PC/ipxe/src/net/fcels.c:610:	memcpy ( &plogi.node_wwn, &els->port->node_wwn,
VBox/Devices/PC/ipxe/src/net/fcels.c:754:	memcpy ( &logo.port_id, &els->port->port_id, sizeof ( logo.port_id ) );
VBox/Devices/PC/ipxe/src/net/fcels.c:755:	memcpy ( &logo.port_wwn, &els->port->port_wwn,
VBox/Devices/PC/ipxe/src/net/fcels.c:975:	memcpy ( &prli.param, param, sizeof ( prli.param ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cmrc.c:389:	memcpy ( &cmrc->dgid, dgid, sizeof ( cmrc->dgid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cmrc.c:390:	memcpy ( &cmrc->service_id, service_id, sizeof ( cmrc->service_id ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_pathrec.c:107:	memcpy ( &path->av, av, sizeof ( path->av ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_pathrec.c:118:	memcpy ( &sa->sa_data.path_record.dgid, &path->av.gid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_pathrec.c:120:	memcpy ( &sa->sa_data.path_record.sgid, &ibdev->gid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_smc.c:178:	memcpy ( &ibdev->node_guid, &node_info->node_guid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_smc.c:186:	memcpy ( &ibdev->gid.s.prefix, port_info->gid_prefix,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_smc.c:206:	memcpy ( &ibdev->gid.s.guid, guid_info->guid[0],
VBox/Devices/PC/ipxe/src/net/infiniband/ib_mi.c:222:	memcpy ( iob_put ( iobuf, sizeof ( *mad ) ), mad, sizeof ( *mad ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_mi.c:290:		memcpy ( &madx->av, av, sizeof ( madx->av ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_mi.c:299:	memcpy ( &madx->mad, mad, sizeof ( madx->mad ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:356:	memcpy ( &qp->av, av, sizeof ( qp->av ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:365:	memcpy ( &req->service_id, &conn->service_id,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:367:	memcpy ( &req->local_ca, &ibdev->node_guid, sizeof ( req->local_ca ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:382:	memcpy ( &req->primary.local_gid, &ibdev->gid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:384:	memcpy ( &req->primary.remote_gid, &conn->qp->av.gid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:395:	memcpy ( &req->private_data, &conn->private_data, private_data_len );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:448:	memcpy ( &qp->av.gid, dgid, sizeof ( qp->av.gid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:450:	memcpy ( &conn->service_id, service_id, sizeof ( conn->service_id ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_cm.c:453:	memcpy ( &conn->private_data, private_data, private_data_len );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_srp.c:146:	memcpy ( &ib_sbft->sgid, &ibdev->gid, sizeof ( ib_sbft->sgid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_srp.c:147:	memcpy ( &ib_sbft->dgid, &ib_srp->dgid, sizeof ( ib_sbft->dgid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_srp.c:148:	memcpy ( &ib_sbft->service_id, &ib_srp->service_id,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_srp.c:207:	memcpy ( &ib_srp->dgid, dgid, sizeof ( ib_srp->dgid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_srp.c:208:	memcpy ( &ib_srp->service_id, service_id,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_srp.c:335:		memcpy ( &rp->sgid, &ibdev->gid, sizeof ( rp->sgid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_srp.c:370:	memcpy ( &port_id->ib.hca_guid, &rp->sgid.s.guid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_packet.c:94:		memcpy ( &grh->sgid, &ibdev->gid, sizeof ( grh->sgid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_packet.c:95:		memcpy ( &grh->dgid, &av->gid, sizeof ( grh->dgid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_packet.c:174:		memcpy ( &av->gid, &grh->sgid, sizeof ( av->gid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_mcast.c:59:	memcpy ( &sa->sa_data.mc_member_record.mgid, gid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_mcast.c:61:	memcpy ( &sa->sa_data.mc_member_record.port_gid, &ibdev->gid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_mcast.c:150:	memcpy ( &membership->gid, gid, sizeof ( membership->gid ) );
VBox/Devices/PC/ipxe/src/net/infiniband/ib_sma.c:62:	memcpy ( &node_info->sys_guid, &ibdev->node_guid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_sma.c:64:	memcpy ( &node_info->node_guid, &ibdev->node_guid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_sma.c:66:	memcpy ( &node_info->port_guid, &ibdev->gid.s.guid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_sma.c:135:	memcpy ( guid_info->guid[0], &ibdev->gid.s.guid,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_sma.c:164:	memcpy ( &ibdev->gid.s.prefix, port_info->gid_prefix,
VBox/Devices/PC/ipxe/src/net/infiniband/ib_sma.c:214:	memcpy ( port_info->gid_prefix, &ibdev->gid.s.prefix,
VBox/Devices/PC/ipxe/src/net/fc.c:169:	memcpy ( &sa_fc->sfc_port_id, id, sizeof ( sa_fc->sfc_port_id ) );
VBox/Devices/PC/ipxe/src/net/fc.c:523:	memcpy ( &fchdr->d_id,
VBox/Devices/PC/ipxe/src/net/fc.c:526:	memcpy ( &fchdr->s_id, &port->port_id, sizeof ( fchdr->s_id ) );
VBox/Devices/PC/ipxe/src/net/fc.c:703:	memcpy ( &xchg->peer_port_id, peer_port_id,
VBox/Devices/PC/ipxe/src/net/fc.c:961:		memcpy ( &port->link_node_wwn, link_node_wwn,
VBox/Devices/PC/ipxe/src/net/fc.c:963:		memcpy ( &port->link_port_wwn, link_port_wwn,
VBox/Devices/PC/ipxe/src/net/fc.c:972:			memcpy ( &port->port_id, port_id,
VBox/Devices/PC/ipxe/src/net/fc.c:978:				memcpy ( &port->port_id, &fc_ptp_high_port_id,
VBox/Devices/PC/ipxe/src/net/fc.c:980:				memcpy ( &port->ptp_link_port_id,
VBox/Devices/PC/ipxe/src/net/fc.c:984:				memcpy ( &port->port_id, &fc_ptp_low_port_id,
VBox/Devices/PC/ipxe/src/net/fc.c:986:				memcpy ( &port->ptp_link_port_id,
VBox/Devices/PC/ipxe/src/net/fc.c:1199:	memcpy ( &port->node_wwn, node_wwn, sizeof ( port->node_wwn ) );
VBox/Devices/PC/ipxe/src/net/fc.c:1200:	memcpy ( &port->port_wwn, port_wwn, sizeof ( port->port_wwn ) );
VBox/Devices/PC/ipxe/src/net/fc.c:1314:		memcpy ( &peer->port_id, port_id, sizeof ( peer->port_id ) );
VBox/Devices/PC/ipxe/src/net/fc.c:1495:	memcpy ( &peer->port_wwn, port_wwn, sizeof ( peer->port_wwn ) );
VBox/Devices/PC/ipxe/src/net/fc.c:1693:		memcpy ( ulp->param, param, param_len );
VBox/Devices/PC/ipxe/src/net/dhcpopts.c:337:		memcpy ( &option->data, data, len );
VBox/Devices/PC/ipxe/src/net/dhcpopts.c:404:	memcpy ( data, option->data, len );
VBox/Devices/PC/ipxe/src/net/udp.c:117:		memcpy ( &udp->peer, st_peer, sizeof ( udp->peer ) );
VBox/Devices/PC/ipxe/src/net/udp.c:119:		memcpy ( &udp->local, st_local, sizeof ( udp->local ) );
VBox/Devices/PC/ipxe/src/net/udp/slam.c:439:	memcpy ( slam->header, header, slam->header_len );
VBox/Devices/PC/ipxe/src/net/udp/slam.c:644:	memcpy ( path_dup, ( path + 1 ) , sizeof ( path_dup ) );
VBox/Devices/PC/ipxe/src/net/udp/slam.c:724:	memcpy ( &multicast, &default_multicast, sizeof ( multicast ) );
VBox/Devices/PC/ipxe/src/net/udp/dns.c:545:	memcpy ( &dns->sa, sa, sizeof ( dns->sa ) );
VBox/Devices/PC/ipxe/src/net/udp/dhcp.c:893:		memcpy ( chaddr, netdev->ll_addr, ll_protocol->ll_addr_len );
VBox/Devices/PC/ipxe/src/net/udp/dhcp.c:901:		memcpy ( chaddr, netdev->hw_addr, ll_protocol->hw_addr_len );
VBox/Devices/PC/ipxe/src/net/udp/dhcp.c:942:	memcpy ( dhcphdr->options, options, options_len );
VBox/Devices/PC/ipxe/src/net/udp/dhcp.c:1023:	memcpy ( client_id.ll_addr, netdev->ll_addr, ll_addr_len );
VBox/Devices/PC/ipxe/src/net/udp/dhcp.c:1176:	memcpy ( dhcphdr, iobuf->data, data_len );
VBox/Devices/PC/ipxe/src/net/udp/tftp.c:626:	memcpy ( buf, value, sizeof ( buf ) );
VBox/Devices/PC/ipxe/src/net/udp/tftp.c:964:		memcpy ( &tftp->peer, st_src, sizeof ( tftp->peer ) );
VBox/Devices/PC/ipxe/src/net/fcoe.c:192:	memcpy ( fcoe->fcf_mac, default_fcf_mac,
VBox/Devices/PC/ipxe/src/net/fcoe.c:194:	memcpy ( fcoe->local_mac, fcoe->netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/fcoe.c:252:			memcpy ( fipmac->mac, fcoe->netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/fcoe.c:410:		memcpy ( &fcoe->fcf_mac, ll_source, sizeof ( fcoe->fcf_mac ) );
VBox/Devices/PC/ipxe/src/net/fcoe.c:589:	memcpy ( request->mac_address.mac, fcoe->netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/fcoe.c:686:	memcpy ( solicitation->mac_address.mac, fcoe->netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/fcoe.c:690:	memcpy ( &solicitation->name_id.name, &fcoe->node_wwn.fc,
VBox/Devices/PC/ipxe/src/net/fcoe.c:763:			memcpy ( fcoe->fcf_mac, mac_address->mac,
VBox/Devices/PC/ipxe/src/net/fcoe.c:831:	memcpy ( fcoe->local_mac, mac_address->mac, sizeof ( fcoe->local_mac ));
VBox/Devices/PC/ipxe/src/net/fcoe.c:879:	memcpy ( keepalive->mac_address.mac, fcoe->netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/fcoe.c:1136:	memcpy ( &fcoe->node_wwn.fcoe.mac, netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/fcoe.c:1139:	memcpy ( &fcoe->port_wwn.fcoe.mac, netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/tls.c:291:	memcpy ( secret_copy, secret, secret_len );
VBox/Devices/PC/ipxe/src/net/tls.c:310:		memcpy ( digest_ctx_partial, digest_ctx, digest->ctxsize );
VBox/Devices/PC/ipxe/src/net/tls.c:320:		memcpy ( out, out_tmp, frag_len );
VBox/Devices/PC/ipxe/src/net/tls.c:468:	memcpy ( tx_cipherspec->mac_secret, key, hash_size );
VBox/Devices/PC/ipxe/src/net/tls.c:474:	memcpy ( rx_cipherspec->mac_secret, key, hash_size );
VBox/Devices/PC/ipxe/src/net/tls.c:800:	memcpy ( ctx, tls->handshake_ctx, sizeof ( ctx ) );
VBox/Devices/PC/ipxe/src/net/tls.c:875:	memcpy ( &hello.random, &tls->client_random, sizeof ( hello.random ) );
VBox/Devices/PC/ipxe/src/net/tls.c:889:	memcpy ( hello.extensions.server_name.list[0].name, tls->name,
VBox/Devices/PC/ipxe/src/net/tls.c:954:		memcpy ( certificate->certificates[0].data,
VBox/Devices/PC/ipxe/src/net/tls.c:1081:			memcpy ( &certificate_verify.sig_hash[0],
VBox/Devices/PC/ipxe/src/net/tls.c:1277:	memcpy ( &tls->server_random, &hello_a->random,
VBox/Devices/PC/ipxe/src/net/tls.c:1671:	memcpy ( content, data, len );
VBox/Devices/PC/ipxe/src/net/tls.c:1672:	memcpy ( mac, digest, mac_len );
VBox/Devices/PC/ipxe/src/net/tls.c:1718:	memcpy ( content, data, len );
VBox/Devices/PC/ipxe/src/net/tls.c:1719:	memcpy ( mac, digest, mac_len );
VBox/Devices/PC/ipxe/src/net/tls.c:1790:	memcpy ( cipherspec->cipher_next_ctx, cipherspec->cipher_ctx,
VBox/Devices/PC/ipxe/src/net/tls.c:1809:	memcpy ( tls->tx_cipherspec.cipher_ctx,
VBox/Devices/PC/ipxe/src/net/tls.c:2155:		memcpy ( ( buf + tls->rx_rcvd ), iobuf->data, frag_len );
VBox/Devices/PC/ipxe/src/net/eth_slow.c:155:	memcpy ( &lacp->partner, &lacp->actor, sizeof ( lacp->partner ) );
VBox/Devices/PC/ipxe/src/net/eth_slow.c:164:	memcpy ( lacp->actor.system, netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/netdev_settings.c:81:		memcpy ( netdev->ll_addr, data, len );
VBox/Devices/PC/ipxe/src/net/netdev_settings.c:109:		memcpy ( data, netdev->ll_addr, len );
VBox/Devices/PC/ipxe/src/net/netdev_settings.c:118:		memcpy ( data, &dhcp_desc, len );
VBox/Devices/PC/ipxe/src/net/ethernet.c:59:	memcpy ( ethhdr->h_dest, ll_dest, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/ethernet.c:60:	memcpy ( ethhdr->h_source, ll_source, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/ethernet.c:111:	memcpy ( ll_addr, hw_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/ethernet.c:163:	memcpy ( eth_addr, ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/arp.c:102:	memcpy ( arp->net_dest, net_dest,
VBox/Devices/PC/ipxe/src/net/arp.c:104:	memcpy ( arp->net_source, net_source,
VBox/Devices/PC/ipxe/src/net/arp.c:252:	memcpy ( arp->ll_dest, ll_dest, ll_protocol->ll_addr_len );
VBox/Devices/PC/ipxe/src/net/arp.c:312:	memcpy ( iob_put ( iobuf, ll_protocol->ll_addr_len ),
VBox/Devices/PC/ipxe/src/net/arp.c:314:	memcpy ( iob_put ( iobuf, net_protocol->net_addr_len ),
VBox/Devices/PC/ipxe/src/net/arp.c:318:	memcpy ( iob_put ( iobuf, net_protocol->net_addr_len ),
VBox/Devices/PC/ipxe/src/net/arp.c:411:	memcpy ( arp_sender_ha ( arphdr ), netdev->ll_addr, arphdr->ar_hln );
VBox/Devices/PC/ipxe/src/net/infiniband.c:405:	memcpy ( &av_copy, av, sizeof ( av_copy ) );
VBox/Devices/PC/ipxe/src/net/infiniband.c:717:	memcpy ( &mgid->gid, gid, sizeof ( mgid->gid ) );
VBox/Devices/PC/ipxe/src/net/vlan.c:105:	memcpy ( ll_dest_copy, ll_dest, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/vlan.c:106:	memcpy ( ll_source_copy, ll_source, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/vlan.c:253:	memcpy ( ll_dest_copy, ll_dest, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/vlan.c:254:	memcpy ( ll_source_copy, ll_source, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/vlan.c:360:	memcpy ( netdev->hw_addr, trunk->ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/net/dhcppkt.c:170:		memcpy ( dhcp_packet_field ( dhcppkt->dhcphdr, field ),
VBox/Devices/PC/ipxe/src/net/dhcppkt.c:206:		memcpy ( data, field_data, len );
VBox/Devices/PC/ipxe/src/net/icmpv6.c:43:	memcpy ( nsolicit->opt_ll_addr, netdev->ll_addr,
VBox/Devices/PC/ipxe/src/net/icmpv6.c:97:		memcpy ( &server, server_p, sizeof ( server ) );
VBox/Devices/PC/ipxe/src/net/icmpv6.c:108:                memcpy ( nadvert->opt_ll_addr, ll_addr, 6 );
VBox/Devices/PC/ipxe/src/net/tcp.c:284:	memcpy ( &tcp->peer, st_peer, sizeof ( tcp->peer ) );
VBox/Devices/PC/ipxe/src/net/tcp.c:441:			memcpy ( iob_put ( dest, frag_len ), iobuf->data,
VBox/Devices/PC/ipxe/src/core/settings.c:136:		memcpy ( &new->setting, setting, sizeof ( new->setting ) );
VBox/Devices/PC/ipxe/src/core/settings.c:138:		memcpy ( generic_setting_name ( new ),
VBox/Devices/PC/ipxe/src/core/settings.c:140:		memcpy ( generic_setting_data ( new ), data, len );
VBox/Devices/PC/ipxe/src/core/settings.c:180:	memcpy ( data, generic_setting_data ( generic ), len );
VBox/Devices/PC/ipxe/src/core/settings.c:304:	memcpy ( new_child->name, name, sizeof ( new_child->name ) );
VBox/Devices/PC/ipxe/src/core/settings.c:325:		memcpy ( tmp, buf, sizeof ( tmp ) );
VBox/Devices/PC/ipxe/src/core/settings.c:348:	memcpy ( name_copy, name, sizeof ( name_copy ) );
VBox/Devices/PC/ipxe/src/core/settings.c:1188:			memcpy ( setting, named_setting, sizeof ( *setting ) );
VBox/Devices/PC/ipxe/src/core/settings.c:1311:	memcpy ( buf, value, len );
VBox/Devices/PC/ipxe/src/core/settings.c:1332:	memcpy ( buf, raw, len );
VBox/Devices/PC/ipxe/src/core/settings.c:1363:	memcpy ( buf, tmp, len );
VBox/Devices/PC/ipxe/src/core/settings.c:1382:	memcpy ( tmp, raw, raw_len );
VBox/Devices/PC/ipxe/src/core/settings.c:1414:	memcpy ( buf, &ipv4, len );
VBox/Devices/PC/ipxe/src/core/settings.c:1469:	memcpy ( buf, &u.bytes[ sizeof ( u ) - size ], len );
VBox/Devices/PC/ipxe/src/core/linebuf.c:97:	memcpy ( ( new_data + linebuf->len ), data, consume );
VBox/Devices/PC/ipxe/src/core/base16.c:89:		memcpy ( buf, encoded_bytes, 2 );
VBox/Devices/PC/ipxe/src/core/uri.c:90:	memcpy ( raw, uri_string, raw_len );
VBox/Devices/PC/ipxe/src/core/uri.c:324:	memcpy ( base_tmp, base_path, base_len );
VBox/Devices/PC/ipxe/src/core/uri.c:382:	memcpy ( &tmp_uri, base_uri, sizeof ( tmp_uri ) );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:96:				memcpy ( arp_target_ha ( arphdr ), arp_sender_ha ( arphdr ), ETH_ALEN );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:97:				memcpy ( arp_sender_ha ( arphdr ), netdev->ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:101:				memcpy ( ethhdr->h_dest, ethhdr->h_source, ETH_ALEN );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:102:				memcpy ( ethhdr->h_source, netdev->ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:132:			memcpy ( dest_eth, ethhdr->h_source, ETH_ALEN );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:146:			memcpy ( buf, iob->data, payload_len );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:178:	memcpy ( iob_put ( iob, len ), buf, len );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:201:	memcpy ( ethhdr->h_dest, dest_eth, ETH_ALEN );
VBox/Devices/PC/ipxe/src/core/gdbudp.c:202:	memcpy ( ethhdr->h_source, netdev->ll_addr, ETH_ALEN );
VBox/Devices/PC/ipxe/src/core/malloc.c:430:	 * is valid, or (b) new_size is 0; either way, the memcpy() is
VBox/Devices/PC/ipxe/src/core/malloc.c:440:		memcpy ( new_ptr, old_ptr,
VBox/Devices/PC/ipxe/src/core/xfer.c:275:	memcpy ( iob_put ( iobuf, len ), data, len );
VBox/Devices/PC/ipxe/src/core/string.c:223: * memcpy - Copy one area of memory to another
VBox/Devices/PC/ipxe/src/core/string.c:231:void * memcpy(void * dest,const void *src,size_t count)
VBox/Devices/PC/ipxe/src/core/string.c:249: * Unlike memcpy(), memmove() copes with overlapping areas.
VBox/Devices/PC/ipxe/src/core/string.c:348:                memcpy(new,s,len);
VBox/Devices/PC/ipxe/src/core/cpio.c:41:	memcpy ( field, buf, 8 );
VBox/Devices/PC/ipxe/src/core/resolv.c:112:	memcpy ( &numeric->sa, sa, sizeof ( numeric->sa ) );
VBox/Devices/PC/ipxe/src/core/resolv.c:269:		memcpy ( &mux->sa, sa, sizeof ( mux->sa ) );
VBox/Devices/PC/ipxe/src/core/resolv.c:270:	memcpy ( mux->name, name, name_len );
VBox/Devices/PC/ipxe/src/core/resolv.c:412:		memcpy ( &named->local, local, sizeof ( named->local ) );
VBox/Devices/PC/ipxe/src/core/stringextra.c:241: * Note that this is the same as memcpy(), with the arguments reversed.
VBox/Devices/PC/ipxe/src/core/stringextra.c:242: * memcpy() is the standard, bcopy() is a legacy BSD function.
VBox/Devices/PC/ipxe/src/core/xferbuf.c:109:	memcpy ( ( xferbuf->data + xferbuf->pos ), iobuf->data, len );
VBox/Devices/PC/ipxe/Makefile.kmk:304:	src/libgcc/memcpy.c \
VBox/Devices/PC/DevACPI.cpp:2612:    memcpy(header->au8Signature, au8Signature, 4);
VBox/Devices/PC/DevACPI.cpp:2615:    memcpy(header->au8OemId, pThis->au8OemId, 6);
VBox/Devices/PC/DevACPI.cpp:2616:    memcpy(header->au8OemTabId, "VBOX", 4);
VBox/Devices/PC/DevACPI.cpp:2617:    memcpy(header->au8OemTabId+4, au8Signature, 4);
VBox/Devices/PC/DevACPI.cpp:2619:    memcpy(header->au8CreatorId, pThis->au8CreatorId, 4);
VBox/Devices/PC/DevACPI.cpp:2670:    memcpy(facs.au8Signature, "FACS", 4);
VBox/Devices/PC/DevACPI.cpp:2805:        memcpy(xsdt->header.au8OemTabId, pThis->au8OemTabId, 8);
VBox/Devices/PC/DevACPI.cpp:2826:    memcpy(rsdp->au8Signature, "RSD PTR ", 8);
VBox/Devices/PC/DevACPI.cpp:2827:    memcpy(rsdp->au8OemId, pThis->au8OemId, 6);
VBox/Devices/PC/DevACPI.cpp:3068:    memcpy(cust.header.au8OemTabId, pThis->au8OemTabId, 8);
VBox/Devices/PC/DevACPI.cpp:3873:    memcpy(pThis->au8OemId, pszOemId, cbOemId);
VBox/Devices/PC/DevACPI.cpp:3886:    memcpy(pThis->au8CreatorId, pszCreatorId, cbCreatorId);
VBox/Devices/PC/DevACPI.cpp:3950:                        memcpy(&pThis->au8OemId[0], &pThis->pu8CustBin[10], 6);
VBox/Devices/PC/DevACPI.cpp:3951:                        memcpy(&pThis->au8OemTabId[0], &pThis->pu8CustBin[16], 8);
VBox/Devices/PC/DevACPI.cpp:3952:                        memcpy(&pThis->u32OemRevision, &pThis->pu8CustBin[24], 4);
VBox/Devices/PC/DevACPI.cpp:3953:                        memcpy(&pThis->au8CreatorId[0], &pThis->pu8CustBin[28], 4);
VBox/Devices/PC/DevACPI.cpp:3954:                        memcpy(&pThis->u32CreatorRev, &pThis->pu8CustBin[32], 4);
VBox/Devices/PC/BIOS/eltorito.c:209:        /// @todo maybe our cdemu struct should match El Torito to allow memcpy()?
VBox/Devices/PC/ACPI/VBoxAcpi.cpp:374:            memcpy(pabAmlCodeDsdt, AmlCode, cbAmlCodeDsdt);
VBox/Devices/PC/ACPI/VBoxAcpi.cpp:435:            memcpy(pabAmlCodeSsdt, pabAmlCode, cbAmlCodeSsdt);
VBox/Devices/PC/DevFwCommon.cpp:494:            memcpy(pszStr, pszTmp, cStr); \
VBox/Devices/PC/DevFwCommon.cpp:689:        memcpy(pSystemInf->au8Uuid, pUuid, sizeof(RTUUID));
VBox/Devices/PC/DevFwCommon.cpp:779:            memcpy(pszStr, szSocket, cStr);
VBox/Devices/PC/DevFwCommon.cpp:1037:    memcpy(pCfgTab->au8Signature, "PCMP", 4);
VBox/Devices/PC/DevFwCommon.cpp:1039:    memcpy(pCfgTab->au8OemId, "VBOXCPU ", 8);
VBox/Devices/PC/DevFwCommon.cpp:1040:    memcpy(pCfgTab->au8ProductId, "VirtualBox  ", 12);
VBox/Devices/PC/DevFwCommon.cpp:1084:    memcpy(pBusEntry->au8BusTypeStr, "ISA   ", 6);
VBox/Devices/PC/DevFwCommon.cpp:1091:    memcpy(pBusEntry->au8BusTypeStr, "PCI   ", 6);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Include/pyport.h:299:/* Py_MEMCPY can be used instead of memcpy in cases where the copied blocks
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Include/pyport.h:301: * large transfers, the setup costs for memcpy are often quite high.  MEMCPY
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Include/pyport.h:311:            memcpy(t_, s_, n_);                                         \
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Include/pyport.h:317:#define Py_MEMCPY memcpy
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/zlib/zutil.h:238:#    define zmemcpy memcpy
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/socketmodule.h:236:    memcpy(&PySocketModule, api, sizeof(PySocketModule));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/_sre.c:728:    memcpy(state->data_stack+state->data_stack_base, data, size); \
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/_sre.c:736:    memcpy(data, state->data_stack+state->data_stack_base-size, size); \
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/_sre.c:2521:    memcpy((char*) copy + offset, (char*) self + offset,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/_sre.c:3525:    memcpy((char*) copy + offset, (char*) self + offset,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:18:#include <string.h>                     /* memset(), memcpy() */
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:1529:      memcpy(buffer, end, nLeftOver);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:1545:      memcpy(buff, s, len);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:1658:        memcpy(newBuf, &bufferPtr[-keep], bufferEnd - bufferPtr + keep);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:1670:        memcpy(newBuf, bufferPtr, bufferEnd - bufferPtr);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:2008:    memcpy(rawNameBuf, tag->rawName, tag->rawNameLength);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:2920:    memcpy(uri, binding->uri, binding->uriLen * sizeof(XML_Char));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:2929:  memcpy(uri, localPart, i * sizeof(XML_Char));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:2934:    memcpy(uri + 1, binding->prefix->name, prefixLen * sizeof(XML_Char));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:3033:  memcpy(b->uri, uri, len * sizeof(XML_Char));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:6104:      memcpy(pool->blocks->s, pool->start,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Modules/expat/xmlparse.c:6140:      memcpy(tem->s, pool->start,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/stringlib/localeutil.h:84:        /* No conversion, just memcpy the thousands_sep. */
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/stringlib/localeutil.h:85:        memcpy(*buffer_end, thousands_sep, thousands_sep_len);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/stringlib/localeutil.h:91:    memcpy(*buffer_end, *digits_end, n_chars * sizeof(STRINGLIB_CHAR));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/longobject.c:1950:                    memcpy(tmp->ob_digit,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/longobject.c:2682:    memcpy(lo->ob_digit, n->ob_digit, size_lo * sizeof(digit));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/longobject.c:2683:    memcpy(hi->ob_digit, n->ob_digit + size_lo, size_hi * sizeof(digit));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/longobject.c:2790:    memcpy(ret->ob_digit + 2*shift, t1->ob_digit,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/longobject.c:2806:    memcpy(ret->ob_digit, t2->ob_digit, Py_SIZE(t2) * sizeof(digit));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/longobject.c:2946:        memcpy(bslice->ob_digit, b->ob_digit + nbdone,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Objects/longobject.c:3869:        memcpy(&z->ob_digit[i], &a->ob_digit[i],
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/marshal.c:503:    memcpy(s, p->ptr, n);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/marshal.c:563:        memcpy(buf, &lo4, 4);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/marshal.c:564:        memcpy(buf+4, &hi4, 4);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/marshal.c:567:        memcpy(buf, &hi4, 4);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/marshal.c:568:        memcpy(buf+4, &lo4, 4);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/import.c:141:    memcpy(filetab, _PyImport_DynLoadFiletab,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/import.c:144:    memcpy(filetab + countD, _PyImport_StandardFiletab,
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/import.c:721:    memcpy(buf, pathname, len);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/import.c:1643:        memcpy(dirname, buf, dirlen);
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/import.c:3378:        memcpy(p, PyImport_Inittab, (i+1) * sizeof(struct _inittab));
VBox/Devices/EFI/Firmware/AppPkg/Applications/Python/PyMod-2.7.2/Python/import.c:3380:    memcpy(p+i, newtab, (n+1) * sizeof(struct _inittab));
VBox/Devices/EFI/Firmware/IntelFrameworkModulePkg/Library/LzmaCustomDecompressLib/Sdk/C/LzmaDec.c:807:            memcpy(p->tempBuf, src, inSize);
VBox/Devices/EFI/Firmware/IntelFrameworkModulePkg/Library/LzmaCustomDecompressLib/Sdk/C/LzmaDec.c:895:    memcpy(dest, p->dic + dicPos, outSizeCur);
VBox/Devices/EFI/Firmware/IntelFrameworkModulePkg/Library/LzmaCustomDecompressLib/UefiLzma.h:41:#define memcpy CopyMem
VBox/Devices/EFI/Firmware/MdePkg/Library/BaseMemoryLib/CopyMem.c:43:  // the intrinsic memcpy()
VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/test/fsw_posix.c:268:    memcpy(dent.d_name, dno->name.data, dno->name.size);
VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/test/fsw_posix_base.h:73:#define fsw_memcpy(dest,src,size) memcpy(dest,src,size)
VBox/Devices/EFI/Firmware/CryptoPkg/Library/IntrinsicLib/CopyMem.c:20:void * memcpy (void *dest, const void *src, unsigned int count)
VBox/Devices/EFI/Firmware/CryptoPkg/Library/IntrinsicLib/IntrinsicLib.inf:52:# In tools_def.txt, GCC rename symbol name memcpy to be CopyMem for IPF,
VBox/Devices/EFI/Firmware/CryptoPkg/Library/IntrinsicLib/IntrinsicLib.inf:53:# i.e. "DEFINE GCC_IPF_SYMRENAME_FLAGS     = --redefine-sym memcpy=CopyMem",
VBox/Devices/EFI/Firmware/CryptoPkg/Include/OpenSslSupport.h:165:void           *memcpy     (void *, const void *, size_t);
VBox/Devices/EFI/Firmware/CryptoPkg/Include/OpenSslSupport.h:232:#define memcpy(dest,source,count)         CopyMem(dest,source,(UINTN)(count))
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:566:                                                        memcpy (&mFormsetGuid, &Guid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:770:                memcpy (ByteOffset, &Data_U64, TypeSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:773:                memcpy (ByteOffset, &Data_U32, TypeSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:776:                memcpy (ByteOffset, &Data_U16, TypeSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:779:                memcpy (ByteOffset, &Data_U8, TypeSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:782:                memcpy (ByteOffset, &Data_BL, TypeSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:785:                memcpy (ByteOffset, &Data_SID, TypeSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:792:                 memcpy (ByteOffset + FieldOffset, &Data_U8, FieldSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:796:                 memcpy (ByteOffset + FieldOffset, &Data_U16, FieldSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:800:                 memcpy (ByteOffset + FieldOffset, &Data_U32, FieldSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:804:                 memcpy (ByteOffset + FieldOffset, &Data_U64, FieldSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:808:                 memcpy (ByteOffset + FieldOffset, &Data_BL, FieldSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:812:                 memcpy (ByteOffset + FieldOffset, &Data_SID, FieldSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrSyntax.g:4662:  memcpy (&Ref.FormSetGuid, FormSetGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:90:    memcpy (mValue, &Value.u8, mWidth);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:93:    memcpy (mValue, &Value.u16, mWidth);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:96:    memcpy (mValue, &Value.u32, mWidth);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:99:    memcpy (mValue, &Value.u64, mWidth);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:102:    memcpy (mValue, &Value.b, mWidth);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:105:    memcpy (mValue, &Value.time, mWidth);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:108:    memcpy (mValue, &Value.date, mWidth);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:111:    memcpy (mValue, &Value.string, mWidth);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:145:      memcpy (mGuid, Guid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:180:      memcpy (mGuid, Guid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:1564:    memcpy (NewTable, OldTable, TableSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3425:      memcpy (&StringCount, BlockHdr + sizeof (EFI_HII_STRING_BLOCK), sizeof (UINT16));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3442:      memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3490:      memcpy (&StringCount, BlockHdr + sizeof (EFI_HII_STRING_BLOCK), sizeof (UINT16));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3508:      memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3533:        memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3553:      memcpy (&SkipCount, BlockHdr + sizeof (EFI_HII_STRING_BLOCK), sizeof (UINT16));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3559:      memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3568:      memcpy (&Ext2, BlockHdr, sizeof (EFI_HII_SIBT_EXT2_BLOCK));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrUtilityLib.cpp:3573:      memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/Pccts/h/err.h:967:  memcpy(modeStack, zzmstk, sizeof(zzmstk));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/Pccts/h/err.h:985:  memcpy(zzmstk, modeStack, sizeof(zzmstk));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrFormPkg.cpp:325:    memcpy (Temp, Buffer, Size);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrFormPkg.cpp:682:    memcpy (NewRestoreNodeBegin->mBufferFree, LastFormEndAddr, NeedRestoreCodeLen);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrFormPkg.cpp:701:    memcpy (NewRestoreNodeBegin->mBufferFree, LastFormEndAddr, NeedRestoreCodeLen);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrFormPkg.cpp:731:      memcpy (NewRestoreNodeEnd->mBufferFree, InsertOpcodeNode->mBufferStart, NeedRestoreCodeLen);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/VfrCompile/VfrFormPkg.cpp:1118:      memcpy (Temp, pNode->mIfrBinBuf, pNode->mBinBufLen);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GnuGenBootSector/GnuGenBootSector.c:249:      memcpy (FirstSector + 0x1BE, FirstSectorBackup + 0x1BE, 0x40);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenBootSector/GenBootSector.c:504:      memcpy (DiskPartition + 0x1BE, DiskPartitionBackup + 0x1BE, 0x40);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/EfiLdrImage/EfiLdrImage.c:274:  memcpy (&EfiLdrHeader.Signature, "EFIL", 4);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/StringFuncs.c:240:  memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/MyAlloc.h:155://  This does a MyAlloc(), memcpy() and MyFree().  There is no optimization
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/MemoryFile.c:205:  memcpy (OutputString, InputFile->CurrentFilePointer, CharsToCopy);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/ParseGuidedSectionTools.c:143:          memcpy (&(NewGuidTool->Guid), &Guid, sizeof (Guid));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/ParseInf.c:105:  memcpy (InputBuffer, InputFile->CurrentFilePointer, CharsToCopy);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/MyAlloc.c:250:  memcpy (Tmp->Buffer, &MyAllocHeadMagik, sizeof MyAllocHeadMagik);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/MyAlloc.c:252:  memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/MyAlloc.c:279://  This does a MyAlloc(), memcpy() and MyFree().  There is no optimization
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/MyAlloc.c:362:    memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/Common/Decompress.c:939:      memcpy(*Destination, Source, SrcSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/EfiRom/EfiRom.c:829:  memcpy ((char *) MachineType, &PeHdr.Pe32.FileHeader.Machine, 2);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/PyEfiCompressor/EfiCompressor.c:74:    memcpy(TmpBuf, BufSeg, Len);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/PyEfiCompressor/EfiCompressor.c:151:    memcpy(TmpBuf, BufSeg, Len);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/7zStream.c:46:  memcpy(buf, lookBuf, *size);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/7zStream.c:121:  memcpy(buf, p->buf + p->pos, rem);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:261:  memcpy(data, p->data, curSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:384:    memcpy(dest->isMatch[i], p->isMatch[i], sizeof(p->isMatch[i]));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:385:    memcpy(dest->isRep0Long[i], p->isRep0Long[i], sizeof(p->isRep0Long[i]));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:388:    memcpy(dest->posSlotEncoder[i], p->posSlotEncoder[i], sizeof(p->posSlotEncoder[i]));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:389:  memcpy(dest->isRep, p->isRep, sizeof(p->isRep));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:390:  memcpy(dest->isRepG0, p->isRepG0, sizeof(p->isRepG0));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:391:  memcpy(dest->isRepG1, p->isRepG1, sizeof(p->isRepG1));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:392:  memcpy(dest->isRepG2, p->isRepG2, sizeof(p->isRepG2));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:393:  memcpy(dest->posEncoders, p->posEncoders, sizeof(p->posEncoders));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:394:  memcpy(dest->posAlignEncoder, p->posAlignEncoder, sizeof(p->posAlignEncoder));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:395:  memcpy(dest->reps, p->reps, sizeof(p->reps));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:396:  memcpy(dest->litProbs, p->litProbs, (0x300 << p->lclp) * sizeof(CLzmaProb));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:410:    memcpy(dest->isMatch[i], p->isMatch[i], sizeof(p->isMatch[i]));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:411:    memcpy(dest->isRep0Long[i], p->isRep0Long[i], sizeof(p->isRep0Long[i]));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:414:    memcpy(dest->posSlotEncoder[i], p->posSlotEncoder[i], sizeof(p->posSlotEncoder[i]));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:415:  memcpy(dest->isRep, p->isRep, sizeof(p->isRep));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:416:  memcpy(dest->isRepG0, p->isRepG0, sizeof(p->isRepG0));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:417:  memcpy(dest->isRepG1, p->isRepG1, sizeof(p->isRepG1));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:418:  memcpy(dest->isRepG2, p->isRepG2, sizeof(p->isRepG2));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:419:  memcpy(dest->posEncoders, p->posEncoders, sizeof(p->posEncoders));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:420:  memcpy(dest->posAlignEncoder, p->posAlignEncoder, sizeof(p->posAlignEncoder));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:421:  memcpy(dest->reps, p->reps, sizeof(p->reps));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:422:  memcpy(dest->litProbs, p->litProbs, (0x300 << dest->lclp) * sizeof(CLzmaProb));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaEnc.c:2135:  memcpy(p->data, data, size);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaDec.c:789:            memcpy(p->tempBuf, src, inSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/Sdk/C/LzmaDec.c:877:    memcpy(dest, p->dic + dicPos, outSizeCur);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/LzmaCompress/LzmaCompress.c:147:    memcpy(filteredStream, inBuffer, inSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/Elf32Convert.c:559:        memcpy(mCoffFile + mCoffSectionsOffset[Idx],
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/Elf64Convert.c:555:        memcpy(mCoffFile + mCoffSectionsOffset[Idx],
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:630:  memcpy (XipFile, *FileBuffer, PeHdr->Pe32.OptionalHeader.SizeOfHeaders);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:644:      memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:1638:          memcpy (&HiiPackageListGuid, &IfrFormSet.Guid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:1657:    memcpy (&HiiPackageListHeader.PackageListGuid, &HiiPackageListGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:1666:    memcpy (HiiPackageListBuffer, &HiiPackageListHeader, sizeof (HiiPackageListHeader));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:1681:    memcpy (HiiPackageDataPointer, &EndPackage, sizeof (EndPackage));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:1905:  memcpy (FileBuffer, InputFileBuffer, InputFileLength);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:1911:    memcpy (&TEImageHeader, FileBuffer, sizeof (TEImageHeader));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:2279:    memcpy (&BackupDosHdr, DosHdr, sizeof (EFI_IMAGE_DOS_HEADER));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFw/GenFw.c:2599:    memcpy (FileBuffer, &TEImageHeader, sizeof (EFI_TE_IMAGE_HEADER));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:451:    memcpy (FilSysType, FatBpb->Fat12_16.BS_FilSysType, 8);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:467:    memcpy (FilSysType, FatBpb->Fat32.BS_FilSysType, 8);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:672:    memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:678:    memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:694:    memcpy (VolLab, "EFI FAT32  ", sizeof(VolLab));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:695:    memcpy (FilSysType, FAT32_FILSYSTYPE, sizeof(FilSysType));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:697:    memcpy (VolLab, "EFI FAT16  ", sizeof(VolLab));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:698:    memcpy (FilSysType, FAT16_FILSYSTYPE, sizeof(FilSysType));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:700:    memcpy (VolLab, "EFI FAT12  ", sizeof(VolLab));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:701:    memcpy (FilSysType, FAT12_FILSYSTYPE, sizeof(FilSysType));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:704:    memcpy (DestFatBpb.Fat12_16.BS_VolLab, VolLab, sizeof(VolLab));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:705:    memcpy (DestFatBpb.Fat12_16.BS_FilSysType, FilSysType, sizeof(FilSysType));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:707:    memcpy (DestFatBpb.Fat32.BS_VolLab, VolLab, sizeof(VolLab));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:708:    memcpy (DestFatBpb.Fat32.BS_FilSysType, FilSysType, sizeof(FilSysType));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/BootSectImage/bootsectimage.c:822:  memcpy (
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenSec/GenSec.c:691:    memcpy (OutputBuffer + HeaderLength, FileBuffer, CompressedLength);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenSec/GenSec.c:914:      memcpy (&(Crc32GuidSect2->GuidSectionHeader.SectionDefinitionGuid), &mEfiCrc32SectionGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenSec/GenSec.c:925:      memcpy (&(Crc32GuidSect->GuidSectionHeader.SectionDefinitionGuid), &mEfiCrc32SectionGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenSec/GenSec.c:939:      memcpy (&(VendorGuidSect2->SectionDefinitionGuid), VendorGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenSec/GenSec.c:949:      memcpy (&(VendorGuidSect->SectionDefinitionGuid), VendorGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFfs/GenFfs.c:828:  memcpy (&FfsFileHeader.Name, &FileGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFv.c:234:  memcpy (&mFvDataInfo.FvFileSystemGuid, &mEfiFirmwareFileSystem2Guid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFv.c:478:      memcpy (&mFvDataInfo.FvFileSystemGuid, &mCapDataInfo.CapGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:230:      memcpy (&FvInfo->FvFileSystemGuid, &GuidValue, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:661:    memcpy ((UINT8 *)PadFile + CurFfsHeaderSize, ExtHeader, ExtHeader->ExtHeaderSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:1034:    memcpy (FvImage->CurrentFilePointer, FileBuffer, FileSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:1122:      memcpy (*VtfFileImage, FileBuffer, FileSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:1165:    memcpy (FvImage->CurrentFilePointer, FileBuffer, FileSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:1789:      memcpy ((UINT8 *) ((UINTN) FvImage->FileImage), ResetVector, sizeof (ResetVector));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:1932:  memcpy ((UINT8 *) ((UINTN) FvImage->FileImage), ResetVector, sizeof (ResetVector));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:2179:      memcpy (&FvExtHeader->FvName, &mFvDataInfo.FvNameGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:2181:    memcpy (&mFvDataInfo.FvNameGuid, &FvExtHeader->FvName, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:2191:    memcpy (&FvExtHeader->FvName, &mFvDataInfo.FvNameGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:2287:  memcpy (&FvHeader->FileSystemGuid, &mFvDataInfo.FvFileSystemGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:2476:    memcpy (&FvHeader->FileSystemGuid, &mEfiFirmwareFileSystem3Guid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:3016:    memcpy (&OrigImageContext, &ImageContext, sizeof (ImageContext));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:3287:    memcpy (&OrigImageContext, &ImageContext, sizeof (ImageContext));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:3765:    memcpy (&mCapDataInfo.CapGuid, &mDefaultCapsuleGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenFv/GenFvInternalLib.c:3803:  memcpy (&CapsuleHeader->CapsuleGuid, &mCapDataInfo.CapGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenVtf/GenVtf.c:639:    memcpy (&VersionInfo, (Buffer + 8), sizeof (UINT16));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenVtf/GenVtf.c:1096:  memcpy ((VOID *) RelativeAddress, (VOID *) CompStartAddress, sizeof (UINT64));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenVtf/GenVtf.c:1617:  memcpy (LocalBufferPtrToWrite, Buffer, (UINTN) DataSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenVtf/GenVtf.c:1669:  memcpy (&FileHeader->Name, &EfiFirmwareVolumeTopFileGuid, sizeof (EFI_GUID));
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenVtf/GenVtf.c:1779:  memcpy (LocalVtfBuffer, Buffer, FileSize);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenVtf/GenVtf.c:2667:      memcpy(SymFileName, OutFileName1, Index + 1);
VBox/Devices/EFI/Firmware/BaseTools/Source/C/GenVtf/GenVtf.c:2668:      memcpy(SymFileName + Index + 1, VTF_SYM_FILE, strlen(VTF_SYM_FILE));
Binary file VBox/Devices/EFI/Firmware/BaseTools/Source/Python/UPT/Dll/sqlite3.dll matches
VBox/Devices/EFI/Firmware/BaseTools/Conf/tools_def.template:3829:DEFINE GCC_IPF_SYMRENAME_FLAGS     = --redefine-sym memcpy=CopyMem
VBox/Devices/EFI/Firmware/MdeModulePkg/Library/LzmaCustomDecompressLib/Sdk/C/LzmaDec.c:807:            memcpy(p->tempBuf, src, inSize);
VBox/Devices/EFI/Firmware/MdeModulePkg/Library/LzmaCustomDecompressLib/Sdk/C/LzmaDec.c:895:    memcpy(dest, p->dic + dicPos, outSizeCur);
VBox/Devices/EFI/Firmware/MdeModulePkg/Library/LzmaCustomDecompressLib/UefiLzma.h:41:#define memcpy CopyMem
VBox/Devices/EFI/Firmware/StdLib/LibC/gdtoa/gdtoaimp.h:165: * #define NO_STRING_H to use private versions of memcpy.
VBox/Devices/EFI/Firmware/StdLib/LibC/gdtoa/gdtoaimp.h:491:#define Bcopy(x,y) memcpy(&x->sign,&y->sign,y->wds*sizeof(ULong) + 2*sizeof(int))
VBox/Devices/EFI/Firmware/StdLib/LibC/Uefi/compat.c:178:  memcpy(result, p, len);
VBox/Devices/EFI/Firmware/StdLib/LibC/Uefi/Devices/UefiShell/daShell.c:411:          (void) memcpy(&FileInfo->LastAccessTime, ET, sizeof(EFI_TIME));
VBox/Devices/EFI/Firmware/StdLib/LibC/Uefi/Devices/UefiShell/daShell.c:420:          (void) memcpy(&FileInfo->ModificationTime, ET, sizeof(EFI_TIME));
VBox/Devices/EFI/Firmware/StdLib/LibC/Uefi/Devices/UefiShell/daShell.c:656:        memcpy(NewFileInfo, OldFileInfo, sizeof(EFI_FILE_INFO));
VBox/Devices/EFI/Firmware/StdLib/LibC/Uefi/SysCalls.c:376:          (void)memcpy(&gMD->fdarray[temp], MyFd, sizeof(struct __filedes));
VBox/Devices/EFI/Firmware/StdLib/LibC/Uefi/SysCalls.c:474:        (void)memcpy(&gMD->fdarray[fildes2],      // Duplicate fildes into fildes2
VBox/Devices/EFI/Firmware/StdLib/LibC/Locale/aliasname.c:120:  memcpy(buf, p, resultlen);
VBox/Devices/EFI/Firmware/StdLib/LibC/Locale/setlocale.c:189:        (void)memcpy(new_categories[i], locale, len);
VBox/Devices/EFI/Firmware/StdLib/LibC/Locale/multibyte_Utf8.c:423:    memcpy(Dest, Buff, NumInBuff);
VBox/Devices/EFI/Firmware/StdLib/LibC/Math/Math.inf:98:# such as memcpy(), can be resolved.
VBox/Devices/EFI/Firmware/StdLib/LibC/String/String.inf:63:# such as memcpy(), can be resolved.
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Comparison.c:100:    (void)memcpy(Dest, Src, copysize);
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:22:/** Do not define memcpy for IPF+GCC or ARM+GCC builds.
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:23:    For IPF, using a GCC compiler, the memcpy function is converted to
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:25:    For ARM, the memcpy function is provided by the CompilerIntrinsics library.
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:28:/** The memcpy function copies n characters from the object pointed to by s2
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:33:    @return   The memcpy function returns the value of s1.
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:36:memcpy(void * __restrict s1, const void * __restrict s2, size_t n)
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:49:    This is a version of memcpy that is guaranteed to work when s1 and s2
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:50:    overlap.  Since our implementation of memcpy already handles overlap,
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:51:    memmove can be identical to memcpy.
VBox/Devices/EFI/Firmware/StdLib/LibC/String/Copying.c:144:  memcpy(copy, str, len);
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/fgets.c:108:      (void)memcpy((void *)s, (void *)p, len);
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/fgets.c:115:    (void)memcpy((void *)s, (void *)p, len);
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/fparseln.c:183:    (void) memcpy(buf + len, ptr, s);
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/fgetstr.c:155:    (void)memcpy((void *)(fp->_lb._base + off), (void *)fp->_p,
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/fgetstr.c:169:    (void)memcpy((void *)(fp->_lb._base + off), (void *)fp->_p,
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/fread.c:84:    (void)memcpy((void *)p, (void *)fp->_p, (size_t)r);
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/fread.c:95:  (void)memcpy((void *)p, (void *)fp->_p, resid);
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/fvwrite.c:88:#define COPY(n)   (void)memcpy((void *)fp->_p, (void *)p, (size_t)(n))
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/ungetc.c:93:  /* no overlap (hence can use memcpy) because we doubled the size */
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/ungetc.c:94:  (void)memcpy((void *)(p + i), (void *)p, (size_t)i);
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/tmpfile.c:68:  (void)memcpy(buf, _PATH_TMP, sizeof(_PATH_TMP) - 1);
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/tmpfile.c:69:  (void)memcpy(buf + sizeof(_PATH_TMP) - 1, TRAILER, sizeof(TRAILER));
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/vfwscanf.c:419:              memcpy(mbp, mbbuf,
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/vfwscanf.c:482:              memcpy(mbp, mbbuf,
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/vfwscanf.c:544:              memcpy(mbp, mbbuf,
VBox/Devices/EFI/Firmware/StdLib/LibC/Stdio/vfwprintf.c:1952:    memcpy(newtable, oldtable, oldsize * sizeof(enum typeid));
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/getaddrinfo.c:404:		memcpy(pai, hints, sizeof(*pai));
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/getaddrinfo.c:880:	memcpy(ai, pai, sizeof(struct addrinfo));
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/getaddrinfo.c:888:	memcpy(p + afd->a_off, addr, (size_t)afd->a_addrlen);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/getaddrinfo.c:1218:				memcpy(&in6, cp, IN6ADDRSZ);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/ns_print.c:751:  memcpy(*buf, src, len);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/ns_name.c:306:			memcpy(dstp, srcp, n);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/ns_name.c:433:		memcpy(dstp, srcp, n + 1);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/getnameinfo.c:396:		memcpy(host + numaddrlen + 1, zonebuf,
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/res_update.c:351:            memcpy(cp1, cp, 5*INT32SZ);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/res_update.c:366:            memcpy(zptr->z_soardata, soardata, rdatasize);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/res_update.c:460:                memcpy(&zptr->z_ns[j].nsaddr1.s_addr, cp,
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/gethostnamadr.c:206:		memcpy(result, hp, sizeof(struct hostent));
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/sethostname.c:99:    memcpy ( pName, name, namelen );
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/res_mkupdate.c:335:            memcpy(cp, rrecp->r_data, rrecp->r_size);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/inet_pton.c:156:	memcpy(dst, tmp, NS_INADDRSZ);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/inet_pton.c:255:	memcpy(dst, tmp, NS_IN6ADDRSZ);
VBox/Devices/EFI/Firmware/StdLib/BsdSocketLib/res_mkquery.c:201:            memcpy(cp, data, datalen);
VBox/Devices/EFI/Firmware/StdLib/Include/Ipf/machine/loadfile_machdep.h:85:#define BCOPY(s, d, c)		memcpy((void *)LOADADDR(d), (void *)(s), (c))
VBox/Devices/EFI/Firmware/StdLib/Include/string.h:21:      bcopy(a,b,c)    ( memcpy((void *)b, (const void *)a, (size_t)c))
VBox/Devices/EFI/Firmware/StdLib/Include/string.h:33:      void     *memcpy      (void * __restrict s1, const void * __restrict s2, size_t n);
VBox/Devices/EFI/Firmware/StdLib/Include/string.h:100:/** The memcpy function copies N characters from the object pointed to by Src
VBox/Devices/EFI/Firmware/StdLib/Include/string.h:108:    @return   The memcpy function returns the value of Dest.
VBox/Devices/EFI/Firmware/StdLib/Include/string.h:110:void     *memcpy(void * __restrict Dest, const void * __restrict Src, size_t N);
VBox/Devices/EFI/Firmware/StdLib/Include/string.h:469:#define bcopy(a,b,c) ( memcpy((void *)b, (const void *)a, (size_t)c))
VBox/Devices/EFI/Firmware/StdLib/PosixLib/Gen/readdir.c:116:      memcpy(entry, dp, (size_t)_DIRENT_SIZE(dp));
VBox/Devices/EFI/Firmware/StdLib/PosixLib/Gen/readdir.c:122:      memcpy(entry, dp, (size_t)_DIRENT_SIZE(dp));
VBox/Devices/EFI/Firmware/StdLib/PosixLib/Gen/dirname.c:88:      memcpy(result, path, len);
VBox/Devices/EFI/DevEFI.cpp:525:        memcpy(pThis->NVRAM.VarOpBuf.szName, pEfiVar->szName, pEfiVar->cchName); /* no need for + 1. */
VBox/Devices/EFI/DevEFI.cpp:528:        memcpy(pThis->NVRAM.VarOpBuf.abValue, pEfiVar->abValue, pEfiVar->cbValue);
VBox/Devices/EFI/DevEFI.cpp:658:            memcpy(pEfiVar->abValue, pThis->NVRAM.VarOpBuf.abValue, pEfiVar->cbValue);
VBox/Devices/EFI/DevEFI.cpp:680:            memcpy(pEfiVar->szName, pThis->NVRAM.VarOpBuf.szName, pEfiVar->cchName); /* The buffer is zeroed, so skip '\0'. */
VBox/Devices/EFI/DevEFI.cpp:683:            memcpy(pEfiVar->abValue, pThis->NVRAM.VarOpBuf.abValue, pEfiVar->cbValue);
VBox/Devices/EFI/DevEFI.cpp:2254:    memcpy(&pThis->aUuid, &uuid, sizeof pThis->aUuid);
VBox/Devices/EFI/DevFlash.cpp:501:        memcpy(pThis->pbFlash, aHdrBegin, sizeof(aHdrBegin));
VBox/Devices/EFI/DevSmc.cpp:499:            memcpy(pThis->szOsk0And1, g_abOsk0And1, sizeof(pThis->szOsk0And1) - 1);
VBox/Devices/EFI/DevSmc.cpp:589:    memcpy(pCurKey->Value.ab, pszSrc, 32);
VBox/Devices/Serial/DrvNamedPipe.cpp:467:            memcpy(pvBuf, &pThis->abBufRead[0], cbRead);
VBox/Devices/Serial/DrvNamedPipe.cpp:525:            memcpy(&pThis->abBufWrite[0], pvBuf, cbWrite);
VBox/Devices/Network/DrvNAT.cpp:454:                memcpy((uint8_t *)pvSeg + cbHdrs, pbFrame + offPayload, cbPayload);
VBox/Devices/Network/DrvNAT.cpp:461:                memcpy((uint8_t *)pvSeg, pvSegFrame, cbSegFrame);
VBox/Devices/Network/DevINIP.cpp:208:                        memcpy(pbBuf, q->payload, q->len);
VBox/Devices/Network/DevINIP.cpp:254:    memcpy(netif->hwaddr, &g_pDevINIPData->MAC, sizeof(g_pDevINIPData->MAC));
VBox/Devices/Network/DevINIP.cpp:368:            memcpy(q->payload, pbBuf, RT_MIN(cb, q->len));
VBox/Devices/Network/DevINIP.cpp:421:        memcpy(&ipaddr, &ip, sizeof(ipaddr));
VBox/Devices/Network/DevINIP.cpp:431:        memcpy(&netmask, &ip, sizeof(netmask));
VBox/Devices/Network/DevINIP.cpp:449:        memcpy(&gw, &ip, sizeof(gw));
VBox/Devices/Network/DevINIP.cpp:501:    memcpy(pMac, pThis->MAC.au8, sizeof(RTMAC));
VBox/Devices/Network/slirp/libalias/alias_proxy.c:462:        memcpy(p, buffer, slen);
VBox/Devices/Network/slirp/libalias/alias_proxy.c:523:        memcpy(ptr + OPTION_LEN_BYTES, ptr, ntohs(pip->ip_len) - 20);
VBox/Devices/Network/slirp/libalias/alias_proxy.c:528:        memcpy(&option[2], (u_char *) & pip->ip_dst, 4);
VBox/Devices/Network/slirp/libalias/alias_proxy.c:531:        memcpy(&option[6], (u_char *) & tc->th_sport, 2);
VBox/Devices/Network/slirp/libalias/alias_proxy.c:533:        memcpy(ptr, option, 8);
VBox/Devices/Network/slirp/libalias/alias_smedia.c:266:    memcpy(newdata, data, pos);
VBox/Devices/Network/slirp/libalias/alias_smedia.c:275:        memcpy(port_newdata, port_data, pos + 1);
VBox/Devices/Network/slirp/libalias/alias_smedia.c:369:                    memcpy(port_newdata, stemp, strlen(stemp));
VBox/Devices/Network/slirp/libalias/alias_smedia.c:378:                        memcpy(port_newdata, stemp, strlen(stemp));
VBox/Devices/Network/slirp/libalias/alias_smedia.c:398:    memcpy(port_newdata, port_data, port_dlen);
VBox/Devices/Network/slirp/libalias/alias_smedia.c:404:    memcpy(data, newdata, new_dlen);
VBox/Devices/Network/slirp/libalias/alias_smedia.c:443:        memcpy(&msg_id, work, 2);
VBox/Devices/Network/slirp/libalias/alias_smedia.c:445:        memcpy(&msg_len, work, 2);
VBox/Devices/Network/slirp/libalias/alias_smedia.c:452:            memcpy(&port, work, 2);
VBox/Devices/Network/slirp/libalias/alias_smedia.c:462:                memcpy(work, &alias_port, 2);
VBox/Devices/Network/slirp/libalias/alias_irc.c:434:        memcpy(sptr + copyat, newpacket, iCopy);
VBox/Devices/Network/slirp/hostres.c:502:    memcpy(&qtype, &res->buf[off], sizeof(qtype));
VBox/Devices/Network/slirp/hostres.c:506:    memcpy(&qclass, &res->buf[off], sizeof(qclass));
VBox/Devices/Network/slirp/hostres.c:948:    memcpy(&res->buf[rdlpos], &rdlength, sizeof(rdlength));
VBox/Devices/Network/slirp/hostres.c:1032:        memcpy(&buf[wr], part, plen); /* label text */
VBox/Devices/Network/slirp/hostres.c:1171:    memcpy(&res->buf[res->end], p, size);
VBox/Devices/Network/slirp/hostres.c:1223:        memcpy(buf, &l->buf[l->off + 1], llen);
VBox/Devices/Network/slirp/bsd/kern/uipc_mbuf.c:1246:		memcpy(mtod(m, caddr_t) + m->m_len, mtod(n, caddr_t),
VBox/Devices/Network/slirp/bsd/kern/uipc_mbuf.c:2083:				memcpy(mtod(mprev, caddr_t) + mprev->m_len,
VBox/Devices/Network/slirp/bsd/kern/uipc_mbuf.c:2119:			memcpy(mtod(mprev, caddr_t) + mprev->m_len,
VBox/Devices/Network/slirp/bsd/kern/uipc_mbuf.c:2195:			memcpy(mtod(n, caddr_t), mtod(m, caddr_t) + off, cc);
VBox/Devices/Network/slirp/slirp.h:412:# define bcopy(src, dst, len) memcpy((dst), (src), (len))
VBox/Devices/Network/slirp/ip_input.c:683:    memcpy(opts, opts  + olen, (unsigned)i);
VBox/Devices/Network/slirp/ip_output.c:78:        memcpy(ether, broadcast_ethaddr, ETH_ALEN);
VBox/Devices/Network/slirp/ip_output.c:189:        memcpy(eh->h_source, eth_dst, ETH_ALEN);
VBox/Devices/Network/slirp/ip_output.c:325:                memcpy(eh->h_source, eth_dst, ETH_ALEN);
VBox/Devices/Network/slirp/bootp.c:241:    memcpy(eh->h_source, bp->bp_hwaddr, ETH_ALEN); /* XXX: if_encap just swap source with dest */
VBox/Devices/Network/slirp/bootp.c:257:    memcpy(rbp->bp_hwaddr, bp->bp_hwaddr, 6);
VBox/Devices/Network/slirp/bootp.c:259:    memcpy(rbp->bp_vend, rfc1533_cookie, 4); /* cookie */
VBox/Devices/Network/slirp/bootp.c:312:        memcpy(&be[1], (pvalue), (len));                        \
VBox/Devices/Network/slirp/bootp.c:319:        memcpy(q, (pvalue), (len));                             \
VBox/Devices/Network/slirp/bootp.c:528:               memcpy(bc->macaddr, bp->bp_hwaddr, ETH_ALEN);
VBox/Devices/Network/slirp/bootp.c:574:            memcpy(bc->macaddr, bp->bp_hwaddr, ETH_ALEN);
VBox/Devices/Network/slirp/bootp.c:613:            memcpy(bc->macaddr, bp->bp_hwaddr, ETH_ALEN);
VBox/Devices/Network/slirp/bootp.c:936:                memcpy(ether, bootp_clients[i].macaddr, ETH_ALEN);
VBox/Devices/Network/slirp/sbuf.c:269:        memcpy(to, from, len);
VBox/Devices/Network/slirp/sbuf.c:277:        memcpy(to, from, off);
VBox/Devices/Network/slirp/sbuf.c:280:            memcpy(to+off, sb->sb_data, len);
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:170:        memcpy(data, req->byte, req->nbyte); /* coping initial req */
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:260:    memcpy(&req->client, &fromaddr, sizeof(struct sockaddr_in));
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:261:    memcpy(&req->clientid, &buf[0], 2);
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:277:    memcpy(&buf[0], &req->id, 2);
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:362:        memcpy(&req->client, &fromaddr, sizeof(struct sockaddr_in));
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:363:        memcpy(&req->clientid, &buf[0], 2);
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:375:        memcpy(req->byte, buf, byte); /* copying original request */
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:404:    memcpy(&buf[0], &req->id, 2);
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:506:    memcpy(&buf[0], &query->clientid, 2);
VBox/Devices/Network/slirp/dnsproxy/dnsproxy.c:570:    memcpy(&buf[0], &query->clientid, 2);
VBox/Devices/Network/slirp/tcp_output.c:324:            memcpy((caddr_t)(opt + 2), (caddr_t)&mss, sizeof(mss));
VBox/Devices/Network/slirp/tcp_output.c:510:    memcpy((caddr_t)ti, &tp->t_template, sizeof (struct tcpiphdr));
VBox/Devices/Network/slirp/tcp_output.c:541:        memcpy((caddr_t)(ti + 1), (caddr_t)opt, optlen);
VBox/Devices/Network/slirp/socket.c:545:        memcpy(buff, sb->sb_rptr, len);
VBox/Devices/Network/slirp/socket.c:552:            memcpy(buff + len, sb->sb_data, n);
VBox/Devices/Network/slirp/socket.c:1351:        memcpy(ip_copy, ip, old_ip_len);
VBox/Devices/Network/slirp/socket.c:1371:        memcpy(&icp->icmp_ip, ip_copy, old_ip_len);
VBox/Devices/Network/slirp/tftp.c:365:    memcpy(&pTftpSession->IpClientAddress, &pcTftpIpHeader->IPv4Hdr.ip_src, sizeof(pTftpSession->IpClientAddress));
VBox/Devices/Network/slirp/tcp_input.c:1841:                memcpy((char *) &mss, (char *) cp + 2, sizeof(mss));
VBox/Devices/Network/slirp/tcp_input.c:1860:                memcpy((char *) ts_val, (char *)cp + 2, sizeof(*ts_val));
VBox/Devices/Network/slirp/tcp_input.c:1862:                memcpy((char *) ts_ecr, (char *)cp + 6, sizeof(*ts_ecr));
VBox/Devices/Network/slirp/tcp_input.c:1904:            memcpy(sp, cp+1, (unsigned)(m->m_len - cnt - 1));
VBox/Devices/Network/slirp/slirp.c:1285:    memcpy(pEtherHeaderResponse->h_source, pcu8EtherSource, ETH_ALEN);
VBox/Devices/Network/slirp/slirp.c:1295:    memcpy(pARPHeaderResponse->ar_sha, special_ethaddr, ETH_ALEN);
VBox/Devices/Network/slirp/slirp.c:1309:    memcpy(pARPHeaderResponse->ar_sip, pcARPHeaderSource->ar_tip, 4);
VBox/Devices/Network/slirp/slirp.c:1310:    memcpy(pARPHeaderResponse->ar_tha, pcARPHeaderSource->ar_sha, ETH_ALEN);
VBox/Devices/Network/slirp/slirp.c:1311:    memcpy(pARPHeaderResponse->ar_tip, pcARPHeaderSource->ar_sip, 4);
VBox/Devices/Network/slirp/slirp.c:1447:        memcpy(eh->h_dest, eh->h_source, ETH_ALEN);
VBox/Devices/Network/slirp/slirp.c:1448:        memcpy(eh->h_source, special_ethaddr, ETH_ALEN);
VBox/Devices/Network/slirp/slirp.c:1806:            memcpy(ether, ac->ether, ETH_ALEN);
VBox/Devices/Network/slirp/slirp.c:1877:    memcpy(ahdr->ar_sha, special_ethaddr, ETH_ALEN);
VBox/Devices/Network/slirp/slirp.c:1906:            memcpy(ac->ether, mac, ETH_ALEN);
VBox/Devices/Network/slirp/slirp.c:1929:    memcpy(ac->ether, ether, ETH_ALEN);
VBox/Devices/Network/slirp/ip_icmp.c:701:    memcpy(payload, oip, olen);
VBox/Devices/Network/DevE1000.cpp:660:            memcpy(eeprom.m_au16Data, macAddr.au16, sizeof(macAddr.au16));
VBox/Devices/Network/DevE1000.cpp:700:            memcpy(pMac->au16, eeprom.m_au16Data, sizeof(pMac->au16));
VBox/Devices/Network/DevE1000.cpp:1643:    memcpy(pThis->aRecAddr.au32, pThis->macConfigured.au8,
VBox/Devices/Network/DevE1000.cpp:2366:            memcpy(rxPacket, pvBuf, 12); /* Copy src and dst addresses */
VBox/Devices/Network/DevE1000.cpp:2368:            memcpy(rxPacket + 12, (uint8_t*)pvBuf + 16, cb - 16); /* Copy the rest of the packet */
VBox/Devices/Network/DevE1000.cpp:2377:        memcpy(rxPacket, pvBuf, cb);
VBox/Devices/Network/DevE1000.cpp:4181:                memcpy(pThis->CTX_SUFF(pTxSg)->aSegs[0].pvSeg, pThis->aTxPacketFallback, pThis->u16TxPktLen);
VBox/Devices/Network/DevE1000.cpp:4285:                memcpy(pThis->CTX_SUFF(pTxSg)->aSegs[0].pvSeg, pThis->aTxPacketFallback, pThis->u16TxPktLen);
VBox/Devices/Network/DevE1000.cpp:5892:    memcpy(pv, &u32, cb);
VBox/Devices/Network/DevPCNet.cpp:1177:    memcpy((char *)pvPhys, pvBuf, cbBuf);
VBox/Devices/Network/DevPCNet.cpp:1858:            memcpy(src, buf, cbToRecv);
VBox/Devices/Network/DevPCNet.cpp:3246:    memcpy(pThis->aPROM, &pThis->MacConfigured, sizeof(pThis->MacConfigured));
VBox/Devices/Network/DevPCNet.cpp:4581:    memcpy(pMac, pThis->aPROM, sizeof(*pMac));
VBox/Devices/Network/lwip-new/src/netif/ethernetif.c:191:       * This does not necessarily have to be a memcpy, you can also preallocate
VBox/Devices/Network/lwip-new/src/include/lwip/opt.h:84:#define MEMCPY(dst,src,len)             memcpy(dst,src,len)
VBox/Devices/Network/lwip-new/src/include/lwip/opt.h:89: * call to memcpy() if the length is known at compile time and is small.
VBox/Devices/Network/lwip-new/src/include/lwip/opt.h:92:#define SMEMCPY(dst,src,len)            memcpy(dst,src,len)
VBox/Devices/Network/lwip-new/src/include/lwip/opt.h:1214: * Beware that this might involve CPU-memcpy before transmitting that would not
VBox/Devices/Network/lwip-new/src/include/lwip/opt.h:1510: * WARNING: Adds a memcpy for every packet if passing to more than one pcb!
VBox/Devices/Network/lwip-new/CHANGELOG:2067:    memcpy. 2 Defines are created: MEMCPY() for normal memcpy, SMEMCPY() for
VBox/Devices/Network/lwip-new/CHANGELOG:2069:    call. Also replaced all calls to memcpy() with calls to (S)MEMCPY().
VBox/Devices/Network/lwip-new/CHANGELOG:2177:  * api_lib.c: Use memcpy in netbuf_copy_partial.
VBox/Devices/Network/lwip-new/UPGRADING:114:    Define LWIP_CHKSUM_COPY to a memcpy-like function that returns the checksum
VBox/Devices/Network/SrvIntNetR0.cpp:498:        memcpy((uint8_t *)pSG->aSegs[iSeg].pv + off, pvBuf, cb);
VBox/Devices/Network/SrvIntNetR0.cpp:502:        memcpy((uint8_t *)pSG->aSegs[iSeg].pv + off, pvBuf, cbCanCopy);
VBox/Devices/Network/SrvIntNetR0.cpp:513:            memcpy(pSG->aSegs[iSeg].pv, pvBuf, cbCanCopy);
VBox/Devices/Network/SrvIntNetR0.cpp:541:        memcpy((uint8_t *)pSG->aSegs[0].pv + off, pvBuf, cb);
VBox/Devices/Network/SrvIntNetR0.cpp:603:        memcpy(pvBuf, (uint8_t const *)pSG->aSegs[iSeg].pv + off, cb);
VBox/Devices/Network/SrvIntNetR0.cpp:607:        memcpy(pvBuf, (uint8_t const *)pSG->aSegs[iSeg].pv + off, cbCanCopy);
VBox/Devices/Network/SrvIntNetR0.cpp:618:            memcpy(pvBuf, (uint8_t const *)pSG->aSegs[iSeg].pv, cbCanCopy);
VBox/Devices/Network/SrvIntNetR0.cpp:646:        memcpy(pvBuf, (uint8_t const *)pSG->aSegs[0].pv + off, cb);
VBox/Devices/Network/SrvIntNetR0.cpp:1388:    memcpy(pbEntry, pAddr, cbAddr);
VBox/Devices/Network/SrvIntNetR0.cpp:1468:    memcpy(pbEntry, pAddr, pCache->cbAddress);
VBox/Devices/Network/SrvIntNetR0.cpp:6378:    memcpy(pNetwork->szName, pszNetwork, cchName);          /* '\0' at courtesy of alloc. */
VBox/Devices/Network/DevEEPROM.cpp:36:        memcpy(this->m_au16Data, pu16Initial, sizeof(this->m_au16Data));
VBox/Devices/Network/testcase/tstIntNet-1.cpp:265:    memcpy(&pDhcpMsg->CHAddr[0], pSrcMac, sizeof(*pSrcMac));
VBox/Devices/Network/testcase/tstIntNet-1.cpp:287:    memcpy(pbOpt, pSrcMac, sizeof(*pSrcMac));
VBox/Devices/Network/testcase/tstIntNet-1.cpp:292:    memcpy(pbOpt, "tstIntNet-1", sizeof("tstIntNet-1") - 1);
VBox/Devices/Network/DevVirtioNet.cpp:440:    memcpy(data, (uint8_t *)&pThis->config + offCfg, cb);
VBox/Devices/Network/DevVirtioNet.cpp:451:            memcpy((uint8_t *)&pThis->config + offCfg, data,
VBox/Devices/Network/DevVirtioNet.cpp:455:    memcpy((uint8_t *)&pThis->config + offCfg, data, cb);
VBox/Devices/Network/DevVirtioNet.cpp:1037:    memcpy(pMac, pThis->config.mac.au8, sizeof(RTMAC));
VBox/Devices/Network/DevVirtioNet.cpp:2111:    memcpy(pThis->config.mac.au8, pThis->macConfigured.au8, sizeof(pThis->config.mac.au8));
VBox/Devices/Input/UsbMouse.cpp:1899:                    memcpy(&pUrb->abData[sizeof(VUSBSETUP) + 1],
VBox/Devices/Input/UsbMouse.cpp:2008:                                memcpy(&pUrb->abData[sizeof(*pSetup)], pDesc, cbCopy);
VBox/Devices/Input/UsbMouse.cpp:2039:                                memcpy(&pUrb->abData[sizeof(*pSetup)], pDesc, cbCopy);
VBox/Devices/Input/UsbMouse.cpp:2077:                        memcpy(&pUrb->abData[sizeof(*pSetup)], &wRet, sizeof(wRet));
VBox/Devices/Input/UsbMouse.cpp:2085:                            memcpy(&pUrb->abData[sizeof(*pSetup)], &wRet, sizeof(wRet));
VBox/Devices/Input/UsbMouse.cpp:2097:                            memcpy(&pUrb->abData[sizeof(*pSetup)], &wRet, sizeof(wRet));
VBox/Devices/Input/UsbKbd.cpp:936:                                memcpy(&pUrb->abData[sizeof(*pSetup)], &g_UsbHidIfHidDesc, cbCopy);
VBox/Devices/Input/UsbKbd.cpp:948:                                memcpy(&pUrb->abData[sizeof(*pSetup)], &g_UsbHidReportDesc, cbCopy);
VBox/Devices/Input/UsbKbd.cpp:983:                        memcpy(&pUrb->abData[sizeof(*pSetup)], &wRet, sizeof(wRet));
VBox/Devices/Input/UsbKbd.cpp:991:                            memcpy(&pUrb->abData[sizeof(*pSetup)], &wRet, sizeof(wRet));
VBox/Devices/Input/UsbKbd.cpp:1003:                            memcpy(&pUrb->abData[sizeof(*pSetup)], &wRet, sizeof(wRet));
VBox/Devices/Bus/DevPciIch9.cpp:1454:            memcpy(pDev->Int.s.pMsixPageR3, pvMsixPage, pDev->Int.s.cbMsixRegion);
VBox/Devices/Audio/AudioMixBuffer.cpp:188:        memcpy(paFrameBuf, &pMixBuf->pFrames[pMixBuf->offRead], sizeof(PDMAUDIOFRAME) * cRead);
VBox/Devices/Audio/DrvHostDSound.cpp:1347:        memcpy(&pDev->Guid, pGUID, sizeof(GUID));
VBox/Devices/Audio/DrvHostDSound.cpp:1524:            memcpy(pCfg, &Cfg, sizeof(PDMAUDIOBACKENDCFG));
VBox/Devices/Audio/DrvHostDSound.cpp:1646:            memcpy(pvChunk, pbBuf, cbChunk);
VBox/Devices/Audio/DrvHostDSound.cpp:1816:            memcpy((uint8_t *)pvBuf + cbReadTotal, pvChunk, cbChunk);
VBox/Devices/Audio/DrvHostDSound.cpp:1989:                            memcpy(pvBuf, pv1, cb1);
VBox/Devices/Audio/DrvHostDSound.cpp:1992:                                memcpy((uint8_t *)pvBuf + cb1, pv2, cb2);
VBox/Devices/Audio/DrvHostDSound.cpp:2085:                            memcpy(pv1, pvBuf, cb1);
VBox/Devices/Audio/DrvHostDSound.cpp:2088:                                memcpy(pv2, (uint8_t *)pvBuf + cb1, cb2);
VBox/Devices/Audio/HDAStream.cpp:692:                memcpy(pvDst, (uint8_t *)pvBuf + cbWrittenTotal, cbDst);
VBox/Devices/Audio/HDAStream.cpp:939:                memcpy(abChunk + cbDMAWritten, pvBuf, cbBuf);
VBox/Devices/Audio/HDAStream.cpp:991:                            memcpy(pvBuf, abChunk + cbDMARead, cbBuf);
VBox/Devices/Audio/HDAStream.cpp:1025:                            memcpy(pvBuf, abChunk + cbDMARead, cbBuf);
VBox/Devices/Audio/DrvHostDebugAudio.cpp:232:        memcpy(pStreamDbg->Out.auPlayBuffer, (uint8_t *)pvBuf + cbWrittenTotal, cbChunk);
VBox/Devices/Audio/DrvHostALSAAudio.cpp:1151:            memcpy(pvBuf, pStreamALSA->pvBuf, cbRead);
VBox/Devices/Audio/DrvHostALSAAudio.cpp:1210:        memcpy(pStreamALSA->pvBuf, pvBuf, cbToWrite);
VBox/Devices/Audio/DrvAudioCommon.cpp:291:        memcpy(pDevDup, pDev, sizeof(PDMAUDIODEVICE));
VBox/Devices/Audio/DrvAudioCommon.cpp:296:            memcpy(pDevDup->pvData, pDev->pvData, pDevDup->cbData);
VBox/Devices/Audio/DrvAudioCommon.cpp:895:    memcpy(&pCfg->Props, pProps, sizeof(PDMAUDIOPCMPROPS));
VBox/Devices/Audio/DrvAudioCommon.cpp:955:    memcpy(pDstCfg, pSrcCfg, sizeof(PDMAUDIOSTREAMCFG));
VBox/Devices/Audio/DrvHostPulseAudio.cpp:602:        memcpy(pBufAttr, pBufAttrObtained, sizeof(pa_buffer_attr));
VBox/Devices/Audio/DrvHostPulseAudio.cpp:926:            memcpy((uint8_t *)pvBuf + cbReadTotal, pStreamPA->pu8PeekBuf + pStreamPA->offPeekBuf, cbToWrite);
VBox/Devices/Audio/DrvHostPulseAudio.cpp:1218:                memcpy(pCfg, &Cfg, sizeof(PDMAUDIOBACKENDCFG));
VBox/Devices/Audio/HDAStreamChannel.cpp:102:        memcpy(pvDst, pvSrc, pChan->cbFrame);
VBox/Devices/Audio/AudioMixer.cpp:437:    memcpy(&pMixer->VolMaster, pVol, sizeof(PDMAUDIOVOLUME));
VBox/Devices/Audio/AudioMixer.cpp:1157:            memcpy(pvBuf, pvMixBuf, cbRead);
VBox/Devices/Audio/AudioMixer.cpp:1348:    memcpy(pPCMProps, &pSink->PCMProps, sizeof(PDMAUDIOPCMPROPS));
VBox/Devices/Audio/AudioMixer.cpp:1382:    memcpy(&pSink->PCMProps, pPCMProps, sizeof(PDMAUDIOPCMPROPS));
VBox/Devices/Audio/AudioMixer.cpp:1424:    memcpy(&pSink->Volume, pVol, sizeof(PDMAUDIOVOLUME));
VBox/Devices/Audio/DevHDA.cpp:2883:                    memcpy(pvChunk, pbBuf, cbChunk);
VBox/Devices/Audio/DrvHostOSSAudio.cpp:465:            memcpy((uint8_t *)pvBuf + offWrite, pStreamOSS->pvBuf, cbRead);
VBox/Devices/Audio/DrvHostOSSAudio.cpp:631:        memcpy(&ossReq.Props, &pCfgReq->Props, sizeof(PDMAUDIOPCMPROPS));
VBox/Devices/Audio/DrvHostOSSAudio.cpp:641:            memcpy(&pCfgAcq->Props, &ossAcq.Props, sizeof(PDMAUDIOPCMPROPS));
VBox/Devices/Audio/DrvHostOSSAudio.cpp:692:        memcpy(&reqStream.Props, &pCfgReq->Props, sizeof(PDMAUDIOPCMPROPS));
VBox/Devices/Audio/DrvHostOSSAudio.cpp:700:            memcpy(&pCfgAcq->Props, &obtStream.Props, sizeof(PDMAUDIOPCMPROPS));
VBox/Devices/Audio/DrvHostOSSAudio.cpp:881:            memcpy(pStreamOSS->pvBuf, pvBuf, cbWritten);
VBox/Devices/Audio/DrvHostCoreAudio.cpp:436:    memcpy(&pConvCbCtx->asbdSrc, pASBDSrc, sizeof(AudioStreamBasicDescription));
VBox/Devices/Audio/DrvHostCoreAudio.cpp:437:    memcpy(&pConvCbCtx->asbdDst, pASBDDst, sizeof(AudioStreamBasicDescription));
VBox/Devices/Audio/DrvHostCoreAudio.cpp:1384:        memcpy((UInt8 *)pvDst, pvSrc + cbWritten, cbToWrite);
VBox/Devices/Audio/DrvHostCoreAudio.cpp:1461:            memcpy((UInt8 *)pvDst + cbRead, pvSrc, cbToRead);
VBox/Devices/Audio/DrvHostCoreAudio.cpp:1965:                memcpy((uint8_t *)pvBuf + cbReadTotal, pvChunk, cbChunk);
VBox/Devices/Audio/DrvHostCoreAudio.cpp:2054:        memcpy(pvChunk, (uint8_t *)pvBuf + cbWrittenTotal, cbChunk);
VBox/Devices/Parallel/DrvHostParallel.cpp:627:            memcpy(pThis->abDataBuf, pvBuf, cbToWrite);
VBox/Devices/Parallel/DrvHostParallel.cpp:679:            memcpy(pvBuf, pThis->abDataBuf, cbToRead);
VBox/Devices/testcase/tstDeviceVMM.cpp:293:                    memcpy(pszString, pCfgItem->pszVal, cchVal);
VBox/Devices/testcase/tstDeviceVMMStubs.cpp:344:            memcpy(pszString, pszDef, cchDef);
VBox/Devices/testcase/tstDevice.cpp:253:    {"nocrt_memcpy",                   (PFNRT)memcpy},
VBox/Devices/Storage/DrvRamDisk.cpp:480:                            memcpy(pSegPost->pbSeg, pSeg->pbSeg + cbPreLeft + cbRange, cbPostLeft);
VBox/Devices/Storage/DrvHostBase-win.cpp:282:    memcpy(Req.spt.Cdb, pbCmd, Req.spt.CdbLength);
VBox/Devices/Storage/DrvHostBase-win.cpp:294:            memcpy(pbSense, Req.aSense, cbSense);
VBox/Devices/Storage/UsbMsd.cpp:890:    memcpy(&pReq->Cbw, pCbw, cbCopy);
VBox/Devices/Storage/UsbMsd.cpp:1696:            memcpy(&pReq->pbBuf[pReq->offBuf], &pUrb->abData[0], cbData);
VBox/Devices/Storage/UsbMsd.cpp:1762:            memcpy(&pUrb->abData[0], &pReq->pbBuf[pReq->offBuf], cbCopy);
VBox/Devices/Storage/UsbMsd.cpp:1891:                        memcpy(&pUrb->abData[sizeof(*pSetup)], &g_UsbMsdDeviceQualifier, cbCopy);
VBox/Devices/Storage/UsbMsd.cpp:1898:                        memcpy(&pUrb->abData[sizeof(*pSetup)], &g_UsbMsdBOS, cbCopy);
VBox/Devices/Storage/VSCSI/VSCSISense.cpp:46:        memcpy(pVScsiReq->pbSense, pVScsiSense->abSenseBuf, RT_MIN(sizeof(pVScsiSense->abSenseBuf), pVScsiReq->cbSense));
VBox/Devices/Storage/VSCSI/VSCSISense.cpp:61:        memcpy(pVScsiReq->pbSense, pVScsiSense->abSenseBuf, RT_MIN(sizeof(pVScsiSense->abSenseBuf), pVScsiReq->cbSense));
VBox/Devices/Storage/VSCSI/VSCSISense.cpp:77:        memcpy(pVScsiReq->pbSense, pVScsiSense->abSenseBuf, RT_MIN(sizeof(pVScsiSense->abSenseBuf), pVScsiReq->cbSense));
VBox/Devices/Storage/DevAHCI.cpp:3836:        memcpy(&cmdFis[0], &pAhciReq->cmdFis[0], sizeof(cmdFis));
VBox/Devices/Storage/DrvDiskIntegrity.cpp:643:                            memcpy(pSegPost->pbSeg, pSeg->pbSeg + cbPreLeft + cbRange, cbPostLeft);
VBox/Devices/Storage/DrvVD.cpp:1097:            memcpy(&In6Addr.sin6_addr, &ip6, sizeof(ip6));
VBox/Devices/Storage/DrvVD.cpp:1304:            memcpy(&pAddr->uAddr.IPv6, &u.Ipv6.sin6_addr, sizeof(RTNETADDRIPV6));
VBox/Devices/Storage/DrvVD.cpp:1341:            memcpy(&pAddr->uAddr.IPv6, &u.Ipv6.sin6_addr, sizeof(RTNETADDRIPV6));
VBox/Devices/Storage/DrvVD.cpp:1930:            memcpy(pvBuf, pThis->pbData + (off - pThis->offDisk), cbToCopy);
VBox/Devices/Storage/DrvVD.cpp:1946:                memcpy(pvBuf, pThis->pbData, cbRead);
VBox/Devices/Storage/DrvVD.cpp:2000:            memcpy(pvBuf, pThis->pbData + (off - pThis->offDisk), cbToCopy);
VBox/Devices/Storage/DrvVD.cpp:2016:                memcpy(pvBuf, pThis->pbData, cbRead);
VBox/Devices/Storage/DrvHostBase-darwin.cpp:259:        memcpy(&cdb[0], pbCmd, cbCmd);
VBox/Devices/Storage/DrvHostBase-darwin.cpp:300:            memcpy(pbSense, &SenseData, RT_MIN(sizeof(SenseData), cbSense));
VBox/Devices/Storage/VBoxSCSI.cpp:389:        memcpy(pbDst, pVBoxSCSI->pbBuf + pVBoxSCSI->iBuf, cbTransfer);
VBox/Devices/Storage/VBoxSCSI.cpp:438:        memcpy(pVBoxSCSI->pbBuf + pVBoxSCSI->iBuf, pbSrc, cbTransfer);
VBox/Devices/Storage/DrvHostBase-freebsd.cpp:94:            memcpy(pvBuf, &pDeviceCCB->cgd.inq_data, cbCopy);
VBox/Devices/Storage/DrvHostBase-freebsd.cpp:106:        memcpy(&pDeviceCCB->csio.cdb_io.cdb_bytes, pbCmd, cbCmd);
VBox/Devices/Storage/DrvHostBase-freebsd.cpp:145:                memcpy(pbSense, &pDeviceCCB->csio.sense_data,
VBox/Devices/Storage/DrvHostDVD.cpp:80:    memcpy(pThis->abATAPISense, pabATAPISense, RT_MIN(cbATAPISense, sizeof(pThis->abATAPISense)));
VBox/Devices/Storage/DrvHostDVD.cpp:127:            memcpy(pvBuf, &pThis->abATAPISense[0], RT_MIN(sizeof(pThis->abATAPISense), cbBuf));
VBox/Devices/Storage/DrvHostDVD.cpp:267:            memcpy(aATAPICmd, pbCdb, RT_MIN(cbCdb, ATAPI_PACKET_SIZE));
VBox/Devices/Storage/DrvHostDVD.cpp:411:        memcpy(pabSense, &pThis->abATAPISense[0], RT_MIN(cbSense, sizeof(pThis->abATAPISense)));
VBox/Devices/Storage/DevLsiLogicSCSI.cpp:2255:                memcpy(&pLsiReq->GuestRequest, pGuestReq, sizeof(MptRequestUnion));
VBox/Devices/Storage/DevLsiLogicSCSI.cpp:3931:    memcpy(pThis->VBoxSCSI.pbBuf, &ScsiInquiryData, 5);
VBox/Devices/Storage/DevBusLogic.cpp:1938:            memcpy(pReply->aFirmwareRevision, "07B", sizeof(pReply->aFirmwareRevision));
VBox/Devices/Storage/DevBusLogic.cpp:2638:    memcpy(pThis->VBoxSCSI.pbBuf, &ScsiInquiryData, 5);
VBox/Devices/Storage/DevBusLogic.cpp:2941:        memcpy(&CCBGuest, &pReq->CCBGuest, sizeof(CCBU));
VBox/Devices/Storage/DevBusLogic.cpp:3116:                memcpy(&pReq->CCBGuest, &CCBGuest, sizeof(CCBGuest));
VBox/Devices/Storage/DrvSCSI.cpp:607:        memcpy(paRanges, &paRangesVScsi[idxRangeStart], cRangesCopy * sizeof(RTRANGE));
VBox/Devices/Storage/DrvHostBase-solaris.cpp:179:    memcpy (usc.uscsi_cdb, pbCmd, usc.uscsi_cdblen);
VBox/Devices/Storage/DrvHostBase-linux.cpp:111:            memcpy(pThis->Os.pbDoubleBuffer, pvBuf, *pcbBuf);
VBox/Devices/Storage/DrvHostBase-linux.cpp:119:    memcpy(cgc.cmd, pbCmd, RT_MIN(CDROM_PACKET_SIZE, cbCmd));
VBox/Devices/Storage/DrvHostBase-linux.cpp:146:            memcpy(pvBuf, pThis->Os.pbDoubleBuffer, *pcbBuf);
VBox/Devices/Storage/DevATA.cpp:819:    memcpy(&pCtl->aAsyncIORequests[pCtl->AsyncIOReqHead], pReq, sizeof(*pReq));
VBox/Devices/Storage/DevATA.cpp:1796:    memcpy(s->abATAPISense, pabATAPISense, RT_MIN(cbATAPISense, sizeof(s->abATAPISense)));
VBox/Devices/Storage/DevATA.cpp:1909:                    memcpy(pbBuf, &abTmp[16], 2048);
VBox/Devices/Storage/DevATA.cpp:2062:        memcpy(aATAPICmd, s->aATAPICmd, ATAPI_PACKET_SIZE);
VBox/Devices/Storage/DevATA.cpp:2955:    memcpy(pbBuf, s->abATAPISense, RT_MIN(s->cbElementaryTransfer, sizeof(s->abATAPISense)));
VBox/Devices/Storage/DevATA.cpp:3710:    memcpy(s->aATAPICmd, s->CTX_SUFF(pbIOBuffer), ATAPI_PACKET_SIZE);
VBox/Devices/Storage/DevATA.cpp:4779: * Work for ataDataWrite & ataDataRead that copies data without using memcpy.
VBox/Devices/Storage/DevATA.cpp:5020:                    memcpy(pbDst, pbSrc, cbTransfer);
VBox/Devices/Storage/DevATA.cpp:5109:                    memcpy(pvDst, pbSrc, cbTransfer);
VBox/GuestHost/SharedClipboard/clipboard-helper.cpp:311:    memcpy((uint8_t *)pvDest + sizeof(BMFILEHEADER), pvSrc, cbSrc);
VBox/GuestHost/SharedClipboard/x11-clipboard.cpp:1250:    memcpy(pszDest, pszSrc, cbSrc);
VBox/GuestHost/SharedClipboard/x11-clipboard.cpp:1694:        memcpy(pchRes + cRes, psz, cch + 1);
VBox/GuestHost/SharedClipboard/x11-clipboard.cpp:1807:                        memcpy(pvDest, pDib, cbDibSize);
VBox/GuestHost/SharedClipboard/x11-clipboard.cpp:1847:                        memcpy(pvDest, pvSrc, cbSrc);
VBox/GuestHost/SharedClipboard/x11-clipboard.cpp:2372:            memcpy(g_completedBuf, pv, cb);
VBox/GuestHost/HGSMI/HGSMICommon.cpp:304:        memcpy(&header, (void *)HGSMIBufferHeaderFromPtr(pvBuffer), sizeof(header));
VBox/GuestHost/HGSMI/HGSMICommon.cpp:316:            memcpy(&tail, (void *)HGSMIBufferTailFromPtr(pvBuffer, header.u32DataSize), sizeof(tail));
VBox/GuestHost/OpenGL/util/mem.c:139:	(void) memcpy( dst, src, bytes );
VBox/GuestHost/OpenGL/util/libteac.c:21:#define crMemcpy(out,in,bytes) memcpy(out,in,bytes)
VBox/GuestHost/OpenGL/util/sortarray.cpp:358:    memcpy(pResult->pElements, pArray1->pElements, pArray1->cSize * sizeof (pArray1->pElements[0]));
VBox/GuestHost/OpenGL/util/udptcpip.c:660:	memcpy( (char *) &conn->remoteaddr.sin_addr, hp->h_addr,
VBox/GuestHost/OpenGL/util/compositor.cpp:140:        memcpy(pEntry->paSrcRects, pEntry->paDstUnstretchedRects, cRects * sizeof(*pEntry->paSrcRects));
VBox/GuestHost/OpenGL/util/compositor.cpp:173:        memcpy(pEntry->paDstRects, pEntry->paDstUnstretchedRects, cRects * sizeof(*pEntry->paDstUnstretchedRects));
VBox/GuestHost/OpenGL/util/compositor.cpp:401:            memcpy (paTranslatedRects, paRegions, sizeof(RTRECT) * cRegions);
VBox/GuestHost/OpenGL/util/compositor.cpp:554:            memcpy (paTranslatedRects, paRegions, sizeof(RTRECT) * cRegions);
VBox/GuestHost/OpenGL/util/blitter.cpp:104:        memcpy(pu8Dst, pu8Src, cbCopyRow);
VBox/GuestHost/OpenGL/util/blitter.cpp:418:        memcpy(&pBlitter->CurrentMural, pMural, sizeof (pBlitter->CurrentMural));
VBox/GuestHost/OpenGL/util/htable.cpp:73:        memcpy(pvNewData, pTbl->paData, sizeof (pTbl->paData[0]) * pTbl->cSize);
VBox/GuestHost/OpenGL/util/vreg.cpp:680:            memcpy(pRects, aRects, sizeof(RTRECT) * cRects);
VBox/GuestHost/OpenGL/util/vboxhgcm.c:1709:            memcpy(pvBuf, buf, len);
VBox/GuestHost/OpenGL/util/vboxhgsmi.c:809:            memcpy(pvBuf, buf, len);
VBox/GuestHost/OpenGL/state_tracker/state_teximage.c:1475:        /* just memcpy */
VBox/GuestHost/OpenGL/state_tracker/state_teximage.c:1537:        /* just memcpy */
VBox/GuestHost/OpenGL/state_tracker/state_teximage.c:1601:        /* just memcpy */
VBox/GuestHost/OpenGL/state_tracker/state_glsl.c:614:    /*that's not a bug, note the memcpy above*/
VBox/GuestHost/OpenGL/include/cr_server.h:572: * And removed extra memcpy done on blocked command arrival.
VBox/GuestHost/OpenGL/include/cr_server.h:574: * In the future we will extend CrHgsmi functionality to maintain texture data directly in CrHgsmi allocation to avoid extra memcpy-ing with PBO,
VBox/Installer/win/Stub/VBoxStub.cpp:442:    memcpy(pRec->szPath, pszPath, cchPath + 1);
VBox/Installer/win/InstallHelper/VBoxInstallHelper.cpp:1469:            memcpy(&netGuid, &GUID_DEVCLASS_NET, sizeof (GUID_DEVCLASS_NET));
VBox/Installer/win/MsiHack/MsiHack.cpp:615:            memcpy(pvBuffer, &pHandle->pbBuffer[pHandle->offFile], cbActually);
VBox/VMM/VMMR3/PDMUsb.cpp:368:            memcpy(szFilename, psz, cch);
VBox/VMM/VMMR3/TRPM.cpp:498:    memcpy(&pVM->trpm.s.aIdt[0], &g_aIdt[0], sizeof(pVM->trpm.s.aIdt));
VBox/VMM/VMMR3/TRPM.cpp:816:    memcpy(&pVM->trpm.s.aIdt[0], &g_aIdt[0], sizeof(pVM->trpm.s.aIdt));
VBox/VMM/VMMR3/TRPM.cpp:1202:    memcpy(&pVM->trpm.s.aIdt[iTrap], &g_aIdt[iTrap], sizeof(pVM->trpm.s.aIdt[0]));
VBox/VMM/VMMR3/PDMLdr.cpp:300:        memcpy(pModule->szName, pszName, cchName); /* memory is zero'd, no need to copy terminator :-) */
VBox/VMM/VMMR3/PDMLdr.cpp:301:        memcpy(pModule->szFilename, pszFilename, cchFilename);
VBox/VMM/VMMR3/PDMLdr.cpp:302:        memcpy(&pModule->szFilename[cchFilename], pszSuff, cchSuff);
VBox/VMM/VMMR3/PDMLdr.cpp:1117:    memcpy(pszRet, pszDir, cchDir);
VBox/VMM/VMMR3/PDMLdr.cpp:1119:    memcpy(pszRet + cchDir, pszFile, cchFile + 1);
VBox/VMM/VMMR3/PDMLdr.cpp:1121:        memcpy(pszRet + cchDir + cchFile, pszDefaultExt, cchDefaultExt + 1);
VBox/VMM/VMMR3/PDMLdr.cpp:1190:                            memcpy(pszRet, szPath, cchPath);
VBox/VMM/VMMR3/PDMLdr.cpp:1618:        memcpy(szSymbol, pszSymPrefix, cchSymPrefix);
VBox/VMM/VMMR3/PDMLdr.cpp:1687:                memcpy(&szSymbol[cchSymPrefix], pszCur, cchSym);
VBox/VMM/VMMR3/PGMMap.cpp:1419:                memcpy(pvDst, (char *)pvPage + (GCPtrSrc & PAGE_OFFSET_MASK), cb);
VBox/VMM/VMMR3/DBGFReg.cpp:410:                memcpy(pszReg, pszRegName, cchReg);
VBox/VMM/VMMR3/DBGFReg.cpp:2281:            memcpy(pszBuf, szTmp, cchOutput + 1);
VBox/VMM/VMMR3/DBGFReg.cpp:2286:                memcpy(pszBuf, szTmp, cbBuf - 1);
VBox/VMM/VMMR3/DBGFReg.cpp:2586:        memcpy(&pArgs->pszBuf[pArgs->offBuf], pachChars, cbToCopy);
VBox/VMM/VMMR3/DBGFR3Trace.cpp:403:                    memcpy(pszDst + 1, g_aVmmTpGroups[i].pszName, g_aVmmTpGroups[i].cchName + 1);
VBox/VMM/VMMR3/DBGFR3Trace.cpp:406:                    memcpy(pszDst, g_aVmmTpGroups[i].pszName, g_aVmmTpGroups[i].cchName + 1);
VBox/VMM/VMMR3/DBGFInfo.cpp:248:        memcpy(pInfo->szName, pszName, cchName);
VBox/VMM/VMMR3/PDMAsyncCompletionFileNormal.cpp:921:                        memcpy(pvBuf, pTask->DataSeg.pvSeg, pTask->DataSeg.cbSeg);
VBox/VMM/VMMR3/PDMAsyncCompletionFileNormal.cpp:1520:                memcpy(((uint8_t *)pTask->pvBounceBuffer) + pTask->offBounceBuffer,
VBox/VMM/VMMR3/PDMAsyncCompletionFileNormal.cpp:1551:                        memcpy(pTask->DataSeg.pvSeg,
VBox/VMM/VMMR3/GIM.cpp:461:            memcpy(pvRead, pDbg->pvDbgRecvBuf, pDbg->cbDbgRecvBufRead);
VBox/VMM/VMMR3/VMMSwitcher.cpp:307:                memcpy(pbDst, pSwitcher->pvCode, pSwitcher->cbCode);
VBox/VMM/VMMR3/STAM.cpp:673:    memcpy(pNew->szName, pchName, cchName);
VBox/VMM/VMMR3/STAM.cpp:1406:        pNew->pszName       = (char *)memcpy((char *)(pNew + 1), pszName, cchName + 1);
VBox/VMM/VMMR3/STAM.cpp:1420:            pNew->pszDesc   = (char *)memcpy((char *)(pNew + 1) + cchName + 1, pszDesc, cbDesc);
VBox/VMM/VMMR3/STAM.cpp:2048:        memcpy(pThis->psz, pach, cch);
VBox/VMM/VMMR3/PGMPhys.cpp:165:                    memcpy(pvBuf, pvSrc, cb);
VBox/VMM/VMMR3/PGMPhys.cpp:311:                    memcpy(pvDst, pvBuf, cb);
VBox/VMM/VMMR3/PGMPhys.cpp:1104:        memcpy(paPhysPageCopy, paPhysPage, cbPhysPage);
VBox/VMM/VMMR3/PGMPhys.cpp:4137:                        memcpy(pvDstPage, (uint8_t const *)pvBinary + ((size_t)iPage << PAGE_SHIFT), PAGE_SIZE);
VBox/VMM/VMMR3/PGMPhys.cpp:4145:                            memcpy(pvDstPage, (uint8_t const *)pvBinary + ((size_t)iPage << PAGE_SHIFT), cbBinaryLeft);
VBox/VMM/VMMR3/PGMPhys.cpp:4373:                        memcpy(pvDstPageW, pbSrcPage, RT_MIN(cbSrcLeft, PAGE_SIZE));
VBox/VMM/VMMR3/PATM.cpp:685:        memcpy(&pDis->abInstr[offInstr], pbInstrHC, cbToRead);
VBox/VMM/VMMR3/PATM.cpp:832:                memcpy(oldInstr, pPatch->patch.aPrivInstr, pPatch->patch.cbPrivInstr);
VBox/VMM/VMMR3/PATM.cpp:4674:            memcpy(pPatchPage->papPatch, papPatchOld, cMaxPatchesOld * sizeof(pPatchPage->papPatch[0]));
VBox/VMM/VMMR3/PATM.cpp:5214:                memcpy(pbDst, pbSrc, cbToRead);
VBox/VMM/VMMR3/PDMCritSect.cpp:927:                memcpy(pszNames, pszName, cchName);
VBox/VMM/VMMR3/PDMCritSect.cpp:935:                    memcpy(pszNames, pszName, cchLeft - 2);
VBox/VMM/VMMR3/DBGFAddrSpace.cpp:828:    memcpy(szFound, pszFilename, cchFilename + 1);
VBox/VMM/VMMR3/DBGFAddrSpace.cpp:857:                memcpy(szFound, psz, cch);
VBox/VMM/VMMR3/DBGFAddrSpace.cpp:859:                memcpy(szFound + cch + 1, pszName, cchName + 1);
VBox/VMM/VMMR3/DBGFAddrSpace.cpp:1148:    memcpy(&pSymbol->szName[0], pszModName, cchModName);
VBox/VMM/VMMR3/PGMDbg.cpp:574:                memcpy(pabPrev, pb, cb);
VBox/VMM/VMMR3/CSAM.cpp:816:        memcpy(pVM->csam.s.pvDirtyBasePage,  csamInfo.pvDirtyBasePage, sizeof(pVM->csam.s.pvDirtyBasePage));
VBox/VMM/VMMR3/CSAM.cpp:817:        memcpy(pVM->csam.s.pvDirtyFaultPage, csamInfo.pvDirtyFaultPage, sizeof(pVM->csam.s.pvDirtyFaultPage));
VBox/VMM/VMMR3/CSAM.cpp:821:        memcpy(pVM->csam.s.pvPossibleCodePage,  csamInfo.pvPossibleCodePage, sizeof(pVM->csam.s.pvPossibleCodePage));
VBox/VMM/VMMR3/CSAM.cpp:995:        memcpy(&pDis->abInstr[offInstr], &pDisInfo->pbSrcInstr[offInstr], cbMaxRead);
VBox/VMM/VMMR3/CSAM.cpp:1003:        memcpy(&pDis->abInstr[offInstr], &pDisInfo->pbSrcInstr[offInstr], cbMinRead);
VBox/VMM/VMMR3/DBGFR3Flow.cpp:587:            memcpy(&pFlowBbNew->aInstr[0], &pFlowBb->aInstr[idxInstrSplit], cInstrNew * sizeof(DBGFFLOWBBINSTR));
VBox/VMM/VMMR3/DBGFR3Flow.cpp:1987:    memcpy(paAddrs, &pFlowBranchTbl->aAddresses[0], pFlowBranchTbl->cSlots * sizeof(DBGFADDRESS));
VBox/VMM/VMMR3/PDMDriver.cpp:199:            memcpy(szFilename, psz, cch);
VBox/VMM/VMMR3/PATMSSM.cpp:605:    memcpy(&pPatch->patch.aPrivInstr[0], &pPatchSSM->patch.aPrivInstr[0], MAX_INSTR_SIZE);
VBox/VMM/VMMR3/PATMSSM.cpp:649:    memcpy(&pPatchSSM->patch.aPrivInstr[0], &pPatch->patch.aPrivInstr[0], MAX_INSTR_SIZE);
VBox/VMM/VMMR3/PATMR3Dbg.cpp:106:                memcpy(pszName, a_sz, sizeof(a_sz)); \
VBox/VMM/VMMR3/HM.cpp:2224:            memcpy(pPatch->aNewOpcode, s_abVMMCall, sizeof(s_abVMMCall));
VBox/VMM/VMMR3/HM.cpp:2277:                memcpy(pPatch->aNewOpcode, abInstr, pPatch->cbOp);
VBox/VMM/VMMR3/HM.cpp:2292:                memcpy(pPatch->aNewOpcode, s_abVMMCall, sizeof(s_abVMMCall));
VBox/VMM/VMMR3/CPUMR3CpuId.cpp:1155:        memcpy(auPrev, auCur, sizeof(auCur));
VBox/VMM/VMMR3/CPUMR3CpuId.cpp:1182:        memcpy(pLeaf, pcLeaf, sizeof(*pLeaf));
VBox/VMM/VMMR3/CPUMR3CpuId.cpp:2289:        memcpy(&pVM->aCpus[iCpu].cpum.s.Guest.aoffXState[0], &pVM->aCpus[0].cpum.s.Guest.aoffXState[0],
VBox/VMM/VMMR3/CPUMR3CpuId.cpp:2291:        memcpy(&pVM->aCpus[iCpu].cpum.s.Hyper.aoffXState[0], &pVM->aCpus[0].cpum.s.Hyper.aoffXState[0],
VBox/VMM/VMMR3/CPUMR3CpuId.cpp:5133:    memcpy(&aHostOverrideStd[0], &aHostRawStd[0], sizeof(aHostOverrideStd));
VBox/VMM/VMMR3/CPUMR3CpuId.cpp:5137:    memcpy(&aHostOverrideExt[0], &aHostRawExt[0], sizeof(aHostOverrideExt));
VBox/VMM/VMMR3/SELM.cpp:2474:    memcpy(psz, aTypes[i].psz, aTypes[i].cch);
VBox/VMM/VMMR3/VMM.cpp:2365:    memcpy(pvBuf, &pVCpu->vmm.s.pbEMTStackR3[off], cbRead);
VBox/VMM/VMMR3/DBGFOS.cpp:434:                memcpy(pszName, pUVM->dbgf.s.pCurOS->pReg->szName, cch + 1);
VBox/VMM/VMMR3/DBGFOS.cpp:437:                memcpy(pszName, pUVM->dbgf.s.pCurOS->pReg->szName, cchName - 1);
VBox/VMM/VMMR3/DBGFDisas.cpp:312:        memcpy(&pDis->abInstr[offInstr], (char *)pState->pvPageR3 + (GCPtr & PAGE_OFFSET_MASK), cb);
VBox/VMM/VMMR3/DBGFDisas.cpp:389:            memcpy(pszBuf, Sym.szName, cchName);
VBox/VMM/VMMR3/GIMHv.cpp:1677:                        memcpy(pbData, &abFrame[0], sizeof(abFrame));
VBox/VMM/VMMR3/GIMHv.cpp:1694:                    memcpy(pvBuf, g_abArpReply, cbArpReplyPkt);
VBox/VMM/VMMR3/GIMHv.cpp:1712:                    memcpy(pvBuf, g_abDhcpOffer, cbDhcpOfferPkt);
VBox/VMM/VMMR3/GIMHv.cpp:1738:                    memcpy(pvBuf, g_abDhcpAck, cbDhcpAckPkt);
VBox/VMM/VMMR3/PDMDevice.cpp:580:            memcpy(szFilename, psz, cch);
VBox/VMM/VMMR3/DBGFStack.cpp:312:    memcpy(&pFrame->Args, uArgs.pv, sizeof(pFrame->Args));
VBox/VMM/VMMR3/DBGFR3PlugIn.cpp:171:    memcpy(pszDst, pszName, cchName);
VBox/VMM/VMMR3/DBGFR3PlugIn.cpp:266:    memcpy(pszModule, pchPath, cchPath);
VBox/VMM/VMMR3/DBGFR3PlugIn.cpp:321:    memcpy(pPlugIn->szName, pszName, cbName);
VBox/VMM/VMMR3/MMHyper.cpp:1491:    memcpy(pvTmp, pvOld, cbData);
VBox/VMM/VMMR3/MMHyper.cpp:1500:            memcpy(*ppv, pvTmp, cbData);
VBox/VMM/VMMR3/SSM.cpp:1060:                memcpy(pSSM->u.Read.szHostOSAndArch, szValue, cchCopy);
VBox/VMM/VMMR3/SSM.cpp:1187:    memcpy(pUnit->szName, pszName, cchName);
VBox/VMM/VMMR3/SSM.cpp:2472:            memcpy(&pBuf->abData[pStrm->off], pvBuf, cbToWrite);
VBox/VMM/VMMR3/SSM.cpp:2479:            memcpy(&pBuf->abData[pStrm->off], pvBuf, cbLeft);
VBox/VMM/VMMR3/SSM.cpp:2508:        memcpy(&pBuf->abData[0], pvBuf, cbCopy);
VBox/VMM/VMMR3/SSM.cpp:2700:            memcpy(pvBuf, &pBuf->abData[pStrm->off], cbToRead);
VBox/VMM/VMMR3/SSM.cpp:2707:            memcpy(pvBuf, &pBuf->abData[pStrm->off], cbLeft);
VBox/VMM/VMMR3/SSM.cpp:2755:        memcpy(pvBuf, &pBuf->abData[0], cbCopy);
VBox/VMM/VMMR3/SSM.cpp:3495:                    memcpy(&pb[4], pvBuf, SSM_ZIP_BLOCK_SIZE);
VBox/VMM/VMMR3/SSM.cpp:3569:        memcpy(&pSSM->u.Write.abDataBuffer[0], pvBuf, cbBuf);
VBox/VMM/VMMR3/SSM.cpp:3599:    memcpy(&pSSM->u.Write.abDataBuffer[off], pvBuf, cbBuf);
VBox/VMM/VMMR3/SSM.cpp:4412:    memcpy(&UnitHdr.szMagic[0], SSMFILEUNITHDR_MAGIC, sizeof(UnitHdr.szMagic));
VBox/VMM/VMMR3/SSM.cpp:4421:    memcpy(&UnitHdr.szName[0], "SSMLiveControl", UnitHdr.cbName);
VBox/VMM/VMMR3/SSM.cpp:4695:    memcpy(pDir->szMagic, SSMFILEDIR_MAGIC, sizeof(pDir->szMagic));
VBox/VMM/VMMR3/SSM.cpp:4740:    memcpy(&UnitHdr.szMagic[0], SSMFILEUNITHDR_END, sizeof(UnitHdr.szMagic));
VBox/VMM/VMMR3/SSM.cpp:4769:    memcpy(Footer.szMagic, SSMFILEFTR_MAGIC, sizeof(Footer.szMagic));
VBox/VMM/VMMR3/SSM.cpp:4860:        memcpy(&UnitHdr.szMagic[0], SSMFILEUNITHDR_MAGIC, sizeof(UnitHdr.szMagic));
VBox/VMM/VMMR3/SSM.cpp:4869:        memcpy(&UnitHdr.szName[0], &pUnit->szName[0], UnitHdr.cbName);
VBox/VMM/VMMR3/SSM.cpp:5106:    memcpy(&FileHdr.szMagic, SSMFILEHDR_MAGIC_V2_0, sizeof(FileHdr.szMagic));
VBox/VMM/VMMR3/SSM.cpp:5442:        memcpy(&UnitHdr.szMagic[0], SSMFILEUNITHDR_MAGIC, sizeof(UnitHdr.szMagic));
VBox/VMM/VMMR3/SSM.cpp:5451:        memcpy(&UnitHdr.szName[0], &pUnit->szName[0], UnitHdr.cbName);
VBox/VMM/VMMR3/SSM.cpp:6323:        memcpy(pvBuf, &pSSM->u.Read.abDataBuffer[off], cbToCopy);
VBox/VMM/VMMR3/SSM.cpp:6382:                    memcpy(pvBuf, &pSSM->u.Read.abDataBuffer[0], cbToRead);
VBox/VMM/VMMR3/SSM.cpp:6443:        memcpy(pvBuf, &pSSM->u.Read.abDataBuffer[off], cbToCopy);
VBox/VMM/VMMR3/SSM.cpp:6516:        memcpy(pvBuf, &pSSM->u.Read.abDataBuffer[0], cbToCopy);
VBox/VMM/VMMR3/SSM.cpp:6558:            memcpy(pvBuf, &pSSM->u.Read.abDataBuffer[off], cbBuf);
VBox/VMM/VMMR3/SSM.cpp:8549:    memcpy(pDir, &DirHdr, cbDirHdr);
VBox/VMM/VMMR3/MMHeap.cpp:534:        memcpy(pszDup, psz, cch);
VBox/VMM/VMMR3/MMHeap.cpp:630:        memcpy(pszRet, psz, cch + 1);
VBox/VMM/VMMR3/CFGM.cpp:429:            memcpy(pszName, pCur->szName, pCur->cchName + 1);
VBox/VMM/VMMR3/CFGM.cpp:540:            memcpy(pszName, pCur->szName, pCur->cchName + 1);
VBox/VMM/VMMR3/CFGM.cpp:774:                memcpy(pszString, pLeaf->Value.String.psz, cbSrc);
VBox/VMM/VMMR3/CFGM.cpp:808:                memcpy(pszString, pLeaf->Value.String.psz, cbSrc);
VBox/VMM/VMMR3/CFGM.cpp:823:            memcpy(pszString, pszDef, cchDef);
VBox/VMM/VMMR3/CFGM.cpp:855:                memcpy(pvData, pLeaf->Value.Bytes.pau8, pLeaf->Value.Bytes.cb);
VBox/VMM/VMMR3/CFGM.cpp:1646: * @returns Similar to memcpy.
VBox/VMM/VMMR3/CFGM.cpp:1778:                memcpy(pNew->szName, pszName, cchName + 1);
VBox/VMM/VMMR3/CFGM.cpp:1915:                memcpy(pNew->szName, pszName, cchName + 1);
VBox/VMM/VMMR3/CFGM.cpp:2118:            memcpy(pszStringCopy, pszString, cchString);
VBox/VMM/VMMR3/CFGM.cpp:2272:                memcpy(pvCopy, pvBytes, cbBytes);
VBox/VMM/VMMR3/CFGM.cpp:3123:                memcpy(pszString, pLeaf->Value.String.psz, cbSrc);
VBox/VMM/VMMR3/CFGM.cpp:3140:            memcpy(*ppszString, pszDef, cbDef);
VBox/VMM/VMMR3/DBGFCoreWrite.cpp:384:        memcpy(&pDbgfCpu->ext, pCtx->pXStateR3, pDbgfCpu->cbExt);
VBox/VMM/VMMR3/PDM.cpp:2801:        memcpy(*ppszDst + 1, pszPrefix, cchPrefix);
VBox/VMM/VMMR3/PDM.cpp:2802:        memcpy(*ppszDst + 1 + cchPrefix, pszName, cchName + 1);
VBox/VMM/VMMR3/PDM.cpp:2806:        memcpy(*ppszDst, pszPrefix, cchPrefix);
VBox/VMM/VMMR3/PDM.cpp:2807:        memcpy(*ppszDst + cchPrefix, pszName, cchName + 1);
VBox/VMM/VMMR3/PGMSavedState.cpp:468:                    memcpy(abPage, pvPage, PAGE_SIZE);
VBox/VMM/VMMR3/PGMSavedState.cpp:557:                            memcpy(abPage, pvPage, PAGE_SIZE);
VBox/VMM/VMMR3/PGMSavedState.cpp:1011:                        memcpy(abPage, pbPage, PAGE_SIZE);
VBox/VMM/VMMR3/PGMSavedState.cpp:1664:                            memcpy(abPage, pvPage, PAGE_SIZE);
VBox/VMM/VMMR3/PATMPatch.cpp:162:    memcpy(pPB, pAsmRecord->pbFunction, pAsmRecord->cbFunction);
VBox/VMM/VMMR3/DBGFR3Type.cpp:693:                        memcpy(pvVal, pbBuf, cbThisParsed);
VBox/VMM/VMMR3/CPUM.cpp:2537:        memcpy(&pDis->abInstr[offInstr], (uint8_t *)pState->pvPageR3 + (GCPtr & PAGE_OFFSET_MASK), cb);
VBox/VMM/VMMR0/VMMR0.def:109:    memcpy=nocrt_memcpy                 ; not-os2
VBox/VMM/VMMR0/HMVMXR0.cpp:3061:        memcpy(&pVCpu->hm.s.vmx.RestoreHost.HostIdtr, &Idtr, sizeof(X86XDTR64));
VBox/VMM/VMMR0/HMVMXR0.cpp:3103:        memcpy(&pVCpu->hm.s.vmx.RestoreHost.HostGdtr, &Gdtr, sizeof(X86XDTR64));
VBox/VMM/VMMR0/VMMR0TripleFaultHack.cpp:103:    memcpy(g_pvSavedLowCore, g_pbLowCore, PAGE_SIZE);
VBox/VMM/VMMR0/VMMR0TripleFaultHack.cpp:113:    memcpy(g_pbLowCore, &vmmR0TripleFaultHackStart, cbCode);
VBox/VMM/VMMR0/VMMR0TripleFaultHack.cpp:160:        memcpy(g_pbLowCore, g_pvSavedLowCore, PAGE_SIZE);
VBox/VMM/VMMR0/HMR0.cpp:1826:    memcpy(psz, s_aTypes[i].psz, s_aTypes[i].cch);
VBox/VMM/VMMAll/VMAll.cpp:147:            memcpy((uint8_t *)pErr + pErr->off, pszFile, cchFile + 1);
VBox/VMM/VMMAll/VMAll.cpp:154:            memcpy((uint8_t *)pErr + pErr->off, pszFunction, cchFunction + 1);
VBox/VMM/VMMAll/VMAll.cpp:341:            memcpy((uint8_t *)pErr + pErr->off, pszErrorId, cchErrorID + 1);
VBox/VMM/VMMAll/IOMAllMMIO.cpp:68:    memcpy(pVCpu->iom.s.PendingMmioWrite.abValue, pvBuf, cbBuf);
VBox/VMM/VMMAll/IOMAllMMIO.cpp:246:                    memcpy(&pVCpu->iom.s.PendingMmioWrite.abValue[4],
VBox/VMM/VMMAll/PGMAllPool.cpp:155:    memcpy(pvDst, (RTHCPTR)((uintptr_t)pvSrc & ~(RTHCUINTPTR)(cb - 1)), cb);
VBox/VMM/VMMAll/PGMAllPool.cpp:1910:    memcpy(&pPool->aDirtyPages[idxFree].aPage[0], pvGst, (pPage->enmKind == PGMPOOLKIND_PAE_PT_FOR_PAE_PT) ? PAGE_SIZE : PAGE_SIZE/2);
VBox/VMM/VMMAll/SELMAll.cpp:78:    memcpy(pvBuf, pvPtr, cbBuf);
VBox/VMM/VMMAll/SELMAll.cpp:141:    memcpy(pvPtr, pvBuf, cbBuf);
VBox/VMM/VMMAll/PATMAll.cpp:377:        memcpy(pvDst, pVM->patm.s.pbPatchHelpersRC + (uint32_t)offPatchCode, cbToRead);
VBox/VMM/VMMAll/PATMAll.cpp:379:        memcpy(pvDst, pVM->patm.s.pbPatchHelpersR3 + (uint32_t)offPatchCode, cbToRead);
VBox/VMM/VMMAll/PATMAll.cpp:391:        memcpy(pvDst, pVM->patm.s.pPatchMemGC + (uint32_t)offPatchCode, cbToRead);
VBox/VMM/VMMAll/PATMAll.cpp:393:        memcpy(pvDst, pVM->patm.s.pPatchMemHC + (uint32_t)offPatchCode, cbToRead);
VBox/VMM/VMMAll/VMMAll.cpp:424:                memcpy(pvBuf, abHypercall, sizeof(abHypercall));
VBox/VMM/VMMAll/VMMAll.cpp:437:                memcpy(pvBuf, abHypercall, sizeof(abHypercall));
VBox/VMM/VMMAll/IEMAllCImplSvmInstr.cpp.h:905:                memcpy(&pVmcbCtrl->abInstr[0], &pVCpu->iem.s.abOpcode[offOpCode], cbCurrent);
VBox/VMM/VMMAll/IEMAllCImplStrInstr.cpp.h:865:                    /* Perform the operation exactly (don't use memcpy to avoid
VBox/VMM/VMMAll/IEMAll.cpp:55: * memcpy might end up using a whole bunch of XMM or MM registers if the
VBox/VMM/VMMAll/IEMAll.cpp:1680:                memcpy(pvDst, &pVCpu->iem.s.pbInstrBuf[offBuf], cbCopy);
VBox/VMM/VMMAll/IEMAll.cpp:1855:                memcpy(pvDst, &pTlbe->pbMappingR3[offPg], cbDst);
VBox/VMM/VMMAll/IEMAll.cpp:1860:            memcpy(pvDst, &pTlbe->pbMappingR3[offPg], cbMaxRead);
VBox/VMM/VMMAll/IEMAll.cpp:8457:            memcpy(pEvtRec->u.RamWrite.ab, &pVCpu->iem.s.aBounceBuffers[iMemMap].ab[0], pVCpu->iem.s.aMemBbMappings[iMemMap].cbFirst);
VBox/VMM/VMMAll/IEMAll.cpp:8470:                memcpy(pEvtRec->u.RamWrite.ab,
VBox/VMM/VMMAll/IEMAll.cpp:8489:    memcpy(g_abIemWrote, &pVCpu->iem.s.aBounceBuffers[iMemMap].ab[0], RT_MIN(cbWrote, sizeof(g_abIemWrote)));
VBox/VMM/VMMAll/IEMAll.cpp:15110:        memcpy(pVCpu->iem.s.abOpcode, pvOpcodeBytes, pVCpu->iem.s.cbOpcode);
VBox/VMM/VMMAll/IEMAll.cpp:15168:        memcpy(pVCpu->iem.s.abOpcode, pvOpcodeBytes, pVCpu->iem.s.cbOpcode);
VBox/VMM/VMMAll/IEMAll.cpp:15218:        memcpy(pVCpu->iem.s.abOpcode, pvOpcodeBytes, pVCpu->iem.s.cbOpcode);
VBox/VMM/VMMAll/EMAll.cpp:429:        memcpy(&pDis->abInstr[offInstr], (void *)(uintptr_t)uSrcAddr, cbToRead);
VBox/VMM/VMMAll/EMAll.cpp:431:        memcpy(&pDis->abInstr[offInstr], PATMR3GCPtrToHCPtr(pVM, uSrcAddr), cbToRead);
VBox/VMM/VMMAll/EMAll.cpp:1750:    memcpy(g_abEmWrote, pvSrc, RT_MIN(cb, sizeof(g_abEmWrote)));
VBox/VMM/VMMAll/PGMAllPhys.cpp:313:                    memcpy((uint8_t *)pvDstPage + (GCPhys & PAGE_OFFSET_MASK), pvBuf, cbBuf);
VBox/VMM/VMMAll/PGMAllPhys.cpp:870:            memcpy(pvNewPage, pvSharedPage, PAGE_SIZE); /** @todo todo write ASMMemCopyPage */
VBox/VMM/VMMAll/PGMAllPhys.cpp:2418:        memcpy(pvBuf, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:2506:                        memcpy(pvBuf, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:2649:                        memcpy(pvDst, pvBuf, cbRange);
VBox/VMM/VMMAll/PGMAllPhys.cpp:2714:                    memcpy(pvDst, pvBuf, cbRange);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3011:            memcpy(pvDst, pvBuf, cbRange);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3135:                        memcpy(pvDst, pvBuf, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3226:        memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3232:    memcpy(pvDst, pvSrc, cbPage);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3251:            memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3257:        memcpy(pvDst, pvSrc, PAGE_SIZE);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3300:        memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3306:    memcpy(pvDst, pvSrc, cbPage);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3325:            memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3331:        memcpy(pvDst, pvSrc, PAGE_SIZE);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3386:        memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3393:    memcpy(pvDst, pvSrc, cbPage);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3415:            memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3422:        memcpy(pvDst, pvSrc, PAGE_SIZE);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3469:        memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3475:    memcpy(pvDst, pvSrc, cbPage);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3494:            memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3500:        memcpy(pvDst, pvSrc, PAGE_SIZE);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3547:        memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3554:    memcpy(pvDst, pvSrc, cbPage);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3574:            memcpy(pvDst, pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3581:        memcpy(pvDst, pvSrc, PAGE_SIZE);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3843:                    memcpy(pvDst, (uint8_t *)pvSrc + (GCPtrSrc & PAGE_OFFSET_MASK), cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3888:                        memcpy(pvDst, (uint8_t *)pvSrc1 + (GCPtrSrc & PAGE_OFFSET_MASK), cb1);
VBox/VMM/VMMAll/PGMAllPhys.cpp:3904:                        memcpy((uint8_t *)pvDst + cb1, pvSrc2, cb2);
VBox/VMM/VMMAll/PGMAllPhys.cpp:4023:                        memcpy(pvDst, (const uint8_t *)pvSrc + (GCPtrSrc & PAGE_OFFSET_MASK), cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:4072:                            memcpy(pvDst, (const uint8_t *)pvSrc + (GCPtrSrc & PAGE_OFFSET_MASK), cb1);
VBox/VMM/VMMAll/PGMAllPhys.cpp:4089:                            memcpy((uint8_t *)pvDst + cb1, pvSrc, cb2);
VBox/VMM/VMMAll/PGMAllPhys.cpp:4221:                        memcpy((uint8_t *)pvDst + (GCPtrDst & PAGE_OFFSET_MASK), pvSrc, cb);
VBox/VMM/VMMAll/PGMAllPhys.cpp:4274:                            memcpy((uint8_t *)pvDst + (GCPtrDst & PAGE_OFFSET_MASK), pvSrc, cb1);
VBox/VMM/VMMAll/PGMAllPhys.cpp:4291:                            memcpy(pvDst, (const uint8_t *)pvSrc + cb1, cb2);
VBox/VMM/VMMAll/MMAllHyper.cpp:362:        memcpy(*ppv, pvSrc, cb);
VBox/VMM/VMMRC/VMMRCDeps.cpp:31:    (PFNRT)memcpy,
VBox/VMM/VMMRC/VMMRC.def:86:    memcpy=nocrt_memcpy                 ; not-os2
VBox/VMM/VMMRZ/PGMRZDynMap.cpp:940:    memcpy(pvPages, pThis->paPages, sizeof(pThis->paPages[0]) * pThis->cPages);
VBox/VMM/testcase/tstPDMAsyncCompletionStress.cpp:218:        memcpy(pbBuf, pbTestPattern, cbFill);
VBox/VMM/testcase/tstGlobalConfig.cpp:79:    memcpy(&Req.szName[0], argv[1], cch + 1);
VBox/VMM/testcase/tstSSM.cpp:88:        memcpy(pb, szTmp, 16);
VBox/VMM/testcase/tstMicroRC.cpp:62:    memcpy(&pTst->aIDT[0], (void *)Idtr.pIdt, Idtr.cbIdt + 1);
VBox/VMM/testcase/tstMicroRC.cpp:127:        memcpy(&pTst->aIDT[0], (void *)(uintptr_t)pTst->OriginalIDTR.pIdt, sizeof(VBOXIDTE) * 32);
VBox/VMM/testcase/tstCompressionBenchmark.cpp:68:    memcpy(&g_pabCompr[g_cbCompr], pvBuf, cbBuf);
VBox/VMM/testcase/tstCompressionBenchmark.cpp:83:    memcpy(pvBuf, &g_pabCompr[g_offComprIn], cb);
VBox/VMM/testcase/tstCompressionBenchmark.cpp:359:                memcpy(pb, szTmp, 16);
VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c:1835:    memcpy(&pThis->u.s.MacAddr, pDev->dev_addr, sizeof(pThis->u.s.MacAddr));
VBox/HostDrivers/VBoxNetFlt/VBoxNetFlt.c:1032:    memcpy(pNew->szName, pszName, cchName + 1);
VBox/HostDrivers/VBoxNetFlt/VBoxNetFlt.c:1522:        memcpy(pGlobals->SupDrvFactory.szName, "VBoxNetAdp", sizeof("VBoxNetAdp"));
VBox/HostDrivers/VBoxNetFlt/VBoxNetFlt.c:1524:        memcpy(pGlobals->SupDrvFactory.szName, "VBoxNetFlt", sizeof("VBoxNetFlt"));
VBox/HostDrivers/VBoxNetFlt/win/cfg/VBoxNetCfg.cpp:2578:    memcpy(&szPath[cchPath + 1], pszName, cbName);
VBox/HostDrivers/VBoxNetFlt/win/cfg/VBoxNetCfg.cpp:2711:            memcpy(&netGuid, &GUID_DEVCLASS_NET, sizeof (GUID_DEVCLASS_NET));
VBox/HostDrivers/VBoxNetFlt/win/cfg/VBoxNetCfg.cpp:2921:        memcpy(&netGuid, &GUID_DEVCLASS_NET, sizeof(GUID_DEVCLASS_NET));
VBox/HostDrivers/VBoxNetFlt/win/cfg/VBoxNetCfg.cpp:2962:                    memcpy(DeviceInstallParams.DriverPath, pInfPath, pathLenght*sizeof(DeviceInstallParams.DriverPath[0]));
VBox/HostDrivers/VBoxNetFlt/darwin/VBoxNetFlt-darwin.cpp:185:    memcpy(aiSavedState, pIfNet, sizeof(aiSavedState));
VBox/HostDrivers/VBoxNetFlt/darwin/VBoxNetFlt-darwin.cpp:508:                memcpy(&pTagData->EthHdr, pSG->aSegs[0].pv, sizeof(pTagData->EthHdr));
VBox/HostDrivers/Support/SUPR3HardenedNoCrt.cpp:76:/** memcpy */
VBox/HostDrivers/Support/linux/SUPDrv-linux.mod.c:75:	{        0, "memcpy" },
VBox/HostDrivers/Support/SUPR3HardenedMain.cpp:861:            memcpy(&pBuf->szBuf[pBuf->off], pachChars, cbTodo);
VBox/HostDrivers/Support/SUPR3HardenedMain.cpp:865:        memcpy(&pBuf->szBuf[pBuf->off], pachChars, cbSpace);
VBox/HostDrivers/Support/SUPR3HardenedVerify.cpp:1991:                            memcpy(&szPath[0], Info.szPath, cchBefore);
VBox/HostDrivers/Support/SUPR3HardenedVerify.cpp:1997:                                memcpy(&szPath[cchBefore + cchLink + 1],
VBox/HostDrivers/Support/SUPDrv-dtrace.cpp:577:                memcpy(pArgDesc->dtargd_native, pszType, cchType + 1);
VBox/HostDrivers/Support/SUPLibLdr.cpp:340:        memcpy(pArgs->psz, pszSymbol, cbCopy);
VBox/HostDrivers/Support/SUPLibLdr.cpp:686:    memcpy(Req.u.In.szSymbol, pszSymbol, cchSymbol + 1);
VBox/HostDrivers/Support/SUPLibLdr.cpp:764:        memcpy(psz, pszFilename, cchFilename);
VBox/HostDrivers/Support/SUPLibLdr.cpp:765:        memcpy(psz + cchFilename, pszSuff, cchSuff + 1);
VBox/HostDrivers/Support/SUPLibLdr.cpp:812:    memcpy(psz, pszFilename, cchFilename);
VBox/HostDrivers/Support/SUPLibLdr.cpp:814:    memcpy(psz, pszExt, cchExt + 1);
VBox/HostDrivers/Support/SUPLib.cpp:508:        memcpy(&g_pSupFunctions->u.Out.aFunctions[0], &s_aFakeFunctions[0], sizeof(s_aFakeFunctions));
VBox/HostDrivers/Support/SUPLib.cpp:678:        memcpy(&pReq->abReqPkt[0], pReqHdr, cbReq);
VBox/HostDrivers/Support/SUPLib.cpp:682:        memcpy(pReqHdr, &pReq->abReqPkt[0], cbReq);
VBox/HostDrivers/Support/SUPLib.cpp:701:        memcpy(&pReq->abReqPkt[0], pReqHdr, cbReq);
VBox/HostDrivers/Support/SUPLib.cpp:705:        memcpy(pReqHdr, &pReq->abReqPkt[0], cbReq);
VBox/HostDrivers/Support/SUPLib.cpp:768:        memcpy(Req.u.In.szName, pszService, cchService);
VBox/HostDrivers/Support/SUPLib.cpp:789:        memcpy(pReq->u.In.szName, pszService, cchService);
VBox/HostDrivers/Support/SUPLib.cpp:793:        memcpy(&pReq->abReqPkt[0], pReqHdr, cbReq);
VBox/HostDrivers/Support/SUPLib.cpp:797:        memcpy(pReqHdr, &pReq->abReqPkt[0], cbReq);
VBox/HostDrivers/Support/SUPLib.cpp:845:        memcpy(&pReq->u.In.szStrings[off], pszFlags, cchFlags + 1);
VBox/HostDrivers/Support/SUPLib.cpp:854:        memcpy(&pReq->u.In.szStrings[off], pszGroups, cchGroups + 1);
VBox/HostDrivers/Support/SUPLib.cpp:863:        memcpy(&pReq->u.In.szStrings[off], pszDest, cchDest + 1);
VBox/HostDrivers/Support/SUPLib.cpp:1958:            memcpy(&pThis->pchStrTab[off], psz, cch + 1);
VBox/HostDrivers/Support/SUPLib.cpp:2052:    memcpy(Req.u.In.szName, pszModule, cchModule + 1);
VBox/HostDrivers/Support/SUPLib.cpp:2070:                    memcpy(&Req.u.In.szName[cchModule], pszSuff, cchSuff + 1);
VBox/HostDrivers/Support/Makefile.kmk:332:	$(VBOX_PATH_RUNTIME_SRC)/common/string/memcpy.asm \
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:658:        memcpy(pEntry->wszPath, pUniStr->Buffer, pUniStr->Length);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:869:                        memcpy(pImport->szName, uBuf.szName, cbName);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:879:                            memcpy(pImport->pwszAltSearchDir, pawcDir, cwcDir * sizeof(RTUTF16));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:996:                            memcpy(wszPath, pUniStrResult->Buffer, cwcCopy * sizeof(RTUTF16));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:1038:                            memcpy(wszPath, aDirs[i].pawcDir, aDirs[i].cwcDir * sizeof(RTUTF16));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:1838:        memcpy(&pwszPath[0], pUniStrResult->Buffer, pUniStrResult->Length);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2048:            memcpy(wszPath, pawcOrgName, cwcOrgName * sizeof(WCHAR));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2061:                memcpy(&wszPath[cwcOrgName], L".dll", 5 * sizeof(WCHAR));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2072:        memcpy(wszPath, pName->Buffer, pName->Length);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2141:            memcpy(wszPath, g_System32WinPath.UniStr.Buffer, cwc * sizeof(RTUTF16));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2143:            memcpy(&wszPath[cwc], pawcOrgName, cwcOrgName * sizeof(WCHAR));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2149:                memcpy(&wszPath[cwc], L".dll", 5 * sizeof(WCHAR));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2648:             * If we're alone, just memcpy the patch in.
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2654:                memcpy(pbApi, s_aPatches[i].pabPatch, s_aPatches[i].cbPatch);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2674:                    memcpy(&pbApi[4], &s_aPatches[i].pabPatch[4], s_aPatches[i].cbPatch - 4);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2744:    memcpy(g_abNtCreateSectionPatch, pbNtCreateSection, sizeof(g_abNtCreateSectionPatch));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2812:    memcpy(g_abLdrLoadDllPatch, pbLdrLoadDll, sizeof(g_abLdrLoadDllPatch));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2837:    memcpy(&g_abSupHardReadWriteExecPage[offExecPage], pbLdrLoadDll, offJmpBack);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2873:    memcpy(&g_abSupHardReadWriteExecPage[offExecPage], pbLdrLoadDll, offJmpBack);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2882:    memcpy(g_abLdrLoadDllPatch, pbLdrLoadDll, sizeof(g_abLdrLoadDllPatch));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:2952:    memcpy(abReplacement, pabBackup, sizeof(abReplacement));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:3904:    memcpy(abNew, pbChildNtDllBits + ((uintptr_t)uLdrInitThunk - pThis->uNtDllAddr), sizeof(abNew));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:4527:                memcpy(pszErrorInfo, pszPrefix, cchPrefix);
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:5101:    memcpy(g_SupLibHardenedAppBinNtPath.UniStr.Buffer, g_SupLibHardenedExeNtPath.UniStr.Buffer, cwc * sizeof(WCHAR));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:6162:        memcpy(g_wszSupLibHardenedExePath, wszLong, (cwcLong + 1) * sizeof(RTUTF16));
VBox/HostDrivers/Support/win/SUPR3HardenedMain-win.cpp:6446:    memcpy(pvLdrInitThunk, pbBits + ((uintptr_t)uValue - uNtDllAddr), 16);
VBox/HostDrivers/Support/win/SUPR3HardenedNoCrt-win.cpp:362:                memcpy(pv, pvOld, RT_MIN(cbOld, cbNew));
VBox/HostDrivers/Support/win/SUPHardenedVerifyImage-win.cpp:1678:                        memcpy(Dst.Buffer, Src.Buffer, Src.Length);
VBox/HostDrivers/Support/win/SUPHardenedVerifyImage-win.cpp:2297:    memcpy(pwszWinPathBuf, s_wszPrefix, sizeof(s_wszPrefix));
VBox/HostDrivers/Support/win/SUPHardenedVerifyImage-win.cpp:2298:    memcpy(&pwszWinPathBuf[sizeof(s_wszPrefix) / sizeof(RTUTF16) - 1], pwszNtName, (cwcNtName + 1) * sizeof(RTUTF16));
VBox/HostDrivers/Support/win/SUPR3HardenedMainImports-win.cpp:588:    memcpy((void *)&abCopy[0], pbFunction, sizeof(abCopy));
VBox/HostDrivers/Support/win/SUPHardenedVerifyProcess-win.cpp:1198:        memcpy(pTmp->Buffer, pLongName->Buffer, pLongName->Length + sizeof(RTUTF16));
VBox/HostDrivers/Support/win/SUPHardenedVerifyProcess-win.cpp:2149:    memcpy(wszPath, s_wszSystem32, sizeof(s_wszSystem32));
VBox/HostDrivers/Support/win/SUPHardenedVerify-win.h:254:#  define suplibHardenedMemCopy      memcpy
VBox/HostDrivers/Support/win/SUPHardenedVerify-win.h:265:#  define memcpy                     suplibHardenedMemCopy
VBox/HostDrivers/Support/win/SUPDrv-win.cpp:601:        memcpy(pwszCopy, pRegPath->Buffer, pRegPath->Length);
VBox/HostDrivers/Support/win/SUPDrv-win.cpp:1581:                        memcpy(pvDstBuf, &pCur->szErrorInfo[offRead], cbToRead);
VBox/HostDrivers/Support/win/SUPDrv-win.cpp:2118:                memcpy(abBytes, &pbImageBits[off], RT_MIN(64, cbLeft));
VBox/HostDrivers/Support/SUPDrv.cpp:1666:            memcpy(&pReq->u.Out.aFunctions[0], g_aFunctions, sizeof(g_aFunctions));
VBox/HostDrivers/Support/SUPDrv.cpp:4926:    memcpy(pImage->szName, pReq->u.In.szName, cchName + 1);
VBox/HostDrivers/Support/SUPDrv.cpp:5149:            memcpy(pImage->pachStrTab, &pReq->u.In.abImage[pReq->u.In.offStrTab], pImage->cbStrTab);
VBox/HostDrivers/Support/SUPDrv.cpp:5161:            memcpy(pImage->paSymbols, &pReq->u.In.abImage[pReq->u.In.offSymbols], cbSymbols);
VBox/HostDrivers/Support/SUPDrv.cpp:5180:            memcpy(pImage->pvImage, &pReq->u.In.abImage[0], pImage->cbImageBits);
VBox/HostDrivers/Support/posix/SUPR3HardenedMain-posix.cpp:483:            memcpy(pbPatchMem, pbTarget + offInsn, cbInstr);
VBox/HostDrivers/Support/posix/SUPR3HardenedMain-posix.cpp:579:            memcpy(pbPatchMem, pbTarget + offInsn, cbInstr);
VBox/HostDrivers/Support/testcase/tstNtQueryStuff.cpp:65:        memcpy(pszBuf, pszAppend, cchAppend + 1);
VBox/HostDrivers/Support/testcase/tstGIP-2.cpp:169:                memcpy(&s_aaCPUs[i & 1][0], &g_pSUPGlobalInfoPage->aCPUs[0], g_pSUPGlobalInfoPage->cCpus * sizeof(g_pSUPGlobalInfoPage->aCPUs[0]));
VBox/HostDrivers/Support/SUPDrvTracer.cpp:991:                memcpy(pProv->szName, pszName, cchName + 1);
VBox/HostDrivers/Support/SUPDrvTracer.cpp:994:            memcpy((void *)pProv->Core.pszModName, pszModName, cchModName + 1);
VBox/HostDrivers/Support/SUPLibInternal.h:122:# define suplibHardenedMemCopy memcpy
VBox/HostDrivers/VBoxUSB/USBFilter.cpp:69:    memcpy(pFilter, pToClone, sizeof(*pToClone));
VBox/HostDrivers/VBoxUSB/USBFilter.cpp:1144:        memcpy(&pFilter->achStrTab[pFilter->offCurEnd + 1], pszString, cch + 1);
VBox/HostDrivers/VBoxUSB/USBFilter.cpp:1556:        memcpy(pszBuf, psz, cch + 1);
VBox/HostDrivers/VBoxUSB/USBFilter.cpp:1562:            memcpy(pszBuf, psz, cchBuf - 1);
VBox/HostDrivers/VBoxUSB/win/dev/VBoxUsbRt.cpp:835:            memcpy(pDevExt->Rt.pVBIfaceInfo[InterfaceNumber].pInterfaceInfo, pIfInfo, GET_USBD_INTERFACE_SIZE(pIfDr->bNumEndpoints));
VBox/HostDrivers/VBoxUSB/win/dev/VBoxUsbRt.cpp:1308:                memcpy(pUrb->UrbControlTransfer.SetupPacket, pBuffer, min(sizeof (pUrb->UrbControlTransfer.SetupPacket), pUrbInfo->len));
VBox/HostDrivers/VBoxUSB/win/mon/VBoxUsbMon.cpp:759:                                memcpy(pId, szDeviceTextDescription, sizeof(szDeviceTextDescription));
VBox/HostDrivers/VBoxUSB/win/mon/VBoxUsbMon.cpp:831:                            memcpy(pId, szBusQueryDeviceId, sizeof(szBusQueryDeviceId));
VBox/HostDrivers/VBoxUSB/win/mon/VBoxUsbMon.cpp:871:                        memcpy(pId, szBusQueryHardwareIDs, sizeof(szBusQueryHardwareIDs));
VBox/HostDrivers/VBoxUSB/win/mon/VBoxUsbMon.cpp:906:                            memcpy(pId, szBusQueryCompatibleIDs, sizeof(szBusQueryCompatibleIDs));
VBox/HostDrivers/VBoxUSB/win/mon/VBoxUsbMon.cpp:1202:            memcpy(pDump, pDumpData, cbDumpData);
VBox/HostDrivers/VBoxUSB/win/lib/VBoxUsbLib-win.cpp:621:    memcpy(&pEntry->StrDr, pDr, pDr->bLength);
VBox/HostDrivers/VBoxUSB/VBoxUSBFilterMgr.cpp:246:    memcpy(&pNew->Core, pFilter, sizeof(pNew->Core));
VBox/HostDrivers/VBoxUSB/os2/usbcalls.c:12:#define memcpy __builtin_memcpy
VBox/HostDrivers/VBoxPci/VBoxPci.c:733:        memcpy(pGlobals->SupDrvFactory.szName, "VBoxRawPci", sizeof("VBoxRawPci"));
VBox/HostDrivers/win/cfg/VBoxDrvCfg.cpp:183:    memcpy(str, pStr, sizeof(maList[0][0]) * cStr);
VBox/HostDrivers/win/cfg/VBoxDrvCfg.cpp:197:    memcpy(maList, pOld, mSize*sizeof(maList[0]));
VBox/HostDrivers/win/cfg/VBoxDrvCfg.cpp:336:            memcpy(lpszResult, lpszModels, (cModels - 1) * sizeof (lpszResult[0]));
VBox/HostDrivers/win/cfg/VBoxDrvCfg.cpp:338:            memcpy(lpszResult + cModels, lpszPlatform, cPlatform * sizeof (lpszResult[0]));
VBox/HostDrivers/VBoxNetAdp/linux/VBoxNetAdp-linux.c:273:            memcpy(pNetDev->dev_addr, pMACAddress, ETH_ALEN);
VBox/HostDrivers/VBoxNetAdp/win/VBoxNetAdp-win.cpp:1222:        memcpy(GAttrs.PermanentMacAddress, pAdapter->MacAddr.au8, GAttrs.MacAddressLength);
VBox/HostDrivers/VBoxNetAdp/win/VBoxNetAdp-win.cpp:1223:        memcpy(GAttrs.CurrentMacAddress, pAdapter->MacAddr.au8, GAttrs.MacAddressLength);
VBox/HostDrivers/VBoxNetAdp/win/VBoxNetAdp-win.cpp:1824:        memcpy(g_VBoxNetAdpGlobals.SupDrvFactory.szName, "VBoxNetAdp", sizeof("VBoxNetAdp"));
VBox/HostDrivers/VBoxNetAdp/darwin/VBoxNetAdp-darwin.cpp:146:    memcpy(pUuid->au8, "vboxnet", 7);
VBox/HostDrivers/VBoxNetAdp/darwin/VBoxNetAdp-darwin.cpp:257:    memcpy(LLADDR(&mac), pMACAddress->au8, mac.sdl_alen);
VBox/Storage/VISO.cpp:283:                    memcpy(pszContent, s_szCmdPrefix, sizeof(s_szCmdPrefix) - 1);
VBox/Storage/VISO.cpp:422:        pThis->pszFilename = (char *)memcpy(&pThis->RegionList.aRegions[1], pszFilename, cbFilename);
VBox/Storage/VDVfs.cpp:84:                memcpy(pbBuf, &abBuf[off - offAligned], cbToCopy);
VBox/Storage/VDVfs.cpp:114:                memcpy(pbBuf, abBuf, cbRead);
VBox/Storage/VDVfs.cpp:152:                memcpy(&abBuf[off - offAligned], pbBuf, cbToCopy);
VBox/Storage/VDVfs.cpp:185:                memcpy(abBuf, pbBuf, cbWrite);
VBox/Storage/DMG.cpp:1693:                    memcpy(pBlkx, pRsrcBlkx->aEntries[idxBlkx].pbData, pRsrcBlkx->aEntries[idxBlkx].cbData);
VBox/Storage/VD.cpp:3563:        memcpy(pMetaXfer->abData, pMetaXfer->pbDataShw, pMetaXfer->cbMeta);
VBox/Storage/VD.cpp:4268:                    memcpy(pvBuf, pMetaXfer->pbDataShw, cbRead);
VBox/Storage/VD.cpp:4270:                    memcpy(pvBuf, pMetaXfer->abData, cbRead);
VBox/Storage/VD.cpp:4341:            memcpy(pMetaXfer->abData, pvBuf, cbWrite);
VBox/Storage/VD.cpp:4398:                    memcpy(pMetaXfer->pbDataShw, pMetaXfer->abData, pMetaXfer->cbMeta);
VBox/Storage/VD.cpp:4414:                    memcpy(pMetaXfer->pbDataShw, pvBuf, cbWrite);
VBox/Storage/ISCSI.cpp:1172:                memcpy(pImage->pszHostname, pImage->pszTargetAddress + 1, cbHostname);
VBox/Storage/ISCSI.cpp:1174:                memcpy(pImage->pszHostname, pImage->pszTargetAddress, cbHostname);
VBox/Storage/ISCSI.cpp:1652:                            memcpy(pImage->pszTargetAddress, pcszTargetRedir, cb);
VBox/Storage/ISCSI.cpp:1924:        memcpy(aReqBHS + 8, pRequest->abCDB, pRequest->cbCDB);
VBox/Storage/ISCSI.cpp:2016:                        memcpy(pRequest->abSense,
VBox/Storage/ISCSI.cpp:2022:                            memcpy((char *)pRequest->abSense + aISCSIRes[1].cbSeg - 2,
VBox/Storage/ISCSI.cpp:2285:                        memcpy(paRes[j].pvSeg, pSrc, paRes[j].cbSeg);
VBox/Storage/ISCSI.cpp:2291:                        memcpy(paRes[j].pvSeg, pSrc, cbSeg);
VBox/Storage/ISCSI.cpp:2797:    memcpy(paReqBHS + 8, pScsiReq->abCDB, pScsiReq->cbCDB);
VBox/Storage/ISCSI.cpp:2910:                        memcpy(pScsiReq->abSense, (uint8_t *)pvSense + 2,
VBox/Storage/ISCSI.cpp:3001:    memcpy(pbCurr, pcszKey, cbKey);
VBox/Storage/ISCSI.cpp:3006:        memcpy(pbCurr, pcszValue, cbValueEnc);
VBox/Storage/Parallels.cpp:326:                memcpy(Header.HeaderIdentifier, PARALLELS_HEADER_MAGIC, sizeof(Header.HeaderIdentifier));
VBox/Storage/VHDX.cpp:638:    memcpy(pUuidConv, pUuid, sizeof(RTUUID));
VBox/Storage/VHDX.cpp:1590:            memcpy(&RegionTblHdr, pbRegionTbl, sizeof(RegionTblHdr));
VBox/Storage/testcase/tstVD-2.cpp:79:    memcpy(pszValue, pszTmp, cchTmp);
VBox/Storage/testcase/vbox-img.cpp:656:        memcpy(pvBuffer, &pFS->abBuffer[uOffset % sizeof(pFS->abBuffer)],
VBox/Storage/testcase/vbox-img.cpp:839:        memcpy(&pFS->abBuffer[uOffset % sizeof(pFS->abBuffer)], pvBuffer,
VBox/Storage/testcase/vbox-img.cpp:1004:        memcpy(&pFS->abBuffer[uOffset % sizeof(pFS->abBuffer)], pvBuffer,
VBox/Storage/testcase/vbox-img.cpp:1626:    memcpy(pszValue, pvUser, strlen((const char *)pvUser) + 1);
VBox/Storage/VDI.cpp:78:    memcpy(pPreHdrConv->szFileInfo, pPreHdr->szFileInfo, sizeof(pPreHdr->szFileInfo));
VBox/Storage/VDI.cpp:1985:        /* memcpy is much better than strncpy. */
VBox/Storage/VDI.cpp:1986:        memcpy(pszComment, pszTmp, cb + 1);
VBox/Storage/VDI.cpp:2016:                memcpy(pImage->Header.u.v1.szComment, pszComment, cchComment);
VBox/Storage/VDPlugin.cpp:141:    memcpy(&g_apBackends[g_cBackends], ppBackends, cBackends * sizeof(PCVDIMAGEBACKEND));
VBox/Storage/VDPlugin.cpp:172:    memcpy(&g_apCacheBackends[g_cCacheBackends], ppBackends, cBackends * sizeof(PCVDCACHEBACKEND));
VBox/Storage/VDPlugin.cpp:230:    memcpy(&g_apFilterBackends[g_cFilterBackends], ppBackends, cBackends * sizeof(PCVDFILTERBACKEND));
VBox/Storage/VDPlugin.cpp:372:            memcpy(&g_apBackends[i], &g_apBackends[i + 1], (g_cBackends - i - 1) * sizeof(PCVDIMAGEBACKEND));
VBox/Storage/VDPlugin.cpp:373:            memcpy(&g_ahBackendPlugins[i], &g_ahBackendPlugins[i + 1], (g_cBackends - i - 1) * sizeof(RTLDRMOD));
VBox/Storage/VDPlugin.cpp:382:            memcpy(&g_apCacheBackends[i], &g_apCacheBackends[i + 1], (g_cCacheBackends - i - 1) * sizeof(PCVDCACHEBACKEND));
VBox/Storage/VDPlugin.cpp:383:            memcpy(&g_ahCacheBackendPlugins[i], &g_ahCacheBackendPlugins[i + 1], (g_cCacheBackends - i - 1) * sizeof(RTLDRMOD));
VBox/Storage/VDPlugin.cpp:392:            memcpy(&g_apFilterBackends[i], &g_apFilterBackends[i + 1], (g_cFilterBackends - i - 1) * sizeof(PCVDFILTERBACKEND));
VBox/Storage/VDPlugin.cpp:393:            memcpy(&g_pahFilterBackendPlugins[i], &g_pahFilterBackendPlugins[i + 1], (g_cFilterBackends - i - 1) * sizeof(RTLDRMOD));
VBox/Storage/VMDK.cpp:677:    memcpy(pvBuf,
VBox/Storage/VMDK.cpp:712:        memcpy(pMarker, pcvMarker, RT_OFFSETOF(VMDKMARKER, uType));
VBox/Storage/VMDK.cpp:790:    memcpy((uint8_t *)pDeflateState->pvCompGrain + pDeflateState->iOffset,
VBox/Storage/VMDK.cpp:963:        memcpy(psz, szBuf, pszDst - szBuf);
VBox/Storage/VMDK.cpp:1427:    memcpy(pszUnquoted, pszStr, pszQ - pszStr);
VBox/Storage/VMDK.cpp:1445:    memcpy(pEnd, pszLine, cbDiff);
VBox/Storage/VMDK.cpp:1523:            memcpy(pszTmp, pszValue, cbNewVal + 1);
VBox/Storage/VMDK.cpp:1578:        memcpy(pDescriptor->aLines[uStart], pszKey, cbKey);
VBox/Storage/VMDK.cpp:1580:        memcpy(pDescriptor->aLines[uStart] + cbKey + 1, pszValue, cbValue + 1);
VBox/Storage/VMDK.cpp:1738:    memcpy(pDescriptor->aLines[uStart], szExt, cbDiff);
VBox/Storage/VMDK.cpp:2486:            memcpy(pszDescriptor + offDescriptor, psz, cb);
VBox/Storage/VMDK.cpp:2490:        memcpy(pszDescriptor + offDescriptor, "\n", 1);
VBox/Storage/VMDK.cpp:3399:        memcpy(pszBasename, pRaw->pszRawDisk, cbBasename);
VBox/Storage/VMDK.cpp:3501:                memcpy(pszBasename, pszPartition, cbBasename);
VBox/Storage/VMDK.cpp:3543:                    memcpy(pszBasename, pPart->pszRawDevice, cbBasename);
VBox/Storage/VMDK.cpp:3652:            memcpy(pszBasename, pszBasenameSubstr, cbBasenameSubstr);
VBox/Storage/VMDK.cpp:3684:            memcpy(pszBasename, pszTmp, cbTmp);
VBox/Storage/VMDK.cpp:3842:    memcpy(pszBasename, pszBasenameSubstr, cbBasenameSubstr);
VBox/Storage/VMDK.cpp:5175:        memcpy(pszTmp, pszWhere, pszFoundStr - pszWhere);
VBox/Storage/VMDK.cpp:5177:        memcpy(pszTmp, pszByWhat, strlen(pszByWhat));
VBox/Storage/VHD.cpp:289:                memcpy(pu16Buf, pTmp16, cTmp16Len * sizeof(*pTmp16));
VBox/Storage/VHD.cpp:335:                    memcpy(pvBuf, szPath, cb);
VBox/Storage/VHD.cpp:347:                memcpy(pvBuf, pszFilename, cb);
VBox/Storage/VHD.cpp:465:    memcpy(ddh.ParentUuid, pImage->ParentUuid.au8, sizeof(ddh.ParentUuid));
VBox/Storage/VHD.cpp:800:        memcpy(pImage->ParentUuid.au8, vhdDynamicDiskHeader.ParentUuid, sizeof(pImage->ParentUuid));
VBox/Storage/VHD.cpp:887:    memcpy(&pImage->vhdFooterCopy, &vhdFooter, sizeof(VHDFooter));
VBox/Storage/VHD.cpp:892:    memcpy(&pImage->ImageUuid, &vhdFooter.UniqueID, 16);
VBox/Storage/VHD.cpp:1101:    memcpy(DynamicDiskHeader.Cookie, VHD_DYNAMIC_DISK_HEADER_COOKIE, sizeof(DynamicDiskHeader.Cookie));
VBox/Storage/VHD.cpp:1158:        memcpy(Footer.Cookie, VHD_FOOTER_COOKIE, sizeof(Footer.Cookie));
VBox/Storage/VHD.cpp:1162:        memcpy(Footer.CreatorApp, "vbox", sizeof(Footer.CreatorApp));
VBox/Storage/VHD.cpp:1174:        memcpy(Footer.UniqueID, pImage->ImageUuid.au8, sizeof(Footer.UniqueID));
VBox/Storage/VHD.cpp:2087:        memcpy(&pImage->vhdFooterCopy.UniqueID, pUuid, 16);
VBox/Storage/Debug/VDDbgIoLog.cpp:221:    memcpy(Hdr.szMagic, VDIOLOG_MAGIC, sizeof(Hdr.szMagic));
VBox/HostServices/GuestProperties/service.cpp:659:                memcpy(pchBuf, pProp->mValue.c_str(), cbValue);
VBox/HostServices/GuestProperties/service.cpp:660:                memcpy(pchBuf + cbValue, szFlags, cbFlags);
VBox/HostServices/GuestProperties/service.cpp:919:    memcpy(pchCur, pProp->mName.c_str(), cbName);
VBox/HostServices/GuestProperties/service.cpp:922:    memcpy(pchCur, pProp->mValue.c_str(), cbValue);
VBox/HostServices/GuestProperties/service.cpp:925:    memcpy(pchCur, szTimestamp, cbTimestamp);
VBox/HostServices/GuestProperties/service.cpp:928:    memcpy(pchCur, szFlags, cbFlags);
VBox/HostServices/GuestProperties/service.cpp:1315:        memcpy(pu8, pszName, cbName);
VBox/HostServices/GuestProperties/service.cpp:1320:        memcpy(pu8, pszValue, cbValue);
VBox/HostServices/GuestProperties/service.cpp:1327:        memcpy(pu8, pszFlags, cbFlags);
VBox/HostServices/SharedOpenGL/render/renderspu_glx.c:523:                        memcpy(&pWinCmd, event.xclient.data.b, sizeof (pWinCmd));
VBox/HostServices/SharedOpenGL/render/renderspu_glx.c:574:    memcpy(event.xclient.data.b, &pWinCmd, sizeof (pWinCmd));
VBox/HostServices/SharedOpenGL/render/renderspu.c:1681:    		memcpy(&render_spu.blitterDispatch.MakeCurrent, values, count);
VBox/HostServices/SharedOpenGL/crserverlib/server_muralfbo.cpp:738:            memcpy(pvBuffer, CrFbGetVRAM(hFb), pScreenshot->Img.cbData);
VBox/HostServices/SharedOpenGL/crserverlib/server_stream.c:444:    memcpy(&pMsg->Msg, msg, cbMsg);
VBox/HostServices/SharedOpenGL/crserverlib/server_main.c:1770:        memcpy(pvBuffer, pReader->pu8Buffer + pReader->offData, cbData);
VBox/HostServices/SharedOpenGL/crserverlib/server_main.c:1798:        memcpy(pReader->pu8Buffer, pvBuffer, cbBuffer);
VBox/HostServices/SharedOpenGL/crserverlib/server_main.c:1804:        memcpy(pReader->pu8Buffer + pReader->offData, pvBuffer, cbBuffer);
VBox/HostServices/SharedOpenGL/crserverlib/server_main.c:1817:        memcpy(pReader->pu8Buffer, pvBuffer, cbBuffer);
VBox/HostServices/SharedOpenGL/crserverlib/server_main.c:1820:            memcpy(pReader->pu8Buffer + cbBuffer, pu8Buffer + pReader->offData, pReader->cbData);
VBox/HostServices/SharedOpenGL/crserverlib/server_main.c:3578: * And removed extra memcpy done on blocked command arrival.
VBox/HostServices/SharedOpenGL/crserverlib/server_main.c:3580: * In the future we will extend CrHgsmi functionality to maintain texture data directly in CrHgsmi allocation to avoid extra memcpy-ing with PBO,
VBox/HostServices/SharedOpenGL/crserverlib/presenter/server_presenter.cpp:2701:    memcpy(aRemovedTargetMap, pFbInfo->aTargetMap, sizeof (aRemovedTargetMap));
VBox/HostServices/SharedOpenGL/crserverlib/presenter/server_presenter.cpp:2727:        memcpy(aAddedTargetMap, pFbInfo->aTargetMap, sizeof (aAddedTargetMap));
VBox/HostServices/SharedOpenGL/crserver/crservice.cpp:96:        memcpy(data.raw(), pvData, cbData);
VBox/HostServices/SharedOpenGL/crserver/crservice.cpp:696:                    memcpy((void*)((uintptr_t)pSvcBuffer->pData+ui32Offset), pBuffer, cbBuffer);
VBox/HostServices/GuestControl/service.cpp:204:                                memcpy(mpParms[i].u.pointer.addr,
VBox/HostServices/GuestControl/service.cpp:347:                                memcpy(paDstParms[i].u.pointer.addr,
VBox/HostServices/SharedFolders/mappings.cpp:250:            memcpy(FolderMapping[i].pMapName->String.ucs2, pMapName->String.ucs2, pMapName->u16Size);
VBox/HostServices/SharedFolders/mappings.cpp:473:            memcpy(pString->String.ucs2, pFolderMapping->pMapName->String.ucs2,
VBox/HostServices/SharedFolders/vbsf.cpp:1282:            memcpy(dst, src, pDirEntry->cbName + 1);
VBox/HostServices/SharedFolders/vbsfpathabs.cpp:117:               memcpy(pszAbsPath, pszRoot, cchRoot);
VBox/HostServices/SharedFolders/vbsfpathabs.cpp:135:        memcpy(&pszAbsPath[cchRoot], pszPath, cchPath + 1); /* Including trailing 0. */
VBox/HostServices/HostChannel/HostChannel.cpp:910:                memcpy(pEvent->pvEvent, pvEvent, cbEvent);
VBox/HostServices/HostChannel/service.cpp:128:            memcpy(pvParm, pvEvent, cbToCopy);
VBox/HostServices/SharedClipboard/x11-clipboard.cpp:263:        memcpy(pReq->pv, pv, cb);
VBox/HostServices/SharedClipboard/darwin-pasteboard.cpp:259:                    memcpy(pv, pDib, cbDibSize);
VBox/HostServices/SharedClipboard/VBoxClipboard-win.cpp:223:            memcpy(pvDst, pszBuf, cbBuf);
VBox/HostServices/SharedClipboard/VBoxClipboard-win.cpp:239:        memcpy(pvDst, pvSrc, cbSrc);
VBox/HostServices/SharedClipboard/VBoxClipboard-win.cpp:531:                                memcpy (pMem, pCtx->pClient->data.pv, pCtx->pClient->data.cb);
VBox/HostServices/auth/directoryservice/directoryservice.cpp:225:                    memcpy(&pAuthInBuf->fBufferData[pAuthInBuf->fBufferLength], &cLen, sizeof(cLen));
VBox/HostServices/auth/directoryservice/directoryservice.cpp:228:                    memcpy(&pAuthInBuf->fBufferData[pAuthInBuf->fBufferLength], pszUsername, cUserName);
VBox/HostServices/auth/directoryservice/directoryservice.cpp:232:                    memcpy(&pAuthInBuf->fBufferData[pAuthInBuf->fBufferLength], &cLen, sizeof(cLen));
VBox/HostServices/auth/directoryservice/directoryservice.cpp:235:                    memcpy(&pAuthInBuf->fBufferData[pAuthInBuf->fBufferLength], pszPassword, cPassword);
VBox/Main/cbinding/VBoxCAPIGlue.c:151:        memcpy(szName, pszHome, cchHome);
VBox/Main/cbinding/VBoxCAPIGlue.c:155:    memcpy(&szName[cchHome], DYNLIB_NAME, sizeof(DYNLIB_NAME));
VBox/Main/cbinding/VBoxCAPI.cpp:259:    memcpy(pData, pv, cb);
VBox/Main/cbinding/VBoxCAPI.cpp:318:            memcpy(pv, pData, cbTotal);
VBox/Main/src-server/MachineImpl.cpp:6557:            memcpy(&aData.front(), pu8Data, cbData);
VBox/Main/src-server/MachineImpl.cpp:6596:                    memcpy(&aData.front(), pu8PNG, cbPNG);
VBox/Main/src-server/MachineImpl.cpp:6675:        memcpy(&aData.front(), pu8Data, cbData);
VBox/Main/src-server/MachineImpl.cpp:7185:        memcpy(&aIcon.front(), &mUserData->s.ovIcon[0], cbIcon);
VBox/Main/src-server/MachineImpl.cpp:7200:            memcpy(&mUserData->s.ovIcon[0], &aIcon.front(), cbIcon);
VBox/Main/src-server/Performance.cpp:1256:        memcpy(data, mData + mEnd, (mLength - mEnd) * sizeof(ULONG));
VBox/Main/src-server/Performance.cpp:1259:            memcpy(data + (mLength - mEnd), mData, mEnd * sizeof(ULONG));
VBox/Main/src-server/Performance.cpp:1262:        memcpy(data, mData, mEnd * sizeof(ULONG));
VBox/Main/src-server/linux/NetIf-linux.cpp:147:        memcpy(&uuid, Req.ifr_name, RT_MIN(sizeof(Req.ifr_name), sizeof(uuid)));
VBox/Main/src-server/linux/NetIf-linux.cpp:150:        memcpy(uuid.Gen.au8Node, &Req.ifr_hwaddr.sa_data, sizeof(uuid.Gen.au8Node));
VBox/Main/src-server/linux/NetIf-linux.cpp:153:        memcpy(&pInfo->MACAddress, Req.ifr_hwaddr.sa_data, sizeof(pInfo->MACAddress));
VBox/Main/src-server/linux/NetIf-linux.cpp:156:            memcpy(pInfo->IPAddress.au8,
VBox/Main/src-server/linux/NetIf-linux.cpp:161:            memcpy(pInfo->IPNetMask.au8,
VBox/Main/src-server/ApplianceImplImport.cpp:1182:    memcpy(pszNameBuf, pTask->locInfo.strPath.c_str(), pTask->locInfo.strPath.length() + 1);
VBox/Main/src-server/solaris/NetIf-solaris.cpp:224:            memcpy(Info.IPAddress.au8, &((struct sockaddr_in *)&IfReq.lifr_addr)->sin_addr.s_addr,
VBox/Main/src-server/solaris/NetIf-solaris.cpp:227:            memcpy(&ArpReq.arp_pa, &IfReq.lifr_addr, sizeof(struct sockaddr_in));
VBox/Main/src-server/solaris/NetIf-solaris.cpp:237:                memcpy(&Info.MACAddress, ArpReq.arp_ha.sa_data, sizeof(Info.MACAddress));
VBox/Main/src-server/solaris/NetIf-solaris.cpp:244:            memcpy(Info.IPNetMask.au8, &((struct sockaddr_in *)&IfReq.lifr_addr)->sin_addr.s_addr,
VBox/Main/src-server/solaris/NetIf-solaris.cpp:263:            memcpy(Info.IPv6Address.au8, ((struct sockaddr_in6 *)&IfReq.lifr_addr)->sin6_addr.s6_addr,
VBox/Main/src-server/solaris/NetIf-solaris.cpp:268:            memcpy(Info.IPv6NetMask.au8, ((struct sockaddr_in6 *)&IfReq.lifr_addr)->sin6_addr.s6_addr,
VBox/Main/src-server/solaris/NetIf-solaris.cpp:279:    memcpy(&Uuid, szNICInstance, RT_MIN(strlen(szNICInstance), sizeof(Uuid)));
VBox/Main/src-server/solaris/NetIf-solaris.cpp:481:                            memcpy(Info.IPAddress.au8, ((struct sockaddr *)&Ifaces[i].lifr_addr)->sa_data,
VBox/Main/src-server/solaris/NetIf-solaris.cpp:485:                            memcpy(&ArpReq.arp_pa, &Ifaces[i].lifr_addr, sizeof(struct sockaddr_in));
VBox/Main/src-server/solaris/NetIf-solaris.cpp:495:                                memcpy(&Info.MACAddress, ArpReq.arp_ha.sa_data, sizeof(Info.MACAddress));
VBox/Main/src-server/MediumImpl.cpp:1459:        memcpy(&uuid.au8[0], "DVD", 3);
VBox/Main/src-server/MediumImpl.cpp:1461:        memcpy(&uuid.au8[0], "FD", 2);
VBox/Main/src-server/MediumImpl.cpp:1465:        memcpy(&uuid.au8[4], aLocation.c_str() + (lenLocation - 12), 12);
VBox/Main/src-server/MediumImpl.cpp:1467:        memcpy(&uuid.au8[4 + 12 - lenLocation], aLocation.c_str(), lenLocation);
VBox/Main/src-server/MediumImpl.cpp:7638:    memcpy(pszValue, value.c_str(), value.length() + 1);
VBox/Main/src-server/MediumImpl.cpp:7806:    memcpy(pszValue, psz, cch + 1);
VBox/Main/src-server/MediumImpl.cpp:7856:    memcpy(pSettings->pszKeyStore, pvKeyStore, cbKeyStore);
VBox/Main/src-server/freebsd/NetIf-freebsd.cpp:163:                memcpy(pInfo->IPv6Address.au8,
VBox/Main/src-server/freebsd/NetIf-freebsd.cpp:166:                memcpy(pInfo->IPv6NetMask.au8,
VBox/Main/src-server/freebsd/NetIf-freebsd.cpp:268:        memcpy(pNew->MACAddress.au8, LLADDR(pSdl), sizeof(pNew->MACAddress.au8));
VBox/Main/src-server/freebsd/NetIf-freebsd.cpp:276:        memcpy(&uuid, pNew->szShortName, RT_MIN(cbNameLen, sizeof(uuid)));
VBox/Main/src-server/freebsd/NetIf-freebsd.cpp:279:        memcpy(uuid.Gen.au8Node, pNew->MACAddress.au8, sizeof(uuid.Gen.au8Node));
VBox/Main/src-server/freebsd/NetIf-freebsd.cpp:408:            memcpy(pInfo->MACAddress.au8, LLADDR(pSdl), sizeof(pInfo->MACAddress.au8));
VBox/Main/src-server/freebsd/NetIf-freebsd.cpp:413:            memcpy(&uuid, pInfo->szShortName, RT_MIN(cbNameLen, sizeof(uuid)));
VBox/Main/src-server/freebsd/NetIf-freebsd.cpp:416:            memcpy(uuid.Gen.au8Node, pInfo->MACAddress.au8, sizeof(uuid.Gen.au8Node));
VBox/Main/src-server/HostImpl.cpp:782:                        memcpy(&uuid, pReq, sizeof(uuid));
VBox/Main/src-server/win/NetIf-win.cpp:142:                                    memcpy(&pInfo->IPAddress,
VBox/Main/src-server/win/NetIf-win.cpp:151:                                    memcpy(&pInfo->IPv6Address,
VBox/Main/src-server/win/NetIf-win.cpp:195:                        memcpy(pInfo->MACAddress.au8, pAdapter->PhysicalAddress, sizeof(pInfo->MACAddress));
VBox/Main/src-server/win/NetIf-win.cpp:1746:                    memcpy(&pInfo->IPAddress,
VBox/Main/src-server/win/NetIf-win.cpp:1755:                    memcpy(&pInfo->IPv6Address,
VBox/Main/src-server/win/NetIf-win.cpp:1819:        memcpy(pInfo->MACAddress.au8, pAdapter->PhysicalAddress, sizeof(pInfo->MACAddress));
VBox/Main/src-server/win/NetIf-win.cpp:1832:                    memcpy(&pInfo->IPAddress,
VBox/Main/src-server/win/NetIf-win.cpp:1845:                    memcpy(&pInfo->IPv6Address,
VBox/Main/src-server/PerformanceImpl.cpp:502:        /** @todo We may want to revise the query method to get rid of excessive alloc/memcpy calls. */
VBox/Main/src-server/PerformanceImpl.cpp:506:        memcpy(&aReturnData[flatIndex], values, length * sizeof(*values));
VBox/Main/src-server/darwin/iokit.cpp:1555:                    memcpy(pNew->szName, szName, cbName);
VBox/Main/src-server/darwin/iokit.cpp:1785:                            memcpy(&pNew->Uuid, pNew->szBSDName, RT_MIN(sizeof(pNew->szBSDName), sizeof(pNew->Uuid)));
VBox/Main/src-server/darwin/iokit.cpp:1801:                            memcpy(pNew->szName, szTmp, cchName + 1);
VBox/Main/src-server/darwin/NetIf-darwin.cpp:83:        memcpy(pNew->szShortName, pEtherNICs->szBSDName, sizeof(pEtherNICs->szBSDName));
VBox/Main/src-server/darwin/NetIf-darwin.cpp:85:        memcpy(pNew->szName, pEtherNICs->szName, cbNameLen);
VBox/Main/src-server/darwin/NetIf-darwin.cpp:123:                    memcpy(pNew->IPv6Address.au8,
VBox/Main/src-server/darwin/NetIf-darwin.cpp:129:                    memcpy(pNew->IPv6NetMask.au8,
VBox/Main/src-server/darwin/NetIf-darwin.cpp:193:                memcpy(pInfo->IPv6Address.au8,
VBox/Main/src-server/darwin/NetIf-darwin.cpp:196:                memcpy(pInfo->IPv6NetMask.au8,
VBox/Main/src-server/darwin/NetIf-darwin.cpp:350:        memcpy(pNew->MACAddress.au8, LLADDR(pSdl), sizeof(pNew->MACAddress.au8));
VBox/Main/src-server/darwin/NetIf-darwin.cpp:353:        memcpy(pNew->szShortName, pSdl->sdl_data, RT_MIN(pSdl->sdl_nlen, sizeof(pNew->szShortName) - 1));
VBox/Main/src-server/darwin/NetIf-darwin.cpp:361:            memcpy(pNew->szName, pNIC->szName, cbNameLen);
VBox/Main/src-server/darwin/NetIf-darwin.cpp:367:            memcpy(pNew->szName, pSdl->sdl_data, pSdl->sdl_nlen);
VBox/Main/src-server/darwin/NetIf-darwin.cpp:371:            memcpy(&uuid, pNew->szShortName, RT_MIN(cbNameLen, sizeof(uuid)));
VBox/Main/src-server/darwin/NetIf-darwin.cpp:374:            memcpy(uuid.Gen.au8Node, pNew->MACAddress.au8, sizeof(uuid.Gen.au8Node));
VBox/Main/src-server/darwin/NetIf-darwin.cpp:505:            memcpy(pInfo->MACAddress.au8, LLADDR(pSdl), sizeof(pInfo->MACAddress.au8));
VBox/Main/src-server/darwin/NetIf-darwin.cpp:510:            memcpy(&uuid, pInfo->szShortName, RT_MIN(cbNameLen, sizeof(uuid)));
VBox/Main/src-server/darwin/NetIf-darwin.cpp:513:            memcpy(uuid.Gen.au8Node, pInfo->MACAddress.au8, sizeof(uuid.Gen.au8Node));
VBox/Main/src-client/VideoRec.cpp:586:            memcpy(&audioFrame, &pCtx->Audio.Frame, sizeof(VIDEORECAUDIOFRAME));
VBox/Main/src-client/VideoRec.cpp:1463:    memcpy(pFrame->abBuf, pvData, RT_MIN(_64K /** @todo Fix! */, cbData));
VBox/Main/src-client/VideoRec.cpp:1665:            memcpy(pFrame->pu8RGBBuf + offDst, puSrcData + offSrc, w * uBytesPerPixel);
VBox/Main/src-client/ConsoleVRDPServer.cpp:508:                    memcpy(dst + x * 3, &src[4 * (x + xSkip)], 3);
VBox/Main/src-client/ConsoleVRDPServer.cpp:608:                memcpy(pvBuffer, address.c_str(), cbAddress);
VBox/Main/src-client/ConsoleVRDPServer.cpp:667:                memcpy(pvBuffer, portRange.c_str(), cbPortRange);
VBox/Main/src-client/ConsoleVRDPServer.cpp:844:                    memcpy(pFeature->achInfo, value.c_str(), cb);
VBox/Main/src-client/ConsoleVRDPServer.cpp:2068:            memcpy(pch, H3DOR_FMT_RGBA_TOPDOWN, strlen(H3DOR_FMT_RGBA_TOPDOWN));
VBox/Main/src-client/ConsoleVRDPServer.cpp:2071:            memcpy(pch, H3DOR_FMT_RGBA, strlen(H3DOR_FMT_RGBA));
VBox/Main/src-client/ConsoleVRDPServer.cpp:2451:            memcpy(pvData, pHostChCtx->pvDataReceived, cbToCopy);
VBox/Main/src-client/ConsoleVRDPServer.cpp:2627:                        memcpy((uint8_t *)pHostChCtx->pvDataReceived + pHostChCtx->cbDataReceived, p->pvData, p->cbData);
VBox/Main/src-client/ConsoleVRDPServer.cpp:2635:                        memcpy(pHostChCtx->pvDataReceived, p->pvData, p->cbData);
VBox/Main/src-client/ConsoleVRDPServer.cpp:2954:                memcpy(pu8Mask, pu8Shape, cbDstMask);
VBox/Main/src-client/ConsoleVRDPServer.cpp:2959:            memcpy(pu8Data, pu8Shape + cbMask, cbData);
VBox/Main/src-client/DisplayImpl.cpp:1215:                            memcpy(pu8Dst, pu8Src, w * 4);
VBox/Main/src-client/DisplayImpl.cpp:1436:        memcpy(pRectVisibleRegion, pRect, cRect * sizeof(RTRECT));
VBox/Main/src-client/DisplayImpl.cpp:1507:                memcpy(pRectsCopy, pRect, cRect * sizeof(RTRECT));
VBox/Main/src-client/DisplayImpl.cpp:2211:            memcpy(address, pbData, cbData);
VBox/Main/src-client/DisplayImpl.cpp:2321:                    memcpy(aAddress, pu8PNG, cbPNG);
VBox/Main/src-client/DisplayImpl.cpp:3927:    memcpy(pCmdCopy, pCmd, cbCmd);
VBox/Main/src-client/RemoteUSBBackend.cpp:1105:            memcpy(mpvDeviceList, pvList, cbList);
VBox/Main/src-client/RemoteUSBBackend.cpp:1308:                    memcpy ((uint8_t *)qurb->pvData + qurb->u32TransferredLen, &pBody[1], pBody->len);
VBox/Main/src-client/DrvAudioVideoRec.cpp:682:            memcpy(pvCircBuf, (uint8_t *)pvBuf + cbWrittenTotal, cbCircBuf),
VBox/Main/src-client/DrvAudioVideoRec.cpp:718:                memcpy(&abSrc[cbSrc], pvCircBuf, cbCircBuf);
VBox/Main/src-client/MachineDebuggerImpl.cpp:885:        memcpy(&pHlp->pszBuf[pHlp->offBuf], pachChars, cbChars);
VBox/Main/src-client/GuestDnDSourceImpl.cpp:448:                memcpy(&aData.front(), pCtx->mData.getMeta().getData(), cbData);
VBox/Main/src-client/GuestFileImpl.cpp:968:                    memcpy(pvData, data.raw(), data.size());
VBox/Main/src-client/UsbCardReader.cpp:892:                        memcpy(pCtx->u.GetStatusChange.paReaderStats[i].au8Atr,
VBox/Main/src-client/UsbCardReader.cpp:1590:        memcpy(req.ioSendPci.au8PciData,
VBox/Main/src-client/Nvram.cpp:125:        memcpy(pszStr, s_szPrefix, sizeof(s_szPrefix) - 1);
VBox/Main/src-client/DrvAudioVRDE.cpp:241:            memcpy(pvBuf, pvData, cbData);
VBox/Main/src-client/DrvAudioVRDE.cpp:642:        memcpy(pvBuf, pvData, cbBuf);
VBox/Main/src-client/ConsoleImpl.cpp:6895:        memcpy(shape.raw(), pu8Shape, cbShape);
VBox/Main/src-client/ConsoleImpl.cpp:8340:    memcpy(pFolderName->String.ucs2, bstrHostPath.raw(), cbString);
VBox/Main/src-client/ConsoleImpl.cpp:8357:    memcpy(pMapName->String.ucs2, bstrName.raw(), cbString);
VBox/Main/src-client/ConsoleImpl.cpp:8420:    memcpy(pMapName->String.ucs2, bstrName.raw(), cbString);
VBox/Main/src-client/ConsoleImpl.cpp:9243:        memcpy(szTapdev + strlen(szTapdev), str.c_str(),
VBox/Main/src-client/MouseImpl.cpp:118:        memcpy(&m.shape.front(), pu8Shape, cbShape);
VBox/Main/src-client/MouseImpl.cpp:179:        memcpy(&aShape.front(), &m.shape.front(), aShape.size());
VBox/Main/src-client/GuestCtrlPrivate.cpp:392:        memcpy(&m_pbBuffer[m_cbUsed], pbData, cbData);
VBox/Main/src-client/GuestCtrlPrivate.cpp:429:                memcpy(&m_pbBuffer[m_cbUsed], pbData, cbData);
VBox/Main/src-client/GuestProcessImpl.cpp:1566:                                memcpy(pvData, data.raw(), data.size());
VBox/Main/src-client/DisplayImplLegacy.cpp:381:        memcpy (pu8Dst, src, cbDst);
VBox/Main/src-client/DisplayImplLegacy.cpp:386:        memcpy(pu8Dst, src, u32BytesTillBoundary);
VBox/Main/src-client/DisplayImplLegacy.cpp:387:        memcpy(pu8Dst + u32BytesTillBoundary, &pVbvaMemory->au8RingBuffer[0], i32Diff);
VBox/Main/src-client/GuestImpl.cpp:282:        memcpy(aGuestStats, mCurrentGuestStat, sizeof(aGuestStats));
VBox/Main/webservice/vboxweb.cpp:1756:        memcpy(psz, id.c_str(), 34);
VBox/Main/glue/xpcom/helpers.cpp:69:        memcpy(newBuffer, psz, len);
VBox/Main/glue/xpcom/helpers.cpp:100:        memcpy(newBuffer, pch, bufferSize);
VBox/Main/glue/xpcom/helpers.cpp:163:            memcpy(*pbstr, psz, newByteLen);
VBox/Main/glue/string.cpp:129:        memcpy(*pstr, c_str(), cb);
VBox/Main/glue/string.cpp:140:        memcpy(*pstr, c_str(), cb);
VBox/Main/glue/string.cpp:346:            memcpy(m_psz, a_pcszSrc + a_offSrc, a_cchSrc);
VBox/Main/src-all/SecretKeyStore.cpp:37:        memcpy(this->m_pbKey, pbKey, cbKey);
VBox/Main/src-all/AuthLibrary.cpp:193:    memcpy(rawuuid, pUuid, sizeof(rawuuid));
VBox/Main/src-all/AuthLibrary.cpp:231:    memcpy(rawuuid, pUuid, sizeof(rawuuid));
VBox/Main/src-all/DisplayPNGUtil.cpp:59:        memcpy(pCtx->pu8PNG + pCtx->cbPNG, p, cb);
VBox/Main/src-all/win/VBoxProxyStub.c:1902:                    memcpy(&wszCurNm[cwcCurNm], s_wszTypeLib, sizeof(s_wszTypeLib));
VBox/Main/src-all/win/VBoxProxyStub.c:1933:                        memcpy(&wszCurNm[cwcCurNm], s_wszProxyStubClsid32, sizeof(s_wszProxyStubClsid32));
VBox/Main/src-all/win/VBoxProxyStub.c:2023:                    memcpy(&wszCurNm[cwcCurNm], s_wszTypeLib, sizeof(s_wszTypeLib));
VBox/Main/src-all/win/VBoxProxyStub.c:2046:                            memcpy(&wszCurNm[cwcCurNm], s_wszProgId, sizeof(s_wszProgId));
VBox/Main/src-all/ExtPackManagerImpl.cpp:2340:                        memcpy(&pszStdErrBuf[offStdErrBuf], achBuf, cbRead);
VBox/Main/include/GuestCtrlImplPrivate.h:910:                memcpy(pvData, pvPayload, cbPayload);
VBox/Main/include/GuestCtrlImplPrivate.h:960:                memcpy(pvData, payload.pvData, payload.cbData);
VBox/Main/include/GuestDnDPrivate.h:111:        memcpy((uint8_t *)pvData + cbDataUsed, pvDataAdd, cbDataAdd);
VBox/Main/include/GuestDnDPrivate.h:159:                memcpy(pvData, strData.c_str(), cbStrData);
VBox/Main/include/GuestDnDPrivate.h:304:            memcpy(pvFmtTmp, pvFmt, cbFmt);
VBox/Main/include/GuestDnDPrivate.h:686:            memcpy(&vecData.front(), strURIs.c_str(), cbData);
VBox/Main/include/vector.h:199:    memcpy(VEC_GET_ELEMENT_OBJ(pvec->mpvaElements, pvec->mcbElement,
VBox/NetworkServices/DHCP/Config.cpp:384:                memcpy(opt.au8RawOpt, pb+2, cbCur);
VBox/NetworkServices/DHCP/Config.cpp:1212:                    memcpy(&opt.au8RawOpt[0], domainName.c_str(), cchLength);
VBox/NetworkServices/DHCP/Config.h:679:            memcpy(m_pbCur, pvData, cb);
VBox/NetworkServices/NAT/pxdns.c:392:        memcpy(&resolvers[nresolvers], ai->ai_addr, ai->ai_addrlen);
VBox/NetworkServices/NAT/pxdns.c:662:    memcpy(&req->client_id, req->data, sizeof(req->client_id));
VBox/NetworkServices/NAT/pxdns.c:666:    memcpy(req->data, &req->id, sizeof(u16_t));
VBox/NetworkServices/NAT/pxdns.c:845:    memcpy(&id, pollmgr_udpbuf, sizeof(id));
VBox/NetworkServices/NAT/pxdns.c:863:    memcpy(pollmgr_udpbuf, &req->client_id, sizeof(req->client_id));
VBox/NetworkServices/NAT/portfwd.c:175:    memcpy(&fwspec->src, ai->ai_addr, ai->ai_addrlen);
VBox/NetworkServices/NAT/portfwd.c:186:    memcpy(&fwspec->dst, ai->ai_addr, ai->ai_addrlen);
VBox/NetworkServices/NAT/portfwd.c:255:        memcpy(&peerip6, &peer6->sin6_addr, sizeof(ip6_addr_t));
VBox/NetworkServices/NAT/fwudp.c:208:        memcpy(&fwudp->dst_addr.ip4, &dst4->sin_addr, sizeof(ip_addr_t));
VBox/NetworkServices/NAT/fwudp.c:213:        memcpy(&fwudp->dst_addr.ip6, &dst6->sin6_addr, sizeof(ip6_addr_t));
VBox/NetworkServices/NAT/proxy_dhcp6ds.c:124:        memcpy(&(buf)[off], &_s, sizeof(u16_t));        \
VBox/NetworkServices/NAT/proxy_dhcp6ds.c:134:    memcpy(&dhcp6ds_serverid[8], proxy_netif->hwaddr, 6);
VBox/NetworkServices/NAT/proxy_dhcp6ds.c:142:    memcpy(&dhcp6ds_dns[4], pxaddr_nonlocal, sizeof(ip6_addr_t));
VBox/NetworkServices/NAT/proxy_dhcp6ds.c:197:    memcpy(dhcp6ds_reply_buf + roff, msg_header, sizeof(msg_header));
VBox/NetworkServices/NAT/proxy_dhcp6ds.c:247:            memcpy(dhcp6ds_reply_buf + roff, &s, sizeof(s));
VBox/NetworkServices/NAT/proxy_dhcp6ds.c:251:            memcpy(dhcp6ds_reply_buf + roff, &s, sizeof(s));
VBox/NetworkServices/NAT/proxy_dhcp6ds.c:289:    memcpy(dhcp6ds_reply_buf + roff, dhcp6ds_serverid, sizeof(dhcp6ds_serverid));
VBox/NetworkServices/NAT/proxy_dhcp6ds.c:292:    memcpy(dhcp6ds_reply_buf + roff, dhcp6ds_dns, sizeof(dhcp6ds_dns));
VBox/NetworkServices/NAT/pxtcp.c:1308:        memcpy(&dst_addr.ip4, &fwspec->dst.sin.sin_addr, sizeof(ip_addr_t));
VBox/NetworkServices/NAT/pxtcp.c:1317:        memcpy(&dst_addr.ip6, &fwspec->dst.sin6.sin6_addr, sizeof(ip6_addr_t));
VBox/NetworkServices/NAT/VBoxNetLwipNAT.cpp:446:    memcpy(&LwipIpAddr, &address, sizeof(ip_addr));
VBox/NetworkServices/NAT/VBoxNetLwipNAT.cpp:447:    memcpy(&LwipIpNetMask, &netmask, sizeof(ip_addr));
VBox/NetworkServices/NAT/VBoxNetLwipNAT.cpp:448:    memcpy(&LwipIpNetwork, &network, sizeof(ip_addr));
VBox/NetworkServices/NAT/VBoxNetLwipNAT.cpp:548:    memcpy(pNetif->hwaddr, &mac, sizeof(RTMAC));
VBox/NetworkServices/NAT/VBoxNetLwipNAT.cpp:890:            memcpy(&m_src6.sin6_addr, &addr, sizeof(addr));
VBox/NetworkServices/NAT/VBoxNetLwipNAT.cpp:1053:        memcpy(payload, pu8Chunk, len);
VBox/NetworkServices/NAT/proxy_rtadvd.c:390:    memcpy(lladdr_opt->addr, proxy_netif->hwaddr, proxy_netif->hwaddr_len);
VBox/NetworkServices/NAT/proxy.c:433:        memcpy(&dst_sin6.sin6_addr, &dst_addr->ip6, sizeof(ip6_addr_t));
VBox/NetworkServices/NAT/rtmon_linux.c:238:                memcpy(&oif, RTA_DATA(rta), sizeof(oif));
VBox/NetworkServices/NAT/pxping.c:525:        memcpy(&iph_orig, iph, iphlen);
VBox/NetworkServices/NAT/pxping.c:605:    memcpy(&icmph_orig, icmph, sizeof(*icmph));
VBox/NetworkServices/NAT/pxping.c:620:            memcpy(iph, &iph_orig, iphlen);
VBox/NetworkServices/NAT/pxping.c:633:        memcpy(icmph, &icmph_orig, sizeof(*icmph));
VBox/NetworkServices/NAT/pxping_win.c:227:    memcpy(&pong->reqiph, iph, sizeof(*iph));
VBox/NetworkServices/NAT/pxping_win.c:228:    memcpy(&pong->reqicmph, icmph, sizeof(*icmph));
VBox/NetworkServices/NAT/pxping_win.c:379:        memcpy((u8_t *)p->payload + sizeof(*icmph),
VBox/NetworkServices/NAT/pxping_win.c:434:        memcpy((u8_t *)p->payload + sizeof(*icmph),
VBox/NetworkServices/NAT/pxping_win.c:437:        memcpy((u8_t *)p->payload + sizeof(*icmph) + sizeof(pong->reqiph),
VBox/NetworkServices/NAT/pxping_win.c:512:    memcpy(&pong->reqicmph, icmph, sizeof(*icmph));
VBox/NetworkServices/NAT/pxping_win.c:653:    memcpy((u8_t *)p->payload + sizeof(*icmph),
VBox/NetworkServices/NetLib/VBoxNetIntIf.cpp:65:        memcpy(pbDst, paSegs[iSeg].pv, paSegs[iSeg].cb);
VBox/NetworkServices/NetLib/ComHostUtils.cpp:103:                memcpy(szAddr, pszLo2Off, (pszTerm - pszLo2Off));
VBox/NetworkServices/NetLib/VBoxNetBaseService.cpp:551:        memcpy(&pbFrame[offFrame], paSegs[idxSeg].pv, paSegs[idxSeg].cb);
VBox/NetworkServices/NetLib/VBoxNetBaseService.cpp:846:        memcpy(&pOptArray[i], pOpt, sizeof(*pOpt));
libs/liblzf-3.4/lzf.c:275:        memcpy (buf1, p, l);
libs/liblzf-3.4/Changes:38:	- get rid of memcpy.
libs/liblzf-3.4/README:2:    LZF is an extremely fast (not that much slower than a pure memcpy)
libs/libpng-1.2.54/ltmain.sh:6071:		  memcpy (concat_name, tmp, tmp_len);
libs/libpng-1.2.54/ltmain.sh:6079:		  memcpy (concat_name, p, p_len);
libs/libpng-1.2.54/ltmain.sh:6096:  memcpy (concat_name, tmp, tmp_len);
libs/libpng-1.2.54/libpng.3:2020:       does the memcpy for you) if it will make the
libs/libpng-1.2.54/pngconf.h:1661:#  define png_memcpy  memcpy
libs/libpng-1.2.54/libpng-1.2.54.txt:1610:       does the memcpy for you) if it will make the
libs/libpng-1.2.54/CHANGES:503:  Replaced some instances of memcpy with simple assignments in pngvcrd (GR-P)
libs/libpng-1.2.54/CHANGES:949:  Changed all instances of memcpy, strcpy, and strlen to png_memcpy, png_strcpy,
libs/libpng-1.2.54/CHANGES:1242:  Fixed potential overrun in pngerror.c by using strncpy instead of memcpy.
libs/zlib-1.2.8/examples/zran.c:127:        memcpy(next->window, window + WINSIZE - left, left);
libs/zlib-1.2.8/examples/zran.c:129:        memcpy(next->window + left, window, WINSIZE - left);
libs/zlib-1.2.8/examples/gzappend.c:140:        memcpy(list, list + 1, len - 1);
libs/zlib-1.2.8/examples/gun.c:62:#include <string.h>         /* strerror(), strcmp(), strlen(), memcpy() */
libs/zlib-1.2.8/examples/gun.c:689:                memcpy(outname, *argv, len);
libs/zlib-1.2.8/gzread.c:158:        memcpy(state->x.next, strm->next_in, strm->avail_in);
libs/zlib-1.2.8/gzread.c:332:            memcpy(buf, state->x.next, n);
libs/zlib-1.2.8/gzread.c:531:        memcpy(buf, state->x.next, n);
libs/zlib-1.2.8/zutil.h:208:#    define zmemcpy memcpy
libs/zlib-1.2.8/ChangeLog:673:  avoid implicit memcpy calls (portability for no-library compilation)
libs/zlib-1.2.8/ChangeLog:1196:- Use default memcpy for Symantec MSDOS compiler.
libs/zlib-1.2.8/ChangeLog:1386:- no memcpy on Pyramid
libs/zlib-1.2.8/contrib/inflate86/inffast.S:329:        rep     movsb                   /* memcpy( buf, in, avail_in ) */
libs/zlib-1.2.8/contrib/minizip/zip.c:1980:      memcpy(pTmp, p, dataSize + 4);
libs/zlib-1.2.8/contrib/minizip/zip.c:1994:      memcpy(pData, pNewHeader, size);
libs/zlib-1.2.8/contrib/puff/puff.c:431: *   this correctly.  You should not use memcpy() since its behavior is not
libs/zlib-1.2.8/gzwrite.c:218:            memcpy(state->in + have, buf, copy);
libs/kStuff/kStuff/kHlp/Bare/kHlpBare-gcc.c:97:void *memcpy(void *pv1, const void *pv2, KSIZE cb)
libs/kStuff/kStuff/kHlp/CRT/kHlpCRTAlloc.cpp:55:        return memcpy(pvDup, pv, cb);
libs/kStuff/kStuff/kHlp/CRT/kHlpCRTString.cpp:57:    return memcpy(pv1, pv2, cb);
libs/kStuff/kStuff/kHlp/CRT/kHlpCRTString.cpp:65:    return (KU8 *)memcpy(pv1, pv2, cb) + cb;
libs/kStuff/kStuff/kDbg/kDbgModPE.cpp:149:            memcpy(pLine->szFile, Line.FileName, pLine->cchFile + 1);
libs/kStuff/kStuff/kDbg/kDbgModPE.cpp:212:            memcpy(pSym->szName, Buf.Sym.Name, Buf.Sym.NameLen);
libs/kStuff/kStuff/kDbg/kDbgModPE.cpp:291:        memcpy(pSH->Name, "headers", sizeof(pSH->Name));
libs/kStuff/kStuff/kDbg/kDbgModPE.cpp:307:            memcpy(pSH->Name, "tail\0\0\0", sizeof(pSH->Name));
libs/kStuff/kStuff/kDbg/kDbgHlp.h:65: * Combination of kDbgHlpAlloc and memcpy.
libs/kStuff/kStuff/kDbg/kDbgHlpCrt.cpp:79:        memcpy(pvNew, pv, cb);
libs/kStuff/kStuff/kLdr/kLdrModLX.c:1798: * Special memcpy employed by the iterdata2 algorithm.
libs/kStuff/kStuff/kLdr/kLdrModLX.c:1800: * Emulate a 16-bit memcpy (copying 16-bit at a time) and the effects this
libs/kStuff/kStuff/include/k/kHlpString.h:43:/** memcpy */
libs/kStuff/kStuff/include/k/kHlpString.h:57:# pragma intrinsic(memcmp, memcpy, memset, strcmp, strlen)
libs/kStuff/kStuff/include/k/kHlpString.h:60:/** memcpy */
libs/kStuff/kStuff/include/k/kHlpString.h:61:# define kHlpMemCopy(a,b,c)     memcpy(a,b,c)
libs/kStuff/iprt/kRdrFile-iprt.cpp:630:                memcpy(&pRdrFile->szFilename[0], szFilename, cchFilename + 1);
libs/kStuff/iprt/kHlpString-iprt.cpp:44:    return memcpy(pv1, pv2, cb);
libs/kStuff/iprt/kHlpString-iprt.cpp:52:    return (KU8 *)memcpy(pv1, pv2, cb) + cb;
libs/libxml2-2.9.4/xzlib.c:520:        memcpy(state->next + state->have, strm->next_in, strm->avail_in);
libs/libxml2-2.9.4/xzlib.c:730:            memcpy(buf, state->next, n);
libs/libxml2-2.9.4/xzlib.c:745:            continue;           /* no progress yet -- go back to memcpy() above */
libs/libxml2-2.9.4/nanohttp.c:1092:		memcpy (&sockin, res->ai_addr, res->ai_addrlen);
libs/libxml2-2.9.4/nanohttp.c:1102:		memcpy (&sockin6, res->ai_addr, res->ai_addrlen);
libs/libxml2-2.9.4/nanohttp.c:1176:		memcpy (&ia, h->h_addr_list[i], h->h_length);
libs/libxml2-2.9.4/nanohttp.c:1188:		memcpy (&ia6, h->h_addr_list[i], h->h_length);
libs/libxml2-2.9.4/nanohttp.c:1308:    memcpy(dest, ctxt->inrptr, len);
libs/libxml2-2.9.4/c14n.c:262:	    memcpy(&ns, node, sizeof(ns));
libs/libxml2-2.9.4/xmlsave.c:346:	    memcpy(&ctxt->indent[i * ctxt->indent_size], xmlTreeIndentString,
libs/libxml2-2.9.4/nanoftp.c:917:	    memcpy (&ctxt->ftpAddr, tmp->ai_addr, tmp->ai_addrlen);
libs/libxml2-2.9.4/nanoftp.c:922:	    memcpy (&ctxt->ftpAddr, tmp->ai_addr, tmp->ai_addrlen);
libs/libxml2-2.9.4/nanoftp.c:950:	memcpy (&((struct sockaddr_in *)&ctxt->ftpAddr)->sin_addr,
libs/libxml2-2.9.4/nanoftp.c:1453:	    memcpy (&((struct sockaddr_in6 *)&dataAddr)->sin6_addr, &((struct sockaddr_in6 *)&ctxt->ftpAddr)->sin6_addr, sizeof(struct in6_addr));
libs/libxml2-2.9.4/nanoftp.c:1469:	    memcpy (&((struct sockaddr_in *)&dataAddr)->sin_addr, &ad[0], 4);
libs/libxml2-2.9.4/nanoftp.c:1470:	    memcpy (&((struct sockaddr_in *)&dataAddr)->sin_port, &ad[4], 2);
libs/libxml2-2.9.4/xmlwriter.c:48:        #define VA_COPY(dest,src) memcpy((char *)(dest),(char *)(src),sizeof(va_list))
libs/libxml2-2.9.4/timsort.h:348:    memcpy(storage, &dst[curr], A * sizeof(SORT_TYPE));
libs/libxml2-2.9.4/timsort.h:372:    memcpy(storage, &dst[curr + A], B * sizeof(SORT_TYPE));
libs/libxml2-2.9.4/testlimits.c:190:            memcpy(buffer, current, len);
libs/libxml2-2.9.4/testlimits.c:195:            memcpy(buffer, current, len);
libs/libxml2-2.9.4/testlimits.c:203:            memcpy(buffer, current, len);
libs/libxml2-2.9.4/testlimits.c:207:            memcpy(buffer, current, len);
libs/libxml2-2.9.4/testlimits.c:213:        memcpy(buffer, &filling[0], len);
libs/libxml2-2.9.4/testlimits.c:337:            memcpy(buffer, current, len);
libs/libxml2-2.9.4/testlimits.c:341:            memcpy(buffer, current, len);
libs/libxml2-2.9.4/testlimits.c:349:            memcpy(buffer, current, len);
libs/libxml2-2.9.4/testlimits.c:353:            memcpy(buffer, current, len);
libs/libxml2-2.9.4/testlimits.c:359:        memcpy(buffer, &filling[0], len);
libs/libxml2-2.9.4/ltmain.sh:6071:		  memcpy (concat_name, tmp, tmp_len);
libs/libxml2-2.9.4/ltmain.sh:6079:		  memcpy (concat_name, p, p_len);
libs/libxml2-2.9.4/ltmain.sh:6096:  memcpy (concat_name, tmp, tmp_len);
libs/libxml2-2.9.4/xmlstring.c:50:    memcpy(ret, cur, len * sizeof(xmlChar));
libs/libxml2-2.9.4/xmlstring.c:467:    memcpy(&ret[size], add, len * sizeof(xmlChar));
libs/libxml2-2.9.4/xmlstring.c:507:    memcpy(ret, str1, size * sizeof(xmlChar));
libs/libxml2-2.9.4/xmlstring.c:508:    memcpy(&ret[size], str2, len * sizeof(xmlChar));
libs/libxml2-2.9.4/xmlstring.c:878:    memcpy(ret, utf, i * sizeof(xmlChar));
libs/libxml2-2.9.4/uri.c:2338:	    memcpy (vptr, uptr + 1, len - 1);
libs/libxml2-2.9.4/uri.c:2341:	    memcpy (vptr, uptr, len);
libs/libxml2-2.9.4/HTMLparser.c:2063:	    memcpy(out, cp, len);
libs/libxml2-2.9.4/HTMLparser.c:2162:	    memcpy(out, cp, len);
libs/libxml2-2.9.4/HTMLparser.c:4937:	memcpy(sax, &htmlDefaultSAXHandler, sizeof(xmlSAXHandlerV1));
libs/libxml2-2.9.4/HTMLparser.c:6215:	memcpy(ctxt->sax, sax, sizeof(htmlSAXHandler));
libs/libxml2-2.9.4/HTMLparser.c:6869:        memcpy(ctxt->sax, &htmlDefaultSAXHandler, sizeof(xmlSAXHandlerV1));
libs/libxml2-2.9.4/buf.c:838:		memcpy(rebuf, buf->content, buf->use);
libs/libxml2-2.9.4/xmlreader.c:68:        #define VA_COPY(dest,src) memcpy((char *)(dest),(char *)(src),sizeof(va_list))
libs/libxml2-2.9.4/encoding.c:367:    memcpy(out, inb, len);
libs/libxml2-2.9.4/xmlschemastypes.c:3668:    memcpy(ret, v, sizeof(xmlSchemaVal));
libs/libxml2-2.9.4/xmlIO.c:1781:	**  in reverse byte order.  So a memcpy can't be used here.
libs/libxml2-2.9.4/xpath.c:3832:	*  memcpy is not possible.
libs/libxml2-2.9.4/xpath.c:3838:	* and memcpy the content.
libs/libxml2-2.9.4/xpath.c:3847:		memcpy(val1->nodeTab, val2->nodeTab,
libs/libxml2-2.9.4/xpath.c:3944:	* Note that doing a memcpy of the list, namespace nodes are
libs/libxml2-2.9.4/xpath.c:3951:	    memcpy(set1->nodeTab, set2->nodeTab,
libs/libxml2-2.9.4/xpath.c:4059:	* Note that doing a memcpy of the list, namespace nodes are
libs/libxml2-2.9.4/xpath.c:4066:	    memcpy(set1->nodeTab, set2->nodeTab,
libs/libxml2-2.9.4/xpath.c:5404:    memcpy(ret, val , (size_t) sizeof(xmlXPathObject));
libs/libxml2-2.9.4/xpath.c:10027:	    memcpy(buffer, buf, len);
libs/libxml2-2.9.4/hash.c:269:	memcpy(&(table->table[key]), &(oldtable[i]), sizeof(xmlHashEntry));
libs/libxml2-2.9.4/hash.c:285:		memcpy(&(table->table[key]), iter, sizeof(xmlHashEntry));
libs/libxml2-2.9.4/hash.c:1110:			memcpy(&(table->table[key]), entry, sizeof(xmlHashEntry));
libs/libxml2-2.9.4/xmlcatalog.c:90:	memcpy (ret, line_read, len + 1);
libs/libxml2-2.9.4/testrecurse.c:248:	memcpy(buffer, current, len);
libs/libxml2-2.9.4/testrecurse.c:261:	memcpy(buffer, current, len);
libs/libxml2-2.9.4/dict.c:285:    memcpy(pool->free, name, namelen);
libs/libxml2-2.9.4/dict.c:353:    memcpy(pool->free, prefix, plen);
libs/libxml2-2.9.4/dict.c:356:    memcpy(pool->free, name, namelen);
libs/libxml2-2.9.4/dict.c:685:	    memcpy(&(dict->dict[key]), &(olddict[i]), sizeof(xmlDictEntry));
libs/libxml2-2.9.4/dict.c:727:		memcpy(&(dict->dict[key]), iter, sizeof(xmlDictEntry));
libs/libxml2-2.9.4/relaxng.c:1254:            memcpy(ret->attrs, attrs, sizeof(xmlAttrPtr) * nbAttrs);
libs/libxml2-2.9.4/relaxng.c:1302:    memcpy(ret, state, sizeof(xmlRelaxNGValidState));
libs/libxml2-2.9.4/relaxng.c:1328:        memcpy(ret->attrs, state->attrs,
libs/libxml2-2.9.4/runtest.c:2876:   memcpy(buffer, ptr, len);
libs/libxml2-2.9.4/runtest.c:3069:    memcpy(prefix, base, len);
libs/libxml2-2.9.4/runtest.c:3077:	memcpy(prefix, base, len);
libs/libxml2-2.9.4/runtest.c:3240:    memcpy(prefix, base, len);
libs/libxml2-2.9.4/runtest.c:3320:    memcpy(prefix, base, len);
libs/libxml2-2.9.4/runtest.c:3473:    memcpy(xml, filename, len);
libs/libxml2-2.9.4/runtest.c:3477:    memcpy(xml + len, ".xml", 5);
libs/libxml2-2.9.4/runtest.c:3850:    memcpy(prefix, base, len);
libs/libxml2-2.9.4/xmllint.c:819:	memcpy (ret, line_read, len + 1);
libs/libxml2-2.9.4/doc/examples/io1.c:93:   memcpy(buffer, ptr, len);
libs/libxml2-2.9.4/parser.c:2488:    memcpy(buffer + 2, entity->name, length - 5);
libs/libxml2-2.9.4/parser.c:3096:	memcpy(buffer, buf, len);
libs/libxml2-2.9.4/parser.c:3175:	    memcpy(buffer, buf, len);
libs/libxml2-2.9.4/parser.c:3709:	    memcpy(buffer, buf, len);
libs/libxml2-2.9.4/parser.c:3805:	    memcpy(buffer, buf, len);
libs/libxml2-2.9.4/parser.c:5067:		memcpy(&buf[len], ctxt->input->cur, nbchar);
libs/libxml2-2.9.4/parser.c:12632:	    memcpy(ctxt->sax, sax, sizeof(xmlSAXHandler));
libs/libxml2-2.9.4/parser.c:12634:	    memcpy(ctxt->sax, sax, sizeof(xmlSAXHandlerV1));
libs/libxml2-2.9.4/parser.c:12783:	    memcpy(ctxt->sax, sax, sizeof(xmlSAXHandler));
libs/libxml2-2.9.4/parser.c:12785:	    memcpy(ctxt->sax, sax, sizeof(xmlSAXHandlerV1));
libs/libxml2-2.9.4/SAX2.c:1874:	    memcpy(tmp, str, len);
libs/libxml2-2.9.4/SAX2.c:2609:	    memcpy(&lastChild->content[ctxt->nodelen], ch, len);
libs/libxml2-2.9.4/tree.c:237:    memcpy(&ret[0], prefix, lenp);
libs/libxml2-2.9.4/tree.c:239:    memcpy(&ret[lenp + 1], ncname, lenn);
libs/libxml2-2.9.4/tree.c:7462:		memcpy(rebuf, buf->content, buf->use);
libs/libxml2-2.9.4/ChangeLog:2053:	* xpath.c: Removed a memcpy if xmlXPathNodeSetMerge(); it
libs/libxml2-2.9.4/ChangeLog:2056:	  xmlXPathNodeSetDupNs(); thus a pure memcpy is not possible.
libs/libxml2-2.9.4/ChangeLog:2068:	     set is empty; just memcpy the set.
libs/libxml2-2.9.4/ChangeLog:9930:	  ain't full, malloc/memcpy/free avoid copying memory.
libs/libxml2-2.9.4/ChangeLog:17297:	  avoiding memcpy in production builds MEM_CLEANUP macro use
libs/libxml2-2.9.4/xmlregexp.c:3145:	memcpy(exec->rollbacks[exec->nbRollbacks].counts, exec->counts,
libs/libxml2-2.9.4/xmlregexp.c:3171:	    memcpy(exec->counts, exec->rollbacks[exec->nbRollbacks].counts,
libs/libxml2-2.9.4/xmlregexp.c:4044:		    memcpy(exec->errCounts, exec->counts,
libs/libxml2-2.9.4/xmlregexp.c:4092:		memcpy(exec->errCounts, exec->counts,
libs/libxml2-2.9.4/xmlregexp.c:4183:    memcpy(&str[0], value, lenp);
libs/libxml2-2.9.4/xmlregexp.c:4185:    memcpy(&str[lenp + 1], value2, lenn);
libs/libxml2-2.9.4/xmlregexp.c:5770:	memcpy(&str[0], token, lenp);
libs/libxml2-2.9.4/xmlregexp.c:5772:	memcpy(&str[lenp + 1], token2, lenn);
libs/libxml2-2.9.4/xmlregexp.c:5832:	memcpy(&str[0], token, lenp);
libs/libxml2-2.9.4/xmlregexp.c:5834:	memcpy(&str[lenp + 1], token2, lenn);
libs/libxml2-2.9.4/xmlregexp.c:5902:	memcpy(&str[0], token, lenp);
libs/libxml2-2.9.4/xmlregexp.c:5904:	memcpy(&str[lenp + 1], token2, lenn);
libs/libxml2-2.9.4/xmlregexp.c:6057:	memcpy(&str[0], token, lenp);
libs/libxml2-2.9.4/xmlregexp.c:6059:	memcpy(&str[lenp + 1], token2, lenn);
libs/libxml2-2.9.4/xmlschemas.c:23759:		    memcpy(parBind->nodeTable, bind->nodeTable,
libs/libxml2-2.9.4/python/libxml.c:325:	memcpy(buffer, data, len);
libs/libxml2-2.9.4/python/libxml.c:327:	memcpy(buffer, data, lenread);
libs/libxml2-2.9.4/python/libxml.c:390:	memcpy(buffer, data, len);
libs/libxml2-2.9.4/python/libxml.c:392:	memcpy(buffer, data, lenread);
libs/libxml2-2.9.4/threads.c:779:    memcpy(&ret, &id, sizeof(ret));
libs/xpcom18a4/nsprpub/lib/msgc/src/prmsgc.c:614:    memcpy(hbits, sp->hbits, oldHBytes);
libs/xpcom18a4/nsprpub/lib/ds/plarena.c:254:        memcpy(newp, p, size);
libs/xpcom18a4/nsprpub/lib/libc/src/strdup.c:63:    (void)memcpy(rv, s, n);
libs/xpcom18a4/nsprpub/lib/libc/src/strdup.c:96:    (void)memcpy(rv, s, l);
libs/xpcom18a4/nsprpub/lib/libc/include/plstr.h:499: * memchr, memcmp, memcpy, memccpy, index, rindex, bcmp, bcopy, bzero.
libs/xpcom18a4/nsprpub/pr/src/linking/prlink.c:743:                    memcpy(newGlue, glue, sizeof(glue));
libs/xpcom18a4/nsprpub/pr/src/linking/prlink.c:870:        memcpy(cName, fileSpec.name + 1, fileSpec.name[0]);
libs/xpcom18a4/nsprpub/pr/src/io/prsocket.c:446:	memcpy(&fd2->secret->md.peer_addr, addr, al);
libs/xpcom18a4/nsprpub/pr/src/io/prsocket.c:512:        	memcpy(&fd2->secret->md.peer_addr, addr, al);
libs/xpcom18a4/nsprpub/pr/src/io/prsocket.c:606:		memcpy(buf, fd->secret->peekBuffer, rv);
libs/xpcom18a4/nsprpub/pr/src/io/prsocket.c:648:			memcpy(fd->secret->peekBuffer, buf, rv);
libs/xpcom18a4/nsprpub/pr/src/io/prsocket.c:887:			memcpy(&(*nd)->secret->md.peer_addr, *raddr,
libs/xpcom18a4/nsprpub/pr/src/io/prsocket.c:940:			memcpy(&(*nd)->secret->md.peer_addr, *raddr,
libs/xpcom18a4/nsprpub/pr/src/io/prsocket.c:991:			memcpy(&(*nd)->secret->md.peer_addr, *raddr,
libs/xpcom18a4/nsprpub/pr/src/io/prlayer.c:671:                memcpy(
libs/xpcom18a4/nsprpub/pr/src/io/prlog.c:551:        memcpy(logp, line, nb);
libs/xpcom18a4/nsprpub/pr/src/io/priometh.c:318:        memcpy(*raddr, &remote, PR_NETADDR_SIZE(&remote));
libs/xpcom18a4/nsprpub/pr/src/io/pripv6.c:66:		memcpy((char *) &dst_v4addr->inet.ip, srcp + 12, 4);
libs/xpcom18a4/nsprpub/pr/src/io/pripv6.c:94:		memcpy(dstp + 12,(char *) &src_v4addr->inet.ip, 4);
libs/xpcom18a4/nsprpub/pr/src/io/prprf.c:345:    memcpy(fin, fmt0, amount);
libs/xpcom18a4/nsprpub/pr/src/io/prprf.c:913:		    memcpy( &pattern[1], dolPt, i );
libs/xpcom18a4/nsprpub/pr/src/malloc/prmem.c:303:        memcpy(mt, mb, sizeof *mb);
libs/xpcom18a4/nsprpub/pr/src/malloc/prmem.c:327:    memcpy(mt, mb, sizeof *mb);
libs/xpcom18a4/nsprpub/pr/src/malloc/prmem.c:398:            memcpy(rv, oldptr, mb->s.requestedSize);
libs/xpcom18a4/nsprpub/pr/src/malloc/prmalloc.c:404:    memcpy(young, page_dir,
libs/xpcom18a4/nsprpub/pr/src/malloc/prmalloc.c:910:	    memcpy(p,ptr,osize);
libs/xpcom18a4/nsprpub/pr/src/malloc/prmalloc.c:912:	    memcpy(p,ptr,size);
libs/xpcom18a4/nsprpub/pr/src/misc/prdtoa.c:634:#define Bcopy(x,y) memcpy((char *)&x->sign, (char *)&y->sign, \
libs/xpcom18a4/nsprpub/pr/src/misc/prdtoa.c:3419:        memcpy(buf, result, resultlen);
libs/xpcom18a4/nsprpub/pr/src/misc/prerror.c:88:        memcpy(thread->errorString, text, textLength+1 );
libs/xpcom18a4/nsprpub/pr/src/misc/prerror.c:103:        memcpy(text, thread->errorString, thread->errorStringLength+1);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:223:        memcpy(&addr.inet.ip, &sin->sin_addr, sizeof(sin->sin_addr));
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:227:        memcpy(&addr.ipv6.ip, &sin6->sin6_addr, sizeof(sin6->sin6_addr));
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:495:    memcpy(v6 + 12, v4, 4);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:504:    memcpy(v6 + 12, v4, 4);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:541:	memcpy(to->h_name, from->h_name, len);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:561:			memcpy(to->h_aliases[na], *ap, len);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:585:			memcpy(to->h_addr_list[na], *ap, to->h_length);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:611:	memcpy(to->p_name, from->p_name, len);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:624:		memcpy(to->p_aliases[na], *ap, len);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:1402:            memcpy(&address->ipv6.ip, addr, hostEnt->h_length);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:1408:            memcpy(&address->inet.ip, addr, hostEnt->h_length);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:1872:    memcpy(dstp + 12,(char *) &v4addr, 4);
libs/xpcom18a4/nsprpub/pr/src/misc/prnetdb.c:2153:        memcpy(result, ai->ai_addr, ai->ai_addrlen);
libs/xpcom18a4/nsprpub/pr/src/misc/prrng.c:42: * caused libnspr4.so to export memcpy and some binaries linked with
libs/xpcom18a4/nsprpub/pr/src/misc/prrng.c:43: * libnspr4.so resolved their memcpy references with libnspr4.so.  To
libs/xpcom18a4/nsprpub/pr/src/misc/prrng.c:58:    	memcpy(dst, src, srclen);
libs/xpcom18a4/nsprpub/pr/src/misc/prrng.c:62:    memcpy(dst, (char*)src + (srclen - dstlen), dstlen);
libs/xpcom18a4/nsprpub/pr/src/misc/prrng.c:64:    memcpy(dst, src, dstlen);
libs/xpcom18a4/nsprpub/pr/src/misc/prtime.c:1745:   memcpy(buf, str, strSize);                   \
libs/xpcom18a4/nsprpub/pr/src/md/unix/uxrng.c:268:    memcpy(buf, (char *)&s0[0], cntr_size);
libs/xpcom18a4/nsprpub/pr/src/md/unix/hpux.c:120:            memcpy(newstack, oldstack, BACKTRACE_SIZE);
libs/xpcom18a4/nsprpub/pr/src/md/mac/macio.c:1652:		memcpy(&cDirName, &pascalDirName, 256);
libs/xpcom18a4/nsprpub/pr/src/md/mac/mdmac.c:630:void *memcpy(void *to, const void *from, size_t size)
libs/xpcom18a4/nsprpub/pr/src/md/beos/bfile.c:782:									memcpy( &connectList[j], &connectList[j+1],
libs/xpcom18a4/nsprpub/pr/src/md/beos/bnet.c:622:                memcpy(&connectList[connectCount].addr, addr, addrlen);
libs/xpcom18a4/nsprpub/pr/src/md/windows/ntio.c:1415:        memcpy((char *)raddr, (char *)&Raddr->inet, *rlen);
libs/xpcom18a4/nsprpub/pr/src/md/windows/ntio.c:2037:            memcpy(addr, &fd->secret->md.peer_addr, *len);
libs/xpcom18a4/nsprpub/pr/src/md/windows/w32rng.c:73:    memcpy((char *)buf, &dwLow, nBytes);
libs/xpcom18a4/nsprpub/pr/src/md/windows/w32rng.c:81:    memcpy(((char *)buf) + n, &dwHigh, nBytes);
libs/xpcom18a4/nsprpub/pr/src/md/windows/w32rng.c:92:    memcpy(((char *)buf) + n, &dwVal, nBytes);
libs/xpcom18a4/nsprpub/pr/src/md/windows/w32rng.c:102:    memcpy(((char *)buf) + n, &sTime, nBytes);
libs/xpcom18a4/nsprpub/pr/src/md/os2/os2rng.c:78:    memcpy(buf, &low, nBytes);
libs/xpcom18a4/nsprpub/pr/src/md/os2/os2rng.c:86:    memcpy(((char *)buf) + n, &high, nBytes);
libs/xpcom18a4/nsprpub/pr/src/md/os2/os2rng.c:97:    memcpy(((char *)buf) + n, &val, nBytes);
libs/xpcom18a4/nsprpub/pr/src/md/os2/os2rng.c:107:    memcpy(((char *)buf) + n, &sTime, nBytes);
libs/xpcom18a4/nsprpub/pr/src/threads/prtpd.c:196:            (void)memcpy(
libs/xpcom18a4/nsprpub/pr/tests/sendzlf.c:127:    memcpy(header, HEADER_STR, HEADER_LEN);
libs/xpcom18a4/nsprpub/pr/tests/sendzlf.c:128:    memcpy(trailer, TRAILER_STR, TRAILER_LEN);
libs/xpcom18a4/nsprpub/pr/tests/dbmalloc.c:82:    memcpy(&rv->value[0], line, l+1);
libs/xpcom18a4/nsprpub/tools/httpget.c:156:    memcpy(buf, inputHead, nBytes);
libs/xpcom18a4/xpcom/obsolete/nsFileSpec.cpp:212:        memcpy(mData->mString, inData, inLength);
libs/xpcom18a4/xpcom/obsolete/nsFileSpec.cpp:296:        memcpy(newData, mData, sizeof(Data) + copyLength);
libs/xpcom18a4/xpcom/obsolete/nsIFileStream.cpp:451:        memcpy(mWriteCursor, (aBuf + bufOffset), currentWrite);
libs/xpcom18a4/xpcom/obsolete/nsFileSpecMac.cpp:71:										memcpy(dst, src, 1 + src[0]);
libs/xpcom18a4/xpcom/obsolete/nsFileSpecMac.cpp:128:	memcpy(&dst[1], src, srcLength);
libs/xpcom18a4/xpcom/obsolete/nsFileSpecMac.cpp:139:	memcpy(&dst[1], src, srcLength);
libs/xpcom18a4/xpcom/obsolete/nsFileSpecMac.cpp:188:		memcpy(&newPath[1], inPath, pathSize + 1);
libs/xpcom18a4/xpcom/obsolete/nsFileSpecMac.cpp:551:	memcpy(result, path.get(), strLen);
libs/xpcom18a4/xpcom/obsolete/nsFileSpecMac.cpp:686:	memcpy(mSpec.name, inSpec.mSpec.name, copySize);
libs/xpcom18a4/xpcom/obsolete/nsFileSpecMac.cpp:766:	memcpy(leaf, &mSpec.name[1], mSpec.name[0]);
libs/xpcom18a4/xpcom/components/nsComponentManager.cpp:262:        memcpy(mem, s, len+1);
libs/xpcom18a4/xpcom/components/nsComponentManager.cpp:2463:    memcpy(registryName, prefix, len);
libs/xpcom18a4/xpcom/reflect/xptinfo/src/xptiInterfaceInfo.cpp:126:    memcpy(mName, name, nameLength);
libs/xpcom18a4/xpcom/reflect/xptinfo/src/xptiInterfaceInfo.cpp:138:    memcpy(mName, r.mName, nameLength);
libs/xpcom18a4/xpcom/io/nsFastLoadFile.h:169: *          memcpy(buf, buf + len - rem, rem);
libs/xpcom18a4/xpcom/io/nsLinebreakConverter.cpp:137:    memcpy(resultString, inSrc, sizeof(T) * ioLen); // includes the null, if any
libs/xpcom18a4/xpcom/io/nsStringStream.cpp:224:    memcpy(aBuf, mConstString + mOffset, bytesRead);
libs/xpcom18a4/xpcom/io/macDirectoryCopy.c:672:		memcpy(srcDirName, newName, 32 );
libs/xpcom18a4/xpcom/io/nsStorageStream.cpp:207:        memcpy(mWriteCursor, readCursor, count);
libs/xpcom18a4/xpcom/io/nsStorageStream.cpp:423:        memcpy(writeCursor, mReadCursor, count);
libs/xpcom18a4/xpcom/io/nsPipe3.cpp:796:    memcpy(&toBuf[offset], fromRawSegment, count);
libs/xpcom18a4/xpcom/io/nsPipe3.cpp:1132:    memcpy(toRawSegment, &fromBuf[offset], count);
libs/xpcom18a4/xpcom/io/nsFastLoadFile.cpp:682:            memcpy(buf, buf + len - rem, rem);
libs/xpcom18a4/xpcom/io/nsFastLoadFile.cpp:1940:    memcpy(mHeader.mMagic, magic, MFL_FILE_MAGIC_SIZE);
libs/xpcom18a4/xpcom/io/nsFastLoadFile.cpp:2041:                memcpy(buf, buf + len - rem, rem);
libs/xpcom18a4/xpcom/io/nsLocalFileMac.cpp:161:        memcpy(mBuffer + offset, buf, size);
libs/xpcom18a4/xpcom/io/nsLocalFileMac.cpp:519:    memcpy(&dst[1], src, srcLength);
libs/xpcom18a4/xpcom/io/nsLocalFileMac.cpp:528:    memcpy(&dst[1], src, srcLength);
libs/xpcom18a4/xpcom/io/nsLocalFileMac.cpp:573:                    memcpy(sEllipsisTokenStr, &tokenStr[1], sEllipsisTokenLen);
libs/xpcom18a4/xpcom/io/nsLocalFileMac.cpp:585:        memcpy(outBuf, aNode, srcPos);
libs/xpcom18a4/xpcom/io/nsLocalFileMac.cpp:586:        memcpy(outBuf + srcPos, sEllipsisTokenStr, sEllipsisTokenLen);
libs/xpcom18a4/xpcom/io/nsLocalFileMac.cpp:592:        memcpy(outBuf + destPos, aNode + srcPos, nodeLen - srcPos);
libs/xpcom18a4/xpcom/io/nsLocalFileMac.cpp:1654:        memcpy(newPascalName, srcSpec.name, srcSpec.name[0] + 1);
libs/xpcom18a4/xpcom/io/nsUnicharInputStream.cpp:104:  memcpy(aBuf, us + mPos, sizeof(PRUnichar) * amount);
libs/xpcom18a4/xpcom/io/nsUnicharInputStream.cpp:263:  memcpy(aBuf, mUnicharData->GetBuffer() + mUnicharDataOffset,
libs/xpcom18a4/xpcom/io/nsBinaryStream.cpp:552:    memcpy(cursor, unicodeSegment, segmentLength * sizeof(PRUnichar));
libs/xpcom18a4/xpcom/io/nsByteArrayInputStream.cpp:88:            memcpy (aBuffer, &_buffer[_pos], *aNumRead = _nbytes - _pos);
libs/xpcom18a4/xpcom/io/nsByteArrayInputStream.cpp:93:            memcpy (aBuffer, &_buffer[_pos], *aNumRead = aCount);
libs/xpcom18a4/xpcom/io/nsSegmentedBuffer.cpp:88:            memcpy(&mSegmentArray[mSegmentArrayCount],
libs/xpcom18a4/xpcom/base/nsTraceRefcntImpl.cpp:905:				memcpy(name, tb->name + 1, --nameLength);
libs/xpcom18a4/xpcom/glue/nsMemory.cpp:135:        memcpy(newPtr, ptr, size);
libs/xpcom18a4/xpcom/build/malloc.c:505:  ANSI STD C, but still have memcpy and memset in your C library
libs/xpcom18a4/xpcom/build/malloc.c:510:  have memset and memcpy called. People report that the macro
libs/xpcom18a4/xpcom/build/malloc.c:532:    On Win32 platforms, 'memset()' and 'memcpy()' are already declared in
libs/xpcom18a4/xpcom/build/malloc.c:538:void* memcpy(void*, const void*, size_t);
libs/xpcom18a4/xpcom/build/malloc.c:542:Void_t* memcpy();
libs/xpcom18a4/xpcom/build/malloc.c:1352: ((overlap) ? memmove(dest, src, nbytes) : memcpy(dest, src, nbytes))
libs/xpcom18a4/xpcom/ds/nsCOMArray.cpp:46:// copy constructor - we can't just memcpy here, because
libs/xpcom18a4/xpcom/ds/nsHashtable.cpp:500:        // Use memcpy in case there are embedded NULs.
libs/xpcom18a4/xpcom/ds/nsHashtable.cpp:501:        memcpy(str, mStr, len);
libs/xpcom18a4/xpcom/ds/nsHashtable.cpp:588:    memcpy(str, mStr, len);
libs/xpcom18a4/xpcom/ds/nsHashtable.cpp:627:            // Use memcpy in case there are embedded NULs.
libs/xpcom18a4/xpcom/ds/nsHashtable.cpp:628:            memcpy(str, mStr, len);
libs/xpcom18a4/xpcom/ds/nsHashtable.cpp:711:    memcpy(str, mStr, len);
libs/xpcom18a4/xpcom/ds/nsVariant.cpp:373:            memcpy(*outValue, inValue, allocSize);
libs/xpcom18a4/xpcom/ds/nsVariant.cpp:382:            memcpy(*outValue, inValue, allocSize);
libs/xpcom18a4/xpcom/ds/nsUnicharBuffer.cpp:115:      memcpy(newbuf, mBuffer, mLength * sizeof(PRUnichar));
libs/xpcom18a4/xpcom/ds/nsPersistentProperties.cpp:70:    memcpy(mem, aString.get(), len);
libs/xpcom18a4/xpcom/ds/nsPersistentProperties.cpp:84:    memcpy(mem, aString.get(), len);
libs/xpcom18a4/xpcom/ds/pldhash.c:136:    memcpy(to, from, table->entrySize);
libs/xpcom18a4/xpcom/ds/nsValueArray.cpp:128:            memcpy(mValueArray, aOther.mValueArray, mCount * mBytesPerValue);
libs/xpcom18a4/xpcom/ds/nsSupportsArray.cpp:196:      ::memcpy(mArray, oldArray, mCount * sizeof(nsISupports*));
libs/xpcom18a4/xpcom/ds/nsSupportsArray.cpp:574:    ::memcpy(mArray, oldArray, mCount * sizeof(nsISupports*));
libs/xpcom18a4/xpcom/ds/nsSupportsArray.cpp:613:  ::memcpy(mArray, oldArray, mCount * sizeof(nsISupports*));
libs/xpcom18a4/xpcom/ds/nsVoidArray.cpp:239:    memcpy(newImpl->mArray, mImpl->mArray,
libs/xpcom18a4/xpcom/ds/nsVoidArray.cpp:322:      memcpy(mImpl->mArray, other.mImpl->mArray, otherCount * sizeof(mImpl->mArray[0]));
libs/xpcom18a4/xpcom/ds/nsVoidArray.cpp:328:      memcpy(mImpl->mArray, other.mImpl->mArray, otherCount * sizeof(mImpl->mArray[0]));
libs/xpcom18a4/xpcom/ds/nsCRT.h:117:   ***  nsCRT::memcpy()
libs/xpcom18a4/xpcom/ds/pldhash.h:425: * if your entries move via memcpy and clear via memset(0), you can use these
libs/xpcom18a4/xpcom/ds/nsByteBuffer.cpp:116:      memcpy(newbuf, mBuffer, mLength);
libs/xpcom18a4/xpcom/ds/nsCRT.cpp:256:  memcpy(rslt, str, len * sizeof(PRUnichar));
libs/xpcom18a4/xpcom/string/public/nsCharTraits.h:58:  // for |memcpy|, et al
libs/xpcom18a4/xpcom/string/public/nsCharTraits.h:155:        return NS_STATIC_CAST(char_type*, memcpy(s1, s2, n * sizeof(char_type)));
libs/xpcom18a4/xpcom/string/public/nsCharTraits.h:436:        return NS_STATIC_CAST(char_type*, memcpy(s1, s2, n * sizeof(char_type)));
libs/xpcom18a4/xpcom/typelib/xpidl/xpidl_util.c:64:		memcpy(ns, s, len + 1);
libs/xpcom18a4/xpcom/typelib/xpidl/xpidl_idl.c:610:        memcpy(cb_data->fill.buffer, start, copy);
libs/xpcom18a4/xpcom/typelib/xpt/src/xpt_xdr.c:288:            memcpy(newdata, pool->data, old_size);
libs/xpcom18a4/xpcom/typelib/xpt/src/xpt_xdr.c:351:    memcpy(str->bytes, bytes, length);
libs/xpcom18a4/xpcom/typelib/xpt/src/xpt_xdr.c:453:        memcpy(ident, start, (size_t)len);
libs/xpcom18a4/xpcom/typelib/xpt/src/xpt_struct.c:128:    memcpy(header->magic, XPT_MAGIC, 16);
libs/xpcom18a4/xpcom/typelib/xpt/src/xpt_struct.c:462:            memcpy(new, old, old_size);
libs/xpcom18a4/xpcom/typelib/xpt/src/xpt_struct.c:485:            memcpy(new, old, old_size);
libs/xpcom18a4/xpcom/typelib/xpt/src/xpt_struct.c:508:            memcpy(new, old, old_size);
libs/xpcom18a4/xpcom/typelib/xpt/src/xpt_arena.c:299:    memcpy(cur, s, len);
libs/xpcom18a4/xpcom/typelib/xpt/tools/xpt_link.c:282:                        memcpy(newIDE, IDE_array,
libs/xpcom18a4/xpcom/typelib/xpt/tools/xpt_link.c:300:                        memcpy(newFix, fix_array,
libs/xpcom18a4/xpcom/typelib/xpt/tests/PrimitiveTest.c:42:#include <string.h> /* for memcpy */
libs/xpcom18a4/xpcom/typelib/xpt/tests/PrimitiveTest.c:138:    memcpy(whole, header, hlen);
libs/xpcom18a4/xpcom/typelib/xpt/tests/PrimitiveTest.c:139:    memcpy(whole + hlen, data, dlen);
libs/xpcom18a4/ipc/ipcd/shared/src/ipcMessage.cpp:85:        memcpy(clone->mMsgHdr, mMsgHdr, mMsgHdr->mLen);
libs/xpcom18a4/ipc/ipcd/shared/src/ipcMessage.cpp:141:    memcpy((char *) Data() + offset, data, dataLen);
libs/xpcom18a4/ipc/ipcd/shared/src/ipcMessage.cpp:182:    memcpy(buf, MsgBuf() + mMsgOffset, count);
libs/xpcom18a4/ipc/ipcd/shared/src/ipcMessage.cpp:210:                memcpy((char *) mMsgHdr + mMsgOffset, buf, bufLen);
libs/xpcom18a4/ipc/ipcd/shared/src/ipcMessage.cpp:219:                memcpy((char *) MsgBuf() + mMsgOffset, buf, count);
libs/xpcom18a4/ipc/ipcd/shared/src/ipcMessage.cpp:248:            memcpy(mMsgHdr, buf, bufLen);
libs/xpcom18a4/ipc/ipcd/shared/src/ipcMessage.cpp:274:    memcpy((char *) mMsgHdr + mMsgOffset, buf, count);
libs/xpcom18a4/ipc/ipcd/shared/src/ipcStringList.cpp:52:    memcpy(node->mData, str, len);
libs/xpcom18a4/ipc/ipcd/extensions/dconnect/src/ipcDConnectService.cpp:1484:    memcpy(mReply, op, opLen);
libs/xpcom18a4/ipc/ipcd/extensions/dconnect/src/ipcDConnectService.cpp:3472:  memcpy(&msg->contractid, aContractID, slen + 1);
libs/xpcom18a4/ipc/ipcd/extensions/dconnect/src/ipcDConnectService.cpp:3508:  memcpy(&msg->contractid, aContractID, slen + 1);
libs/xpcom18a4/ipc/ipcd/extensions/dconnect/src/ipcDConnectService.h:81:    memcpy ((void *) op, aOp, aOpLen);
libs/xpcom18a4/ipc/ipcd/extensions/lock/src/ipcLockProtocol.cpp:75:    memcpy(&buf[1], msg->key, len - 1);
libs/xpcom18a4/ipc/ipcd/extensions/transmngr/common/tmTransaction.cpp:77:      memcpy(header, aMessage, aLength);
libs/xpcom18a4/ipc/ipcd/extensions/transmngr/common/tmTransaction.cpp:95:        memcpy((header + 1), aMessage, aLength);
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcdWin.cpp:85:        memcpy(&ipcClientArray[toIndex], &ipcClientArray[fromIndex], sizeof(ipcClient));
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcdUnix.cpp:120:    memcpy(lockFile, baseDir, dirLen);
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcdUnix.cpp:122:    memcpy(lockFile + dirLen + 1, lockName, sizeof(lockName));
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcdUnix.cpp:333:        memcpy(&ipcClientArray[toIndex], &ipcClientArray[fromIndex], sizeof(ipcClient));
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcdUnix.cpp:334:        memcpy(&ipcPollList[toIndex], &ipcPollList[fromIndex], sizeof(PRPollDesc));
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcModuleReg.cpp:120:    memcpy(buf, modulesDir, dLen);
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcModuleReg.cpp:122:    memcpy(buf + dLen + 1, fileName, fLen);
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcModuleReg.cpp:172:    memcpy(modulesDir, exePath, baseLen);
libs/xpcom18a4/ipc/ipcd/daemon/src/ipcModuleReg.cpp:174:    memcpy(modulesDir + baseLen + 1, IPC_MODULES_DIR, sizeof(IPC_MODULES_DIR));
libs/xpcom18a4/ipc/ipcd/util/src/ipcMessageReader.cpp:83:    memcpy(destBuffer, mBufPtr, n);
libs/xpcom18a4/ipc/ipcd/util/src/ipcMessageWriter.cpp:95:    memcpy(mBufPtr, src, n);
libs/xpcom18a4/java/src/nsJavaXPTCStub.cpp:1400:            memcpy(*variant, wchar_ptr, length * sizeof(PRUnichar));
libs/xpcom18a4/java/src/nsJavaWrapper.cpp:949:          memcpy(buf, str, length);
libs/xpcom18a4/java/src/nsJavaWrapper.cpp:1344:              memcpy(buf, aVariant.val.p, len);
libs/xpcom18a4/java/src/nsJavaInterfaces.cpp:175:      memcpy(pszExePath, pszHome, cchHome);
libs/xpcom18a4/java/src/nsJavaInterfaces.cpp:176:      memcpy(pszExePath + cchHome, "/javafake", sizeof("/javafake"));
libs/xpcom18a4/java/tools/genifaces/GenerateJavaInterfaces.cpp:882:    memcpy(pszExePath, pszHome, cchHome);
libs/xpcom18a4/java/tools/genifaces/GenerateJavaInterfaces.cpp:883:    memcpy(pszExePath + cchHome, "/pythonfake", sizeof("/pythonfake"));
libs/xpcom18a4/python/src/PyGInputStream.cpp:126:			memcpy(buf, py_buf, py_size);
libs/xpcom18a4/python/src/VariantUtils.cpp:113:	memcpy(dest, src, sizeof(PRUnichar) * size);
libs/xpcom18a4/python/src/VariantUtils.cpp:404:		memcpy(pthis, PyString_AS_STRING(sequence_ob), sequence_size);
libs/xpcom18a4/python/src/VariantUtils.cpp:406:		memcpy(pthis, PyUnicode_AsUTF8(sequence_ob), sequence_size);
libs/xpcom18a4/python/src/VariantUtils.cpp:517:				memcpy(*pp, &iid, sizeof(iid));
libs/xpcom18a4/python/src/VariantUtils.cpp:1458:			memcpy(this_buffer_pointer, &iid, sizeof(iid));
libs/xpcom18a4/python/src/VariantUtils.cpp:1551:			memcpy(this_buffer_pointer, PyString_AS_STRING(val_use), cb_this_buffer_pointer);
libs/xpcom18a4/python/src/VariantUtils.cpp:1563:			memcpy(this_buffer_pointer, PyBytes_AS_STRING(val_use), cb_this_buffer_pointer);
libs/xpcom18a4/python/src/VariantUtils.cpp:1658:			memcpy(this_buffer_pointer, PyString_AS_STRING(val_use), cb_this_buffer_pointer);
libs/xpcom18a4/python/src/VariantUtils.cpp:1669:			memcpy(this_buffer_pointer, PyBytes_AS_STRING(val_use), cb_this_buffer_pointer);
libs/xpcom18a4/python/src/VariantUtils.cpp:2604:		memcpy(*pp, &iid, sizeof(iid));
libs/xpcom18a4/python/src/VariantUtils.cpp:2836:			memcpy(*(char **)ns_v.val.p, sz, nch);
libs/xpcom18a4/python/src/VariantUtils.cpp:2850:			memcpy(*pp, sz, nch);
libs/xpcom18a4/python/src/VariantUtils.cpp:2901:			memcpy(*(PRUnichar **)ns_v.val.p, sz, nbytes);
libs/xpcom18a4/python/src/PyIInputStream.cpp:151:			memcpy(ob_buf, buf, nread);
libs/xpcom18a4/python/src/module/_xpcom.cpp:894:      memcpy(exepath, home, len);
libs/xpcom18a4/python/src/module/_xpcom.cpp:895:      memcpy(exepath + len, "/pythonfake", sizeof("/pythonfake"));
